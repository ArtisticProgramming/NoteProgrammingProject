!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";n.r(t),n.d(t,"noteJsModel",function(){return o});var o={test:{name:"mostafa"},getNotes:function(e){return axios.get("/GetNotes?page="+e.page+"&perPage="+e.perPage+e.title+e.bookMark+e.noteType+e.projectName+e.technology+e.specificSubject)},deleteNote:function(e){return axios.get("/DeleteNote?id="+e)},getNoteTree:function(){return axios.get("/GetNoteTree")},getNote:function(e){return axios.get("/GetNote?id="+e.id)},updateNote:function(e){return axios.post("/UpdateNote",{model:e})}}},function(e,t,n){"use strict";n.r(t),n.d(t,"codeMirrorComponent",function(){return o});const o=Vue.component("code-mirror",{template:"<textarea>{{body}}</textarea>",props:["body","lang","index"],methods:{methodThatForcesUpdate(){}},mounted:function(){var e=this,t=$(this.$el);CodeMirror.fromTextArea(t[0],{mode:this.lang,lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0}).on("change",t=>{e.$emit("input-text-area",{index:e.index,value:t.getValue()})})},beforeDestroy:function(){let e=0;for(e=0;e<$(".CodeMirror").length;e++){var t=$(".CodeMirror")[e];void 0!==t&&(t.CodeMirror.setOption("mode","text/x-csrc"),t.CodeMirror.getWrapperElement().parentNode.removeChild(t.CodeMirror.getWrapperElement()),t.CodeMirror=null)}},destroyed:function(){}})},function(e,t,n){"use strict";n.r(t),n.d(t,"select2",function(){return o});const o=Vue.component("select2",{props:["options","value","url","multi"],data:()=>({selectValue:"1234"}),template:"<input /> ",mounted:function(){var e=this;o=$(this.$el).select2({allowClear:!0,tags:"true"===e.multi?[]:void 0,maximumInputLength:30,maximumSelectionSize:1,initSelection:function(e,t){},ajax:{url:e.url,dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(console.log(),0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}}}).select2("val","true"===e.multi?[]:"").on("change",function(t){var n=$(this).select2("data");"true"===e.multi&&(n=$(this).select2("data")[0]),console.log("-----------------select 2 Data----------------------------"),console.log(n),null!=n?e.$emit("input-data",n):e.$emit("input-data",{text:"",id:""})})},watch:{value:function(e){console.log(e),""==e&&$(this.$el).select2("val","")},options:function(e){console.log(e)}},destroyed:function(){$(this.$el).off().select2("destroy")}})},function(e,t,n){"use strict";n.r(t),n.d(t,"utility",function(){return o});let o={getUrlParameter:function(e){var t,n,o=window.location.search.substring(1).split("&");for(n=0;n<o.length;n++)if((t=o[n].split("="))[0]===e)return void 0===t[1]||decodeURIComponent(t[1])}}},function(e,t,n){"use strict";n.r(t),n.d(t,"dropdowns",function(){return o});let o={enableNoteType:function(e){$("#nType").select2({initSelection:function(e,t){},ajax:{url:"/GetNoteTypes",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}}}).select2("val","").on("change",function(t){var n=$(this).select2("data");console.log(n),void 0!==n&&(e.nodeModel.noteType.text=n.text,e.nodeModel.noteType.id=n.id)})},enableProject:function(e){$("#project").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetProjectTypes",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){e.projectType="";var n=$(this).select2("data")[0];console.log(n),void 0!==n&&(e.nodeModel.projectType.text=n.text,e.nodeModel.projectType.id=n.id),console.log(e.projectType)})},enableGeneralSubject:function(e){$("#technology").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetTechnologies",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){var n=$(this).select2("data")[0];void 0!==n&&(e.nodeModel.technologyType.text=n.text,e.nodeModel.technologyType.id=n.id)})},enableSpecificSubject:function(e){$("#specificSubject").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetSpecificSubject",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){var n=$(this).select2("data")[0];void 0!==n&&(e.nodeModel.specificSubject.text=n.text,e.nodeModel.specificSubject.id=n.id)})}}},function(e,t,n){n(6),n(7),n(11),n(8),n(9),n(10),n(0),n(1),n(2),n(3),e.exports=n(4)},function(e,t,n){"use strict";n.r(t);n(0);var o=n(1),i=n(2);window.EnableAddNode=function(){var e=new Vue({el:"#anapp",data:{selectedProject:"",selectedSpecificSubject:"",selectedGeneralSubject:"",selectedNoteType:"",message:"Create a Note",nodeModel:{bookMark:!1,title:"",projectType:{},technologyType:{},specificSubject:{},noteType:{},model:[{mainbody:"",desc:"",lang:"htmlmixed"}]},componentKey:1},components:{codeMirrorComponent:o.codeMirrorComponent,select2:i.select2},updated:function(){},methods:{submit(){axios.post("/PostAddNote",{model:this.nodeModel}).then(e=>{this.nodeModel={bookMark:!1,title:"",projectType:{},technologyType:{},specificSubject:{},noteType:{},model:[{mainbody:"",desc:"",lang:"htmlmixed"}],componentKey:1},this.componentKey+=1,this.selectedProject="",this.selectedNoteType="",this.selectedSpecificSubject="",this.selectedGeneralSubject=""}).catch(e=>{alert(e)})},getNoteTypeSelectValue(e){this.nodeModel.noteType.text=e.text,this.nodeModel.noteType.id=e.id,this.selectedNoteType=e.text},getProjectSelectValue(t){e.nodeModel.projectType.text=t.text,e.nodeModel.projectType.id=t.id,this.selectedProject=t.text},getGeneralSubjectSelectValue(t){e.nodeModel.technologyType.text=t.text,e.nodeModel.technologyType.id=t.id,this.selectedGeneralSubject=t.text},getSpecificSubjectSelectValue(t){e.nodeModel.specificSubject.text=t.text,e.nodeModel.specificSubject.id=t.id,this.selectedSpecificSubject=t.text},updateType(e){},updateTechnology(e){},updateProjectType(e){console.log(e),this.nodeModel.projectType=e},updateCodeMirrorText(e){console.log(e),this.nodeModel.model[e.index].mainbody=e.value},add(){this.nodeModel.model.push({mainbody:"",desc:"",lang:""})}},beforeCreate(){console.log("Nothing gets called before me!")},created(){console.log("created ")},mounted(){}})}},function(e,t,n){"use strict";n.r(t);var o=n(0),i=n(1),r=n(3),s=(n(4),n(2));window.EnableVusJs=function(){console.log(o.noteJsModel.test.name);var e="inactive",t=1,n=new Vue({el:"#app",data:{noteType:{},message:"Hello Vue!",searchModel:{searchTextBox:"",bookMark:!1,noteType:"",projectName:"",technology:"",specificSubject:""},boxmodel:[],deleteModalNote:{id:0,index:0,text:""},componentKey:0},components:{codeMirrorComponent:i.codeMirrorComponent,select2:s.select2},updated:function(){},methods:{getNoteTypeSelectValue(e){this.searchModel.noteType=e.text,this.search()},getProjectSelectValue(e){this.searchModel.projectName=e.text,this.search()},getGeneralSubjectSelectValue(e){this.searchModel.technology=e.text,this.search()},getSpecificSubjectSelectValue(e){this.searchModel.specificSubject=e.text,this.search()},search:function(){t=1,this.loadNote(t,!0)},loadNote(t,n){console.log("LLLLLLLLLLLLLLLLOOODDD");var i={page:t,perPage:8,title:"",bookMark:"",noteType:"",projectName:"",technology:"",specificSubject:""};console.log(this.searchModel.searchTextBox),void 0!==this.searchModel.searchTextBox&&""!=this.searchModel.searchTextBox&&(i.title="&title="+this.searchModel.searchTextBox),void 0!==this.searchModel.bookMark&&0!=this.searchModel.bookMark&&(i.bookMark="&bookMark="+this.searchModel.bookMark),void 0!==this.searchModel.noteType&&0!=this.searchModel.noteType&&(i.noteType="&noteType="+this.searchModel.noteType),void 0!==this.searchModel.projectName&&0!=this.searchModel.projectName&&(i.projectName="&projectName="+this.searchModel.projectName),void 0!==this.searchModel.technology&&0!=this.searchModel.technology&&(i.technology="&technology="+this.searchModel.technology),void 0!==this.searchModel.specificSubject&&0!=this.searchModel.specificSubject&&(i.specificSubject="&specificSubject="+this.searchModel.specificSubject),o.noteJsModel.getNotes(i).then(t=>{n?(this.boxmodel=[],this.boxmodel=t.data.model):t.data.model.forEach(e=>{this.boxmodel.push(e)}),e="inactive",this.$nextTick(function(){this.componentKey+=1})})},OpenCloseNote(e){$("#oc-"+e),console.log($(this).parent().parent().children(".cardHeigth"));var t=$("#oc-"+e),n=$(t).parent().parent();return"100px"==$(t).css("height")?($(t).css("height","auto"),$(t).css("overflow-y","hidden"),$(n).removeClass("col-lg-6"),$(n).addClass("col-lg-12")):($(t).css("height","100px"),$(t).css("overflow-y","scroll"),$(n).removeClass("col-lg-12"),$(n).addClass("col-lg-6")),!1},openDeleteModal(e,t){console.log(e),this.deleteModalNote.id=e,this.deleteModalNote.index=t,this.$nextTick(function(){$("#deleteModal").modal("toggle")})},deleteNote(e,t){o.noteJsModel.deleteNote(e).then(e=>{this.$delete(this.boxmodel,t),this.$nextTick(function(){$("#deleteModal").modal("hide"),this.componentKey+=1})})}},created:function(){},mounted(){console.log("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),console.log("page=>"),console.log(r.utility.getUrlParameter("project")),this.loadNote(t)}});$(window).scroll(function(){$(window).scrollTop()+$(window).height()>$(document).height()-5&&"inactive"==e&&(e="active",setTimeout(function(){t+=1,n.loadNote(t)},500))}),$(document).ready(function(){$("#searchTxt").focus()}),$("body").on("click",".OpenCloseNote",function(){})}},function(e,t){!function(){window.noteUtilityJs=window.noteUtilityJs||{};var e=[];for(i=0;i<document.getElementsByClassName("mirrorCode").length;i++){var t=$($(".mirrorCode")[i]).attr("lang");console.log("lang = "+t);var n=CodeMirror.fromTextArea(document.getElementsByClassName("mirrorCode")[i],{mode:t,lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0});e.push(n)}$(document).ready(function(){$("#example thead tr").clone(!0).appendTo("#example thead"),$("#example thead tr:eq(1) th").each(function(t){var n=$(this).text();$(this).html('<input type="text" placeholder="Search '+n+'" />'),$("input",this).on("keyup change",function(){e.column(t).search()!==this.value&&e.column(t).search(this.value).draw()})});var e=$("#example").DataTable({orderCellsTop:!0,fixedHeader:!0})})}()},function(e,t){!function(e){"use strict";var t=1;function n(){e("body").toggleClass("sidebar-toggled"),e(".sidebar").toggleClass("toggled"),e(".sidebar").hasClass("toggled")&&e(".sidebar .collapse").collapse("hide")}e("body").on("click","#addprogrammingnotebody",function(){let n="code"+t;var o='<div class="form-group note-body">\n                          <textarea id="'+n+'" rows="8" name=\'code['+t+'][body]\' style="margin: 10px; "\n                          value="" class="code form-control"></textarea>\n                      </div',i='<div class="row">\n            <div class="form-group col-md-9"><input id="exampleInputEmail1" \n                type="text" aria-describedby="emailHelp"\n                    placeholder="Title" name="code['+t+'][desc]" class="form-control"></div>\n            <div box-id="'+n+'"  class="form-group col-md-3 selectlang">\n            <select class="form-control form-control" name="code['+t+'][codelang]">\n                    <option value="htmlmixed">Html</option>\n                    <option value="text/css"> CSS</option>\n                    <option value="text/javascript"> JavaScript</option>\n                    <option value="text/x-sql"> SQl</option>\n                    <option value="text/x-csharp"> C#</option>\n                    <option value="text/x-python"> Python</option>\n                    <option value="text/x-java"> Java</option>\n                    <option value="text/x-php"> PHP</option>\n                    <option value="text/x-c++src"> C++</option>\n                    <option value="text/x-csrc"> C</option>\n                    <option value="text/x-go"> Go</option>\n                    <option value="text/x-rsrc"> R</option>\n                    <option value="application/x-powershell"> PowerShell</option>\n                </select></div>\n            </div>';e(".note-body").last().after(i+o);CodeMirror.fromTextArea(document.getElementById(n),{lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0});t+=1}),e("body").on("change",".selectlang",function(){e(this).attr("box-id"),e(this).val()}),e("#searchBoxBtn").click(function(){var t=e("#searchBox").val();location.href="/Notes?title="+t}),n(),e("#sidebarToggle, #sidebarToggleTop").on("click",function(e){n()}),e(window).resize(function(){e(window).width()<768&&e(".sidebar .collapse").collapse("hide")}),e("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel",function(t){if(e(window).width()>768){var n=t.originalEvent,o=n.wheelDelta||-n.detail;this.scrollTop+=30*(o<0?1:-1),t.preventDefault()}}),e(document).on("scroll",function(){e(this).scrollTop()>100?e(".scroll-to-top").fadeIn():e(".scroll-to-top").fadeOut()}),e(document).on("click","a.scroll-to-top",function(t){var n=e(this);e("html, body").stop().animate({scrollTop:e(n.attr("href")).offset().top},1e3,"easeInOutExpo"),t.preventDefault()})}(jQuery)},function(e,t){},function(e,t,n){"use strict";n.r(t);!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=' .tree-node { white-space: nowrap; display: flex; flex-direction: column; position: relative; box-sizing: border-box; } .tree-content { display: flex; align-items: center; padding: 3px; cursor: pointer; width: 100%; box-sizing: border-box; } .tree-node:not(.selected) > .tree-content:hover { background: #f6f8fb; } .tree-node.selected > .tree-content { background-color: #e7eef7; } .tree-node.disabled > .tree-content:hover { background: inherit; } .tree-arrow { flex-shrink: 0; height: 30px; cursor: pointer; margin-left: 30px; width: 0; } .tree-arrow.has-child { margin-left: 0; width: 30px; position: relative; } .tree-arrow.has-child:after { border: 1.5px solid #494646; position: absolute; border-left: 0; border-top: 0; left: 9px; top: 50%; height: 9px; width: 9px; transform: rotate(-45deg) translateY(-50%) translateX(0); transition: transform .25s; transform-origin: center; } .tree-arrow.has-child.rtl:after { border: 1.5px solid #494646; position: absolute; border-right: 0; border-bottom: 0; right: 0px; top: 50%; height: 9px; width: 9px; transform: rotate(-45deg) translateY(-50%) translateX(0); transition: transform .25s; transform-origin: center; } .tree-arrow.expanded.has-child:after { transform: rotate(45deg) translateY(-50%) translateX(-5px); } .tree-checkbox { flex-shrink: 0; position: relative; width: 30px; height: 30px; box-sizing: border-box; border: 1px solid #dadada; border-radius: 2px; background: #fff; transition: border-color .25s, background-color .25s; } .tree-checkbox:after, .tree-arrow:after { position: absolute; display: block; content: ""; } .tree-checkbox.checked, .tree-checkbox.indeterminate { background-color: #3a99fc; border-color: #218eff; } .tree-checkbox.checked:after { box-sizing: content-box; border: 1.5px solid #fff; /* probably width would be rounded in most cases */ border-left: 0; border-top: 0; left: 9px; top: 3px; height: 15px; width: 8px; transform: rotate(45deg) scaleY(0); transition: transform .25s; transform-origin: center; } .tree-checkbox.checked:after { transform: rotate(45deg) scaleY(1); } .tree-checkbox.indeterminate:after { background-color: #fff; top: 50%; left: 20%; right: 20%; height: 2px; } .tree-anchor { flex-grow: 2; outline: none; display: flex; text-decoration: none; color: #343434; vertical-align: top; margin-left: 3px; line-height: 24px; padding: 3px 6px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .tree-node.selected > .tree-content > .tree-anchor { outline: none; } .tree-node.disabled > .tree-content > .tree-anchor { color: #989191; background: #fff; opacity: .6; cursor: default; outline: none; } .tree-input { display: block; width: 100%; height: 24px; line-height: 24px; outline: none; border: 1px solid #3498db; padding: 0 4px; } .l-fade-enter-active, .l-fade-leave-active { transition: opacity .3s, transform .3s; transform: translateX(0); } .l-fade-enter, .l-fade-leave-to { opacity: 0; transform: translateX(-2em); } .tree--small .tree-anchor { line-height: 19px; } .tree--small .tree-checkbox { width: 23px; height: 23px; } .tree--small .tree-arrow { height: 23px; } .tree--small .tree-checkbox.checked:after { left: 7px; top: 3px; height: 11px; width: 5px; } .tree-node.has-child.loading > .tree-content > .tree-arrow, .tree-node.has-child.loading > .tree-content > .tree-arrow:after { border-radius: 50%; width: 15px; height: 15px; border: 0; } .tree-node.has-child.loading > .tree-content > .tree-arrow { font-size: 3px; position: relative; border-top: 1.1em solid rgba(45,45,45, 0.2); border-right: 1.1em solid rgba(45,45,45, 0.2); border-bottom: 1.1em solid rgba(45,45,45, 0.2); border-left: 1.1em solid #2d2d2d; -webkit-transform: translateZ(0); -ms-transform: translateZ(0); transform: translateZ(0); left: 5px; -webkit-animation: loading 1.1s infinite linear; animation: loading 1.1s infinite linear; margin-right: 8px; } @-webkit-keyframes loading { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } @keyframes loading { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } ';t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();var o={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",{staticClass:"tree-node",class:e.nodeClass,attrs:{"data-id":e.node.id},on:{mousedown:function(t){return t.stopPropagation(),e.handleMouseDown(t)}}},[n("div",{staticClass:"tree-content",style:["ltr"==e.options.direction?{"padding-left":e.padding}:{"padding-right":e.padding}],on:{click:function(t){return t.stopPropagation(),e.select(t)}}},[n("i",{staticClass:"tree-arrow",class:[{expanded:e.node.states.expanded,"has-child":e.node.children.length||e.node.isBatch},e.options.direction],on:{click:function(t){return t.stopPropagation(),e.toggleExpand(t)}}}),e._v(" "),e.options.checkbox?n("i",{staticClass:"tree-checkbox",class:{checked:e.node.states.checked,indeterminate:e.node.states.indeterminate},on:{click:function(t){return t.stopPropagation(),e.check(t)}}}):e._e(),e._v(" "),n("span",{ref:"anchor",staticClass:"tree-anchor",attrs:{tabindex:"-1"},on:{focus:e.onNodeFocus,dblclick:function(t){e.tree.$emit("node:dblclick",e.node)}}},[n("node-content",{attrs:{node:e.node}})],1)]),e._v(" "),n("transition",{attrs:{name:"l-fade"}},[e.hasChildren()&&e.node.states.expanded?n("ul",{staticClass:"tree-children"},e._l(e.node.children,function(t){return t&&t.visible()?n("node",{key:t.id,attrs:{node:t,options:e.options}}):e._e()})):e._e()])],1)},staticRenderFns:[],name:"Node",inject:["tree"],props:["node","options"],components:{NodeContent:{name:"node-content",props:["node"],render:function(e){var t=this,n=this.node,o=this.node.tree.vm;if(n.isEditing){var i=n.text;return this.$nextTick(function(e){t.$refs.editCtrl.focus()}),e("input",{domProps:{value:n.text,type:"text"},class:"tree-input",on:{input:function(e){i=e.target.value},blur:function(){n.stopEditing(i)},keyup:function(e){13===e.keyCode&&n.stopEditing(i)},mouseup:function(e){e.stopPropagation()}},ref:"editCtrl"})}return o.$scopedSlots.default?o.$scopedSlots.default({node:this.node}):e("span",{domProps:{innerHTML:n.text}})}}},watch:{node:function(){this.node.vm=this}},data:function(){return this.node.vm=this,{loading:!1}},computed:{padding:function(){return this.node.depth*(this.options.paddingLeft?this.options.paddingLeft:this.options.nodeIndent)+"px"},nodeClass:function(){var e=this.node.states,t=this.hasChildren(),n={"has-child":t,expanded:t&&e.expanded,selected:e.selected,disabled:e.disabled,matched:e.matched,dragging:e.dragging,loading:this.loading,draggable:e.draggable};return this.options.checkbox&&(n.checked=e.checked,n.indeterminate=e.indeterminate),n}},methods:{onNodeFocus:function(){this.tree.activeElement=this.node},focus:function(){this.$refs.anchor.focus(),this.node.select()},check:function(){this.node.checked()?this.node.uncheck():this.node.check()},select:function(e){void 0===e&&(e=evnt);var t=e.ctrlKey,n=this.options,o=this.tree,i=this.node;if(o.$emit("node:clicked",i),!n.editing||!i.isEditing){if(n.editing&&i.editable())return this.startEditing();if(n.checkbox&&n.checkOnSelect)return!n.parentSelect&&this.hasChildren()?this.toggleExpand():this.check(t);!n.parentSelect&&this.hasChildren()&&this.toggleExpand(),n.multiple?i.selected()?t?i.unselect():1!=this.tree.selectedNodes.length&&(o.unselectAll(),i.select()):i.select(t):i.selected()&&t?i.unselect():i.select()}},toggleExpand:function(){this.hasChildren()&&this.node.toggleExpand()},hasChildren:function(){return this.node.hasChildren()},startEditing:function(){this.tree._editingNode&&this.tree._editingNode.stopEditing(),this.node.startEditing()},stopEditing:function(){this.node.stopEditing()},handleMouseDown:function(e){this.options.dnd&&this.tree.vm.startDragging(this.node,e)}}};!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=" .tree-dragnode { padding: 10px; border: 1px solid #e7eef7; position: fixed; border-radius: 8px; background: #fff; transform: translate(-50%, -110%); z-index: 10; } ";t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();function i(e,t){var n;return Array.isArray(e)?e.map(function(e){return i(e,t)}):(!1!==(n=t(e))&&e.children&&e.children.length&&(n=i(e.children,t)),n)}function r(e){return 0==!!document?e:(r.__element||(r.__element=document.createElement("div")),r.__element.innerHTML=e,r.__element.innerText)}function s(e){return function(t){return Object.keys(e).every(function(n){if("text"===n||"id"===n){var o=e[n],i=t[n];return i=r(i),function(e){return e instanceof RegExp}(o)?o.test(i):o===i}var s=e[n];return"state"===n&&(n="states"),Object.keys(s).every(function(e){return t[n][e]===s[e]})})}}function a(e,t,n){if(void 0===n&&(n=!0),!e||!e.length||!t)return null;if(n&&(e=function(e){var t=[];return e.forEach(function e(n){t.push(n),n.children&&n.children.forEach(e)}),t}(e)),"number"==typeof t)return e[t]||null;("string"==typeof t||t instanceof RegExp)&&(t={text:t}),"function"!=typeof t&&(t=s(t));var o=e.filter(t);return o.length?o:null}function d(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}function c(){return d()+d()+"-"+d()+"-"+d()+"-"+d()+"-"+d()+d()+d()}function l(e,t){for(var n=[],o=arguments.length-2;o-- >0;)n[o]=arguments[o+2];e.forEach(function(e){return e[t].apply(e,n)})}var h=function(e){function t(t,n){var o;void 0===n&&(n=[]),e.call(this),this.tree=t,(o=this).push.apply(o,n)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.remove=function(){return l(this,"remove"),this},t.prototype.expand=function(){return l(this,"expand"),this},t.prototype.collapse=function(){return l(this,"collapse"),this},t.prototype.select=function(e){return l(this,"select",e),this},t.prototype.unselect=function(){return l(this,"unselect"),this},t.prototype.check=function(){return this.tree.options.checkbox&&l(this,"check"),this},t.prototype.uncheck=function(){return this.tree.options.checkbox&&l(this,"uncheck"),this},t}(Array),p=function(e,t){if(!t)throw new Error("Node can not be empty");if(this.id=t.id||c(),this.states=t.state||{},this.showChildren=!0,this.children=t.children||[],this.parent=t.parent||null,this.isBatch=t.isBatch||!1,this.isEditing=!1,this.data=Object.assign({},t.data||{},{text:t.text}),!e)throw new Error("Node must has a Tree context!");this.tree=e},u={key:{configurable:!0},depth:{configurable:!0},text:{configurable:!0}};p.prototype.$emit=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.tree).$emit.apply(t,["node:"+e,this].concat(n))},p.prototype.getPath=function(){if(!this.parent)return[this];for(var e=[this],t=this;null!==(t=t.parent);)e.push(t);return e},u.key.get=function(){return this.id+this.text},u.depth.get=function(){var e=0,t=this.parent;if(!t||!1===this.showChildren)return e;do{e++}while(t=t.parent);return e},u.text.get=function(){return this.data.text},u.text.set=function(e){var t=this.text;t!==e&&(this.data.text=e,this.$emit("text:changed",e,t))},p.prototype.state=function(e,t){return void 0===t?this.states[e]:(this.states[e]=t,this)},p.prototype.recurseUp=function(e,t){if(void 0===t&&(t=this),t.parent)return!1!==e(t.parent)?this.recurseUp(e,t.parent):void 0},p.prototype.recurseDown=function(e,t){!0!==t&&e(this),this.hasChildren()&&i(this.children,e)},p.prototype.refreshIndeterminateState=function(){if(!this.tree.options.autoCheckChildren)return this;if(this.state("indeterminate",!1),this.hasChildren()){var e=this.children.length,t=0,n=0,o=0;this.children.forEach(function(e){e.checked()&&t++,e.disabled()&&o++,e.indeterminate()&&n++}),t>0&&t===e-o?this.checked()||(this.state("checked",!0),this.tree.check(this),this.$emit("checked")):(this.checked()&&(this.state("checked",!1),this.tree.uncheck(this),this.$emit("unchecked")),this.state("indeterminate",n>0||t>0&&t<e))}this.parent&&this.parent.refreshIndeterminateState()},p.prototype.indeterminate=function(){return this.state("indeterminate")},p.prototype.editable=function(){return!this.state("disabled")&&this.state("editable")},p.prototype.selectable=function(){return!this.state("disabled")&&this.state("selectable")},p.prototype.selected=function(){return this.state("selected")},p.prototype.select=function(e){return!this.selectable()||this.selected()?this:(this.tree.select(this,e),this.state("selected",!0),this.$emit("selected"),this)},p.prototype.unselect=function(){return this.selectable()&&this.selected()?(this.tree.unselect(this),this.state("selected",!1),this.$emit("unselected"),this):this},p.prototype.checked=function(){return this.state("checked")},p.prototype.check=function(){var e=this;if(this.checked()||this.disabled())return this;if(this.indeterminate())return this.uncheck();var t=this.tree.options.checkDisabledChildren;return this.tree.options.autoCheckChildren?(this.recurseDown(function(n){n.state("indeterminate",!1),n.disabled()&&!t||n.checked()||(e.tree.check(n),n.state("checked",!0),n.$emit("checked"))}),this.parent&&this.parent.refreshIndeterminateState()):(this.tree.check(this),this.state("checked",!0),this.$emit("checked")),this},p.prototype.uncheck=function(){var e=this;return!this.indeterminate()&&!this.checked()||this.disabled()?this:(this.tree.options.autoCheckChildren?(this.recurseDown(function(t){t.state("indeterminate",!1),t.checked()&&(e.tree.uncheck(t),t.state("checked",!1),t.$emit("unchecked"))}),this.parent&&this.parent.refreshIndeterminateState()):(this.tree.uncheck(this),this.state("checked",!1),this.$emit("unchecked")),this)},p.prototype.show=function(){return this.visible()?this:(this.state("visible",!0),this.$emit("shown"),this)},p.prototype.hide=function(){return this.hidden()?this:(this.state("visible",!1),this.$emit("hidden"),this)},p.prototype.visible=function(){return this.state("visible")},p.prototype.hidden=function(){return!this.state("visible")},p.prototype.enable=function(){return this.enabled()?this:(this.tree.options.autoDisableChildren?(this.state("disabled",!1),this.$emit("enabled")):this.recurseDown(function(e){e.disabled()&&(e.state("disabled",!1),e.$emit("enabled"))}),this)},p.prototype.enabled=function(){return!this.state("disabled")},p.prototype.disable=function(){return this.disabled()?this:(this.tree.options.autoDisableChildren?this.recurseDown(function(e){e.enabled()&&(e.state("disabled",!0),e.$emit("disabled"))}):(this.state("disabled",!0),this.$emit("disabled")),this)},p.prototype.disabled=function(){return this.state("disabled")},p.prototype.expandTop=function(e){var t=this;this.recurseUp(function(n){n.state("expanded",!0),!0!==e&&t.$emit("expanded",n)})},p.prototype.expand=function(){var e=this;return this.canExpand()?(this.isBatch?this.tree.loadChildren(this).then(function(t){e.state("expanded",!0),e.$emit("expanded")}):(this.state("expanded",!0),this.$emit("expanded")),this):this},p.prototype.canExpand=function(){return this.collapsed()&&this.hasChildren()&&(!this.tree.autoDisableChildren||this.disabled())},p.prototype.canCollapse=function(){return this.expanded()&&this.hasChildren()&&(!this.tree.autoDisableChildren||this.disabled())},p.prototype.expanded=function(){return this.state("expanded")},p.prototype.collapse=function(){return this.canCollapse()?(this.state("expanded",!1),this.$emit("collapsed"),this):this},p.prototype.collapsed=function(){return!this.state("expanded")},p.prototype.toggleExpand=function(){return this._toggleOpenedState()},p.prototype.toggleCollapse=function(){return this._toggleOpenedState()},p.prototype._toggleOpenedState=function(){return this.canCollapse()?this.collapse():this.canExpand()?this.expand():void 0},p.prototype.isDropable=function(){return this.enabled()&&this.state("dropable")},p.prototype.isDraggable=function(){return this.enabled()&&this.state("draggable")&&!this.isEditing},p.prototype.startDragging=function(){return!(!this.isDraggable()||this.state("dragging")||this.isRoot()&&1===this.tree.model.length||(this.tree.options.store&&(this.tree.__silence=!0),this.select(),this.state("dragging",!0),this.$emit("dragging:start"),this.tree.__silence=!1,0))},p.prototype.finishDragging=function(e,t){if(e.isDropable()||"drag-on"!==t){var n=this.tree,o=this.clone(),i=this.parent;o.id=this.id,n.__silence=!0,"drag-on"===t?n.append(e,o):"drag-below"===t?n.after(e,o):"drag-above"===t&&n.before(e,o),this.remove(),e.refreshIndeterminateState(),i&&i.refreshIndeterminateState(),n.__silence=!1,o.state("dragging",!1),this.state("dragging",!1),this.$emit("dragging:finish"),o.state("selected")&&(n.selectedNodes.remove(this),n.selectedNodes.add(o),n.vm.$set(this.state,"selected",!1),n.vm.$set(o.state,"selected",!0)),this.tree.options.store&&this.tree.vm.$emit("LIQUOR_NOISE")}},p.prototype.startEditing=function(){if(this.disabled())return!1;this.isEditing||(this.tree._editingNode=this,this.tree.activeElement=this,this.isEditing=!0,this.$emit("editing:start"))},p.prototype.stopEditing=function(e){if(this.isEditing){this.isEditing=!1,this.tree._editingNode=null,this.tree.activeElement=null;var t=this.text;e&&!1!==e&&this.text!==e&&(this.text=e),this.$emit("editing:stop",t)}},p.prototype.index=function(e){return this.tree.index(this,e)},p.prototype.first=function(){return this.hasChildren()?this.children[0]:null},p.prototype.last=function(){return this.hasChildren()?this.children[this.children.length-1]:null},p.prototype.next=function(){return this.tree.nextNode(this)},p.prototype.prev=function(){return this.tree.prevNode(this)},p.prototype.insertAt=function(e,t){var n=this;if(void 0===t&&(t=this.children.length),e)return e=this.tree.objectToNode(e),Array.isArray(e)?(e.reverse().map(function(e){return n.insertAt(e,t)}),new h(this.tree,[].concat(e))):(e.parent=this,this.children.splice(t,0,e),e.disabled()&&e.hasChildren()&&e.recurseDown(function(e){e.state("disabled",!0)}),this.isBatch||this.$emit("added",e),e)},p.prototype.addChild=function(e){return this.insertAt(e)},p.prototype.append=function(e){return this.addChild(e)},p.prototype.prepend=function(e){return this.insertAt(e,0)},p.prototype.before=function(e){return this.tree.before(this,e)},p.prototype.after=function(e){return this.tree.after(this,e)},p.prototype.empty=function(){for(var e;e=this.children.pop();)e.remove();return this},p.prototype.remove=function(){return this.tree.removeNode(this)},p.prototype.removeChild=function(e){var t=this.find(e);return t?this.tree.removeNode(t):null},p.prototype.find=function(e,t){return this.tree.isNode(e)?e:a(this.children,e,t)},p.prototype.focus=function(){this.vm&&this.vm.focus()},p.prototype.hasChildren=function(){return this.showChildren&&this.isBatch||this.children.length>0},p.prototype.isRoot=function(){return null===this.parent},p.prototype.clone=function(){return this.tree.objectToNode(this.toJSON())},p.prototype.toJSON=function(){var e=this;return{text:this.text,data:this.data,state:this.states,children:this.children.map(function(t){return e.tree.objectToNode(t).toJSON()})}},Object.defineProperties(p.prototype,u);var f={selected:!1,selectable:!0,checked:!1,expanded:!1,disabled:!1,visible:!0,indeterminate:!1,matched:!1,editable:!0,dragging:!1,draggable:!0,dropable:!0};function g(e){return void 0===e&&(e={}),Object.assign({},f,e)}function m(e,t){var n=null;if(t instanceof p)return t;if("string"==typeof t)n=new p(e,{text:t,state:g(),id:c()});else{if(Array.isArray(t))return t.map(function(t){return m(e,t)});(n=new p(e,t)).states=g(n.states),n.id||(n.id=c()),n.children.length&&(n.children=n.children.map(function(t){return(t=m(e,t)).parent=n,t}))}return n}var x=function(e){function t(){e.apply(this,arguments)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.empty=function(){return this.splice(0,this.length),this},t.prototype.has=function(e){return this.includes(e)},t.prototype.add=function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this).push.apply(e,t),this},t.prototype.remove=function(e){var t=this.indexOf(e);return-1===t?this:(this.splice(t,1),this)},t.prototype.removeAll=function(e){for(;this.includes(e);)this.remove(e);return this},t.prototype.top=function(){return this[this.length-1]},t}(Array),y={id:"id",text:"text",children:"children",state:"state",data:"data",isBatch:"isBatch"};var b=function(e,t,n){void 0===n&&(n={}),"string"==typeof e&&(e=JSON.parse(e)),Array.isArray(e)||(e=[e]);var o=Object.assign({},y,n);return e.map(function e(t){var n=function(e,t){return{id:e[t.id],text:e[t.text],children:e[t.children],state:e[t.state],data:e[t.data],isBatch:e[t.isBatch]}}(t,o);return n.children&&!Array.isArray(n.children)&&(n.children=[n.children]),n.children&&(n.children=n.children.map(e)),n}).map(function(e){return m(t,e)})};function v(e){return function(e){return new Promise(function(t,n){var o=new XMLHttpRequest;o.open("GET",e),o.setRequestHeader("Content-Type","application/json"),o.addEventListener("load",function(e){try{var i=JSON.parse(o.response);t(i)}catch(e){n(e)}}),o.send(null)})}(e)}function N(e,t){return e.text<t.text?-1:e.text>t.text?1:0}function k(e,t){return e.text<t.text?1:e.text>t.text?-1:0}function w(e,t){"string"==typeof t&&(t=function(e){switch(e.toLowerCase()){case"asc":return N;case"desc":return k}}(t)),Array.isArray(e)&&"function"==typeof t&&e.sort(t)}function T(e){return new Promise(function(t){setTimeout(t,e)})}var C=function(e){var t=this;this.vm=e,this.options=e.opts,this.activeElement=null;var n,o=this.options.fetchData;"string"==typeof o&&(this.options.fetchData=(n=function(e){return function(t){for(var n,o=/{([^}]+)}/,i=e;n=o.exec(i);)i=i.replace(n[0],t[n[1]]);return i}}(o),function(e){return v(n(e)).catch(t.options.onFetchError)}))};C.prototype.$on=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$on.apply(t,[e].concat(n))},C.prototype.$once=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$once.apply(t,[e].concat(n))},C.prototype.$off=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$off.apply(t,[e].concat(n))},C.prototype.$emit=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];this.__silence||((t=this.vm).$emit.apply(t,[e].concat(n)),this.options.store&&this.vm.$emit("LIQUOR_NOISE"))},C.prototype._sort=function(e,t,n){!1!==n&&this.recurseDown(e,function(e){e.hasChildren()&&w(e.children,t)}),w(e,t)},C.prototype.sortTree=function(e,t){this._sort(this.model,e,t)},C.prototype.sort=function(e,t,n){var o=this,i=this.find(e,!0);i&&t&&i.forEach(function(e){o._sort(e.children,t,n)})},C.prototype.clearFilter=function(){this.recurseDown(function(e){e.state("matched",!1),e.state("visible",!0),e.state("expanded",e.__expanded),e.__expanded=void 0,e.showChildren=!0}),this.vm.matches.length=0,this.vm.$emit("tree:filtered",[],"")},C.prototype.filter=function(e){if(!e)return this.clearFilter();var t=[],n=this.options.filter.matcher,o=this.options.filter,i=o.showChildren,r=o.plainList;return this.recurseDown(function(o){n(e,o)&&t.push(o),o.showChildren=!0,void 0===o.__expanded&&(o.__expanded=o.state("expanded")),o.state("visible",!1),o.state("matched",!1),o.state("expanded",!0)}),t.reverse().forEach(function(e){e.state("matched",!0),e.state("visible",!0),e.showChildren=!r,e.hasChildren()&&e.recurseDown(function(e){e.state("visible",!!i)},!0),e.recurseUp(function(e){e.state("visible",!0),e.state("expanded",!0)}),e.hasChildren()&&e.state("expanded",!1)}),this.vm.matches=t,this.vm.$emit("tree:filtered",t,e),t},C.prototype.selected=function(){return new(Function.prototype.bind.apply(h,[null].concat([this],this.selectedNodes)))},C.prototype.checked=function(){return this.options.checkbox?new(Function.prototype.bind.apply(h,[null].concat([this],this.checkedNodes))):null},C.prototype.loadChildren=function(e){var t=this;if(e){this.$emit("tree:data:fetch",e),this.options.minFetchDelay>0&&e.vm&&(e.vm.loading=!0);var n=this.fetch(e).then(function(n){e.append(n),e.isBatch=!1,t.options.autoCheckChildren&&(e.checked()&&e.recurseDown(function(e){e.state("checked",!0)}),e.refreshIndeterminateState()),t.$emit("tree:data:received",e)});return Promise.all([T(this.options.minFetchDelay),n]).then(function(t){return e.vm&&(e.vm.loading=!1),n})}},C.prototype.fetch=function(e,t){var n=this,o=this.options.fetchData(e);return o.then||(o=v(o).catch(this.options.onFetchError)),!1===t?o:o.then(function(e){return n.parse(e,n.options.modelParse)}).catch(this.options.onFetchError)},C.prototype.fetchInitData=function(){return this.fetch({id:"root",name:"root"},!1)},C.prototype.setModel=function(e){var t=this;if(this.model=this.parse(e,this.options.modelParse),this.vm.model=this.model,this.selectedNodes=new x,this.checkedNodes=new x,i(this.model,function(e){e.tree=t,e.selected()&&t.selectedNodes.add(e),e.checked()&&(t.checkedNodes.add(e),e.parent&&e.parent.refreshIndeterminateState()),t.options.autoDisableChildren&&e.disabled()&&e.recurseDown(function(e){e.state("disabled",!0)})}),!this.options.multiple&&this.selectedNodes.length){var n=this.selectedNodes.top();this.selectedNodes.forEach(function(e){n!==e&&e.state("selected",!1)}),this.selectedNodes.empty().add(n)}this.options.checkOnSelect&&this.options.checkbox&&this.unselectAll()},C.prototype.recurseDown=function(e,t){return!t&&e&&(t=e,e=this.model),i(e,t)},C.prototype.select=function(e,t){var n=this.getNode(e);return!!n&&(this.options.multiple&&t?this.selectedNodes.add(n):(this.unselectAll(),this.selectedNodes.empty().add(n)),!0)},C.prototype.selectAll=function(){var e=this;return!!this.options.multiple&&(this.selectedNodes.empty(),this.recurseDown(function(t){e.selectedNodes.add(t.select(!0))}),!0)},C.prototype.unselect=function(e){var t=this.getNode(e);return!!t&&(this.selectedNodes.remove(t),!0)},C.prototype.unselectAll=function(){for(var e;e=this.selectedNodes.pop();)e.unselect();return!0},C.prototype.check=function(e){this.checkedNodes.add(e)},C.prototype.uncheck=function(e){this.checkedNodes.remove(e)},C.prototype.checkAll=function(){this.recurseDown(function(e){0===e.depth&&(e.indeterminate()&&e.state("indeterminate",!1),e.check())})},C.prototype.uncheckAll=function(){for(var e;e=this.checkedNodes.pop();)e.uncheck();return!0},C.prototype.expand=function(e){return!e.expanded()&&(e.expand(),!0)},C.prototype.collapse=function(e){return!e.collapsed()&&(e.collapse(),!0)},C.prototype.toggleExpand=function(e){return!!e.hasChildren()&&(e.toggleExpand(),!0)},C.prototype.toggleCollapse=function(e){return!!e.hasChildren()&&(e.toggleCollapse(),!0)},C.prototype.expandAll=function(){this.recurseDown(function(e){e.hasChildren()&&e.collapsed()&&e.expand()})},C.prototype.collapseAll=function(){this.recurseDown(function(e){e.hasChildren()&&e.expanded()&&e.collapse()})},C.prototype.index=function(e,t){var n=e.parent,o=(n=n?n.children:this.model).indexOf(e);return t?{index:o,target:n,node:n[o]}:o},C.prototype.nextNode=function(e){var t=this.index(e,!0);return t.target[t.index+1]||null},C.prototype.nextVisibleNode=function(e){if(e.hasChildren()&&e.expanded())return e.first();var t=this.nextNode(e);return!t&&e.parent?e.parent.next():t},C.prototype.prevNode=function(e){var t=this.index(e,!0);return t.target[t.index-1]||null},C.prototype.prevVisibleNode=function(e){var t=this.prevNode(e);return t?t.hasChildren()&&t.expanded()?t.last():t:e.parent},C.prototype.addToModel=function(e,t){var n=this;return void 0===t&&(t=this.model.length),e=this.objectToNode(e),this.model.splice(t,0,e),this.recurseDown(e,function(e){e.tree=n}),this.$emit("node:added",e),e},C.prototype.append=function(e,t){var n=this.find(e);return!!n&&n.append(t)},C.prototype.prepend=function(e,t){var n=this.find(e);return!!n&&n.prepend(t)},C.prototype.before=function(e,t){e=this.find(e);var n=this.index(e,!0),o=this.objectToNode(t);return!!~n.index&&(n.target.splice(n.index,0,o),o.parent=e.parent,this.$emit("node:added",o),o)},C.prototype.after=function(e,t){e=this.find(e);var n=this.index(e,!0),o=this.objectToNode(t);return!!~n.index&&(n.target.splice(n.index+1,0,o),o.parent=e.parent,this.$emit("node:added",o),o)},C.prototype.addNode=function(e){var t=this.model.length;return e=m(e),this.model.splice(t,0,e),this.$emit("node:added",e),e},C.prototype.remove=function(e,t){return this.removeNode(this.find(e,t))},C.prototype.removeNode=function(e){if(e instanceof h)return e.remove();if(!e)return!1;if(e.parent){var t=e.parent.children;~t.indexOf(e)&&t.splice(t.indexOf(e),1)}else~this.model.indexOf(e)&&this.model.splice(this.model.indexOf(e),1);e.parent&&e.parent.indeterminate()&&!e.parent.hasChildren()&&e.parent.state("indeterminate",!1),null!==this.activeElement&&e.id===this.activeElement.id&&(this.activeElement=null),e.parent=null,this.$emit("node:removed",e),this.selectedNodes.remove(e),this.checkedNodes.remove(e);var n=this.vm.matches;return n&&n.length&&n.includes(e)&&n.splice(n.indexOf(e),1),e},C.prototype.isNode=function(e){return e instanceof p},C.prototype.find=function(e,t){if(this.isNode(e))return e;var n=a(this.model,e);return n&&n.length?new h(this,!0===t?n:[n[0]]):null},C.prototype.getNodeById=function(e){var t=null;return i(this.model,function(n){if(""+n.id===e)return t=n,!1}),t},C.prototype.getNode=function(e){return this.isNode(e)?e:null},C.prototype.objectToNode=function(e){return m(this,e)},C.prototype.parse=function(e,t){t||(t=this.options.propertyNames);try{return b(e,this,t)}catch(e){return console.error(e),[]}};var M={ARROW_LEFT:37,ARROW_TOP:38,ARROW_RIGHT:39,ARROW_BOTTOM:40,SPACE:32,DELETE:46,ENTER:13,ESC:27},S=[37,38,39,40,32];function D(e){e.vm.$el.addEventListener("keydown",function(t){var n=t.keyCode,o=e.activeElement;if(e.isNode(o))if(o.isEditing)switch(n){case M.ESC:return o.stopEditing(!1)}else switch(S.includes(n)&&(t.preventDefault(),t.stopPropagation()),n){case M.ARROW_LEFT:return function(e,t){if(t.expanded())t.collapse();else{var n=t.parent;n&&n.focus()}}(0,o);case M.ARROW_RIGHT:return function(e,t){if(t.collapsed())t.expand();else{var n=t.first();n&&n.focus()}}(0,o);case M.ARROW_TOP:return function e(t,n){var o=t.prevVisibleNode(n);if(o)return o.disabled()?e(t,o):void o.focus()}(e,o);case M.ARROW_BOTTOM:return function e(t,n){var o=t.nextVisibleNode(n);if(o)return o.disabled()?e(t,o):void o.focus()}(e,o);case M.SPACE:case M.ENTER:return function(e,t){e.options.checkbox&&(t.checked()?t.uncheck():t.check())}(e,o);case M.DELETE:return function(e,t){var n=e.options.deletion;n&&("function"==typeof n?!0===n(t)&&t.remove():!0===n&&t.remove())}(e,o)}},!0)}function E(e,t){if(!1===e)throw new Error(t)}var j={mounted:function(){var e,t=this,n=new C(this);this.tree=n,this._provided.tree=n,!this.data&&this.opts.fetchData?e=n.fetchInitData():this.data&&this.data.then?(e=this.data,this.loading=!0):e=Promise.resolve(this.data),e.then(function(e){e||(e=[]),t.opts.store?t.connectStore(t.opts.store):t.tree.setModel(e),t.loading&&(t.loading=!1),t.$emit("tree:mounted",t),function(e){var t=e.opts,n=t.multiple,o=t.checkbox,i=e.tree,r=function(t){var i=e.selected();o?e.$emit("input",{selected:n?i:i[0]||null,checked:e.checked()}):e.$emit("input",n?i:i[0]||null)};r(),i.$on("node:selected",r),i.$on("node:unselected",r),o&&(i.$on("node:checked",r),i.$on("node:unchecked",r)),i.$on("node:added",function(e,t){var n=t||e;o&&(n.state("checked")&&!i.checkedNodes.has(n)&&i.checkedNodes.add(n),n.refreshIndeterminateState()),n.state("selected")&&!i.selectedNodes.has(n)&&i.select(n),r()})}(t)}),!1!==this.opts.keyboardNavigation&&D(n)},methods:{connectStore:function(e){var t=this,n=e.store,o=e.mutations,i=e.getter,r=e.dispatcher;E("function"==typeof i,"`getter` must be a function"),E("function"==typeof r,"`dispatcher` must be a function"),void 0!==o&&E(Array.isArray(o),"`mutations` must be an array"),n.subscribe(function(e,n){o?o.includes(e.type)&&t.tree.setModel(i()):t.tree.setModel(i())}),this.tree.setModel(i()),this.$on("LIQUOR_NOISE",function(){t.$nextTick(function(e){r(t.toJSON())})})},recurseDown:function(e){this.tree.recurseDown(e)},selected:function(){return this.tree.selected()},checked:function(){return this.tree.checked()},append:function(e,t){return t?this.tree.append(e,t):this.tree.addToModel(e,this.tree.model.length)},prepend:function(e,t){return t?this.tree.prepend(e,t):this.tree.addToModel(e,0)},addChild:function(e,t){return this.append(e,t)},remove:function(e,t){return this.tree.remove(e,t)},before:function(e,t){return t?this.tree.before(e,t):this.prepend(e)},after:function(e,t){return t?this.tree.after(e,t):this.append(e)},find:function(e,t){return this.tree.find(e,t)},findAll:function(e){return this.tree.find(e,!0)},expandAll:function(){return this.tree.expandAll()},collapseAll:function(){return this.tree.collapseAll()},sortTree:function(e,t){return this.tree.sortTree(e,t)},sort:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.tree).sort.apply(e,t)},setModel:function(e){return this.tree.setModel(e)},getRootNode:function(){return 1===this.tree.model.length?this.tree.model[0]:this.tree.model},toJSON:function(){return JSON.parse(JSON.stringify(this.model))}}},_={ABOVE:"drag-above",BELOW:"drag-below",ON:"drag-on"};function O(e){return e.path?e.path:e.composedPath?e.composedPath():function(e){for(var t=e.target,n=[];t;){if(n.push(t),"HTML"===t.tagName)return n.push(document),n.push(window),n;t=t.parentElement}return n}(e)}function A(e){return function(e){for(var t,n=0,o=O(e);n<o.length;n++)if(t=o[n].className||"",/tree-node/.test(t))return o[n];return null}(e)||null}function L(e,t){if(e){var n=e.className;if(t)new RegExp(t).test(n)||(n+=" "+t);else{for(var o in _)n=n.replace(_[o],"");n.replace("dragging","")}e.className=n.replace(/\s+/g," ")}}function P(e,t,n){if(t&&t[n]&&"function"==typeof t[n])return!1!==t[n].apply(t,e)}var R={methods:{onDragStart:function(e){e.preventDefault()},startDragging:function(e,t){e.isDraggable()&&!1!==P([e],this.tree.options.dnd,"onDragStart")&&(this.$$startDragPosition=[t.clientX,t.clientY],this.$$possibleDragNode=e,this.initDragListeners())},initDragListeners:function(){var e,t=this,n=function(){window.removeEventListener("mouseup",o,!0),window.removeEventListener("mousemove",i,!0)},o=function(o){t.$$startDragPosition||o.stopPropagation(),t.draggableNode&&t.draggableNode.node.state("dragging",!1),t.$$dropDestination&&t.tree.isNode(t.$$dropDestination)&&t.$$dropDestination.vm&&(L(t.$$dropDestination.vm.$el,null),!1!==P([t.draggableNode.node,t.$$dropDestination,e],t.tree.options.dnd,"onDragFinish")&&(t.$$dropDestination.isDropable()||e!==_.ON)&&e&&t.draggableNode.node.finishDragging(t.$$dropDestination,e),t.$$dropDestination=null),t.$$possibleDragNode=null,t.$set(t,"draggableNode",null),n()},i=function(o){if(!t.$$startDragPosition||function(e,t){return Math.abs(e.clientX-t[0])>5||Math.abs(e.clientY-t[1])>5}(o,t.$$startDragPosition)){if(t.$$startDragPosition=null,t.$$possibleDragNode){if(!1===t.$$possibleDragNode.startDragging())return n(),void(t.$$possibleDragNode=null);t.$set(t,"draggableNode",{node:t.$$possibleDragNode,left:0,top:0}),t.$$possibleDragNode=null}t.draggableNode.left=o.clientX,t.draggableNode.top=o.clientY;var i=A(o);if(function(e){for(var t in _)for(var n=e.querySelectorAll("."+_[t]),o=0;o<n.length;o++)L(n[o])}(t.$el),i){var r=i.getAttribute("data-id");if(t.draggableNode.node.id===r)return;if(t.$$dropDestination&&t.$$dropDestination.id===r||(t.$$dropDestination=t.tree.getNodeById(r)),t.$$dropDestination&&t.draggableNode.node&&t.$$dropDestination.getPath().includes(t.draggableNode.node))return void(t.$$dropDestination=null);e=function(e,t){var n=t.getBoundingClientRect(),o=n.height/3,i=_.ON;return n.top+o>=e.clientY?i=_.ABOVE:n.top+2*o<=e.clientY&&(i=_.BELOW),i}(o,i);var s=P([t.draggableNode.node,t.$$dropDestination,e],t.tree.options.dnd,"onDragOn");t.$$dropDestination.isDropable()&&!1!==s||e!==_.ON||(e=null),L(i,e)}}};window.addEventListener("mouseup",o,!0),window.addEventListener("mousemove",i,!0)}}};!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=" .tree { overflow: auto; } .tree-root, .tree-children { list-style: none; padding: 0; } .tree > .tree-root, .tree > .tree-filter-empty { padding: 3px; box-sizing: border-box; } .tree.tree--draggable .tree-node:not(.selected) > .tree-content:hover { background: transparent; } .drag-above, .drag-below, .drag-on { position: relative; z-index: 1; } .drag-on > .tree-content { background: #fafcff; outline: 1px solid #7baff2; } .drag-above > .tree-content::before, .drag-below > .tree-content::after { display: block; content: ''; position: absolute; height: 8px; left: 0; right: 0; z-index: 2; box-sizing: border-box; background-color: #3367d6; border: 3px solid #3367d6; background-clip: padding-box; border-bottom-color: transparent; border-top-color: transparent; border-radius: 0; } .drag-above > .tree-content::before { top: 0; transform: translateY(-50%); } .drag-below > .tree-content::after { bottom: 0; transform: translateY(50%); } ";t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();var B={direction:"ltr",multiple:!0,checkbox:!1,checkOnSelect:!1,autoCheckChildren:!0,autoDisableChildren:!0,checkDisabledChildren:!0,parentSelect:!1,keyboardNavigation:!0,nodeIndent:24,minFetchDelay:0,fetchData:null,propertyNames:null,deletion:!1,dnd:!1,editing:!1,onFetchError:function(e){throw e}},I={emptyText:"Nothing found!",matcher:function(e,t){var n=new RegExp(e,"i").test(t.text);return!(n&&t.parent&&new RegExp(e,"i").test(t.parent.text))&&n},plainList:!1,showChildren:!0},V={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(e.tag,{tag:"component",class:{tree:!0,"tree-loading":this.loading,"tree--draggable":!!this.draggableNode},attrs:{role:"tree"}},[e.filter&&0==e.matches.length?[n("div",{staticClass:"tree-filter-empty",domProps:{innerHTML:e._s(e.opts.filter.emptyText)}})]:[n("ul",{staticClass:"tree-root",on:{dragstart:e.onDragStart}},[e.opts.filter.plainList&&e.matches.length>0?e._l(e.matches,function(t){return t.visible()?n("TreeNode",{key:t.id,attrs:{node:t,options:e.opts}}):e._e()}):e._l(e.model,function(t){return t&&t.visible()?n("TreeNode",{key:t.id,attrs:{node:t,options:e.opts}}):e._e()})],2)],e._v(" "),e.draggableNode?n("DraggableNode",{attrs:{target:e.draggableNode}}):e._e()],2)},staticRenderFns:[],name:"Tree",components:{TreeNode:o,DraggableNode:{render:function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"tree-dragnode",style:this.style},[this._v(" "+this._s(this.target.node.text)+" ")])},staticRenderFns:[],name:"DragNode",props:["target"],computed:{style:function(){return void 0===this.target.top?"display: none":"top: "+this.target.top+"px; left: "+this.target.left+"px"}}}},mixins:[j,R],provide:function(e){return{tree:null}},props:{data:{},options:{type:Object,default:function(e){return{}}},filter:String,tag:{type:String,default:"div"}},watch:{filter:function(e){this.tree.filter(e)}},data:function(){var e=Object.assign({},B,this.options);return e.filter=Object.assign({},I,e.filter),{model:null,tree:null,loading:!1,opts:e,matches:[],draggableNode:null}}};V.install=function(e){e.component(V.name,V)},"undefined"!=typeof window&&window.Vue&&window.Vue.use(V);var F=V,J=n(0),G=n(1);new Vue({el:"#appList",components:{LiquorTree:F,codeMirrorComponent:G.codeMirrorComponent},data:function(){return{editMode:!1,componentKey:1,boxmodel:[],treeFilter0:"",treeOptions0:{filter:{emptyText:""}},treeData:this.getData(),treeOptions:{},deleteModalNote:{id:0,index:0,text:""}}},mounted(){$("#filter").focus()},methods:{filter(){},getData:()=>fetch("/GetNoteTree").then(e=>e.json()).catch(e=>console.log(e)),getNote(e){J.noteJsModel.getNote(e).then(e=>{console.log(e.data.model),this.boxmodel=[],this.editMode=!1,this.boxmodel.push(e.data.model),this.$nextTick(function(){this.componentKey+=1})})},deleteNote(e,t){J.noteJsModel.deleteNote(e).then(e=>{this.$delete(this.boxmodel,t),this.treeData=[],this.$nextTick(function(){$("#deleteModal").modal("hide"),this.componentKey+=1})})},updateCodeMirrorText(e){console.log(e),this.boxmodel[0].code[e.index].mainbody=e.value},search:function(){console.log(this.$refs)},updateNote(){var e=this.boxmodel[0];J.noteJsModel.updateNote(e).then(e=>{this.editMode=!1,alert("The recorde was updated successfully."),this.$nextTick(function(){this.componentKey+=1})})},openDeleteModal(e,t){console.log(e),this.deleteModalNote.id=e,this.deleteModalNote.index=t,this.$nextTick(function(){$("#deleteModal").modal("toggle")})},addNoteCode(){this.boxmodel[0].code.push({description:"",mainbody:"",porgrammingStylelanguge:""}),this.$nextTick(function(){this.componentKey+=1})},deleteNodeCode(e){this.boxmodel[0].code.splice(e,1),this.$nextTick(function(){this.componentKey+=1})},editMode(){alert("editMode"),this.editMode?this.editMode=!1:this.editMode=!0},onNodeSelected(e){0==e.children.length&&this.getNote(e)}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2FwcC9tb2RlbC9ub3RlSnNNb2RlbC5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXBwL2NvbXBvbmVudHMvY29kZU1pcnJvckNvbXBvbmVudC5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXBwL2NvbXBvbmVudHMvc2VsZWN0Mi5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXBwL2NvbW1vbi91dGlsaXR5SnMuanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2FwcC9jb21tb24vZHJvcGRvd25zSnMuanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2FwcC9BZGROb3RlSnMuanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2FwcC9Ob3Rlc0pzLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9hcHAvTm90ZVV0aWxpdHlKcy5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXBwL3NiLWFkbWluLTIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xpcXVvci10cmVlL2Rpc3QvbGlxdW9yLXRyZWUuZXNtLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9hcHAvTm90ZUxpc3RKcy5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIl9fd2VicGFja19leHBvcnRzX18iLCJub3RlSnNNb2RlbCIsInRlc3QiLCJnZXROb3RlcyIsInBhcmFtIiwiYXhpb3MiLCJwYWdlIiwicGVyUGFnZSIsInRpdGxlIiwiYm9va01hcmsiLCJub3RlVHlwZSIsInByb2plY3ROYW1lIiwidGVjaG5vbG9neSIsInNwZWNpZmljU3ViamVjdCIsImRlbGV0ZU5vdGUiLCJpZCIsImdldE5vdGVUcmVlIiwiZ2V0Tm90ZSIsIm1vZGVsIiwidXBkYXRlTm90ZSIsInBvc3QiLCJjb2RlTWlycm9yQ29tcG9uZW50IiwiVnVlIiwiY29tcG9uZW50IiwidGVtcGxhdGUiLCJwcm9wcyIsIm1ldGhvZHMiLCJbb2JqZWN0IE9iamVjdF0iLCJtb3VudGVkIiwidm0iLCJ0aGlzIiwiZWxlbWVudCIsIiQiLCIkZWwiLCJDb2RlTWlycm9yIiwiZnJvbVRleHRBcmVhIiwibGFuZyIsImxpbmVOdW1iZXJzIiwic3R5bGVBY3RpdmVMaW5lIiwibWF0Y2hCcmFja2V0cyIsInZpZXdwb3J0TWFyZ2luIiwiSW5maW5pdHkiLCJvbiIsImVkaXRvciIsIiRlbWl0IiwiaW5kZXgiLCJnZXRWYWx1ZSIsImJlZm9yZURlc3Ryb3kiLCJsZW5ndGgiLCJjbSIsInVuZGVmaW5lZCIsInNldE9wdGlvbiIsImdldFdyYXBwZXJFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiZGVzdHJveWVkIiwic2VsZWN0MiIsImRhdGEiLCJzZWxlY3RWYWx1ZSIsImFsbG93Q2xlYXIiLCJ0YWdzIiwibXVsdGkiLCJtYXhpbXVtSW5wdXRMZW5ndGgiLCJtYXhpbXVtU2VsZWN0aW9uU2l6ZSIsImluaXRTZWxlY3Rpb24iLCJjYWxsYmFjayIsImFqYXgiLCJ1cmwiLCJkYXRhVHlwZSIsInF1aWV0TWlsbGlzIiwidGVybSIsInF1ZXJ5IiwicmVzdWx0cyIsImNyZWF0ZVNlYXJjaENob2ljZSIsImNvbnNvbGUiLCJsb2ciLCJmaWx0ZXIiLCJ0ZXh0IiwibG9jYWxlQ29tcGFyZSIsImUiLCJ3YXRjaCIsIm9wdGlvbnMiLCJvZmYiLCJ1dGlsaXR5IiwiZ2V0VXJsUGFyYW1ldGVyIiwic1BhcmFtIiwic1BhcmFtZXRlck5hbWUiLCJzVVJMVmFyaWFibGVzIiwid2luZG93IiwibG9jYXRpb24iLCJzZWFyY2giLCJzdWJzdHJpbmciLCJzcGxpdCIsImRlY29kZVVSSUNvbXBvbmVudCIsImRyb3Bkb3ducyIsImVuYWJsZU5vdGVUeXBlIiwiYXBwIiwibm9kZU1vZGVsIiwiZW5hYmxlUHJvamVjdCIsIm11bHRpcGxlIiwicHJvamVjdFR5cGUiLCJlbmFibGVHZW5lcmFsU3ViamVjdCIsInRlY2hub2xvZ3lUeXBlIiwiZW5hYmxlU3BlY2lmaWNTdWJqZWN0IiwiRW5hYmxlQWRkTm9kZSIsImVsIiwic2VsZWN0ZWRQcm9qZWN0Iiwic2VsZWN0ZWRTcGVjaWZpY1N1YmplY3QiLCJzZWxlY3RlZEdlbmVyYWxTdWJqZWN0Iiwic2VsZWN0ZWROb3RlVHlwZSIsIm1lc3NhZ2UiLCJtYWluYm9keSIsImRlc2MiLCJjb21wb25lbnRLZXkiLCJjb21wb25lbnRzIiwiX2NvbXBvbmVudHNfY29kZU1pcnJvckNvbXBvbmVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2NvbXBvbmVudHNfc2VsZWN0Ml9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwidXBkYXRlZCIsInRoZW4iLCJyZXNwb25zZSIsImNhdGNoIiwiZXJyb3IiLCJhbGVydCIsInZhcmlhYmxlIiwiaXRlbSIsInB1c2giLCJfbW9kZWxfbm90ZUpzTW9kZWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9jb21tb25fdXRpbGl0eUpzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfY29tcG9uZW50c19zZWxlY3QyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJFbmFibGVWdXNKcyIsImFjdGlvbiIsInNlYXJjaE1vZGVsIiwic2VhcmNoVGV4dEJveCIsImJveG1vZGVsIiwiZGVsZXRlTW9kYWxOb3RlIiwibG9hZE5vdGUiLCJyZXNldCIsImZvckVhY2giLCIkbmV4dFRpY2siLCJwYXJlbnQiLCJjaGlsZHJlbiIsInNlbGN0b3IiLCJzZWxlIiwiY3NzIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsIm1vZGFsIiwiJGRlbGV0ZSIsImNyZWF0ZWQiLCJzY3JvbGwiLCJzY3JvbGxUb3AiLCJoZWlnaHQiLCJkb2N1bWVudCIsInNldFRpbWVvdXQiLCJyZWFkeSIsImZvY3VzIiwibm90ZVV0aWxpdHlKcyIsImVkaXRBcnIiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwiYXR0ciIsImNsb25lIiwiYXBwZW5kVG8iLCJlYWNoIiwiaHRtbCIsInRhYmxlIiwiY29sdW1uIiwiZHJhdyIsIkRhdGFUYWJsZSIsIm9yZGVyQ2VsbHNUb3AiLCJmaXhlZEhlYWRlciIsImlkYyIsInRvZ2dsZVNpZGViYXIiLCJ0b2dnbGVDbGFzcyIsImhhc0NsYXNzIiwiY29sbGFwc2UiLCJ0ZXh0QXJlYUJvZHkiLCJyb3ciLCJsYXN0IiwiYWZ0ZXIiLCJnZXRFbGVtZW50QnlJZCIsInZhbCIsImNsaWNrIiwicmVzdWx0IiwiaHJlZiIsInJlc2l6ZSIsIndpZHRoIiwiZTAiLCJvcmlnaW5hbEV2ZW50IiwiZGVsdGEiLCJ3aGVlbERlbHRhIiwiZGV0YWlsIiwicHJldmVudERlZmF1bHQiLCJmYWRlSW4iLCJmYWRlT3V0IiwiJGFuY2hvciIsInN0b3AiLCJhbmltYXRlIiwib2Zmc2V0IiwialF1ZXJ5IiwiaGVhZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImFwcGVuZENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJUcmVlTm9kZSIsInJlbmRlciIsIiRjcmVhdGVFbGVtZW50IiwiX3NlbGYiLCJfYyIsInN0YXRpY0NsYXNzIiwiY2xhc3MiLCJub2RlQ2xhc3MiLCJhdHRycyIsImRhdGEtaWQiLCJub2RlIiwibW91c2Vkb3duIiwic3RvcFByb3BhZ2F0aW9uIiwiaGFuZGxlTW91c2VEb3duIiwic3R5bGUiLCJkaXJlY3Rpb24iLCJwYWRkaW5nLWxlZnQiLCJwYWRkaW5nIiwicGFkZGluZy1yaWdodCIsInNlbGVjdCIsImV4cGFuZGVkIiwic3RhdGVzIiwiaGFzLWNoaWxkIiwiaXNCYXRjaCIsInRvZ2dsZUV4cGFuZCIsIl92IiwiY2hlY2tib3giLCJjaGVja2VkIiwiaW5kZXRlcm1pbmF0ZSIsImNoZWNrIiwiX2UiLCJyZWYiLCJ0YWJpbmRleCIsIm9uTm9kZUZvY3VzIiwiZGJsY2xpY2siLCJ0cmVlIiwiaGFzQ2hpbGRyZW4iLCJfbCIsInZpc2libGUiLCJzdGF0aWNSZW5kZXJGbnMiLCJpbmplY3QiLCJOb2RlQ29udGVudCIsImlzRWRpdGluZyIsIiRyZWZzIiwiZWRpdEN0cmwiLCJkb21Qcm9wcyIsImlucHV0IiwidGFyZ2V0IiwiYmx1ciIsInN0b3BFZGl0aW5nIiwia2V5dXAiLCJrZXlDb2RlIiwibW91c2V1cCIsIiRzY29wZWRTbG90cyIsImRlZmF1bHQiLCJpbm5lckhUTUwiLCJsb2FkaW5nIiwiY29tcHV0ZWQiLCJkZXB0aCIsInBhZGRpbmdMZWZ0Iiwibm9kZUluZGVudCIsInNlbGVjdGVkIiwiZGlzYWJsZWQiLCJtYXRjaGVkIiwiZHJhZ2dpbmciLCJkcmFnZ2FibGUiLCJhY3RpdmVFbGVtZW50IiwiYW5jaG9yIiwidW5jaGVjayIsImV2bnQiLCJjdHJsS2V5IiwiZWRpdGluZyIsImVkaXRhYmxlIiwic3RhcnRFZGl0aW5nIiwiY2hlY2tPblNlbGVjdCIsInBhcmVudFNlbGVjdCIsInVuc2VsZWN0Iiwic2VsZWN0ZWROb2RlcyIsInVuc2VsZWN0QWxsIiwiX2VkaXRpbmdOb2RlIiwiZG5kIiwic3RhcnREcmFnZ2luZyIsInJlY3Vyc2VEb3duIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwic3RyaXB0YWdzIiwiX19lbGVtZW50IiwiaW5uZXJUZXh0IiwiZmluZGVyIiwia2V5cyIsImV2ZXJ5IiwiUmVnRXhwIiwiaXNSZWdFeHAiLCJmaW5kIiwiZ2V0QWxsQ2hpbGRyZW4iLCJzNCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRvU3RyaW5nIiwidXVpZFY0Iiwibm9kZUl0ZXJhdG9yIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJTZWxlY3Rpb24iLCJfX3Byb3RvX18iLCJjb25zdHJ1Y3RvciIsInJlbW92ZSIsImV4cGFuZCIsIk5vZGUiLCJFcnJvciIsInN0YXRlIiwic2hvd0NoaWxkcmVuIiwiYXNzaWduIiwicHJvdG90eXBlQWNjZXNzb3JzIiwiY29uZmlndXJhYmxlIiwiY29uY2F0IiwiZ2V0UGF0aCIsInNldCIsInJlY3Vyc2VVcCIsInJlZnJlc2hJbmRldGVybWluYXRlU3RhdGUiLCJhdXRvQ2hlY2tDaGlsZHJlbiIsInNlbGVjdGFibGUiLCJjaGVja0Rpc2FibGVkQ2hpbGRyZW4iLCJzaG93IiwiaGlkZSIsImhpZGRlbiIsImVuYWJsZSIsImVuYWJsZWQiLCJhdXRvRGlzYWJsZUNoaWxkcmVuIiwiZGlzYWJsZSIsImV4cGFuZFRvcCIsImNhbkV4cGFuZCIsImxvYWRDaGlsZHJlbiIsImNvbGxhcHNlZCIsImNhbkNvbGxhcHNlIiwiX3RvZ2dsZU9wZW5lZFN0YXRlIiwidG9nZ2xlQ29sbGFwc2UiLCJpc0Ryb3BhYmxlIiwiaXNEcmFnZ2FibGUiLCJpc1Jvb3QiLCJzdG9yZSIsIl9fc2lsZW5jZSIsImZpbmlzaERyYWdnaW5nIiwiYXBwZW5kIiwiYmVmb3JlIiwiYWRkIiwiJHNldCIsImZpcnN0IiwibmV4dCIsIm5leHROb2RlIiwicHJldiIsInByZXZOb2RlIiwiaW5zZXJ0QXQiLCJvYmplY3RUb05vZGUiLCJyZXZlcnNlIiwic3BsaWNlIiwiYWRkQ2hpbGQiLCJwcmVwZW5kIiwiZW1wdHkiLCJwb3AiLCJyZW1vdmVOb2RlIiwiaXNOb2RlIiwidG9KU09OIiwiZGVmaW5lUHJvcGVydGllcyIsIm5vZGVTdGF0ZXMiLCJkcm9wYWJsZSIsIm1lcmdlIiwiTGlzdCIsImhhcyIsImluY2x1ZGVzIiwiaW5kZXhPZiIsInJlbW92ZUFsbCIsInRvcCIsImRlZmF1bHRQcm9wZXJ0eU5hbWVzIiwiVHJlZVBhcnNlciIsIkpTT04iLCJwYXJzZSIsImNvbnZlcnROYW1lcyIsIlByb21pc2UiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZXRSZXF1ZXN0SGVhZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlbmQiLCJyZXF1ZXN0Iiwib3JkZXJBc2MiLCJvcmRlckRlc2MiLCJzb3J0IiwidG9Mb3dlckNhc2UiLCJnZXRDb21wYXJlRnVuY3Rpb24iLCJmZXRjaERlbGF5IiwiVHJlZSIsIm9wdHMiLCJmZXRjaERhdGEiLCJleGVjIiwicmVwbGFjZSIsImNyZWF0ZVRlbXBsYXRlIiwib25GZXRjaEVycm9yIiwiJG9uIiwiJG9uY2UiLCIkb2ZmIiwiX3NvcnQiLCJzb3J0VHJlZSIsImNsZWFyRmlsdGVyIiwiX19leHBhbmRlZCIsIm1hdGNoZXMiLCJtYXRjaGVyIiwicGxhaW5MaXN0IiwiRnVuY3Rpb24iLCJjaGVja2VkTm9kZXMiLCJtaW5GZXRjaERlbGF5IiwiZmV0Y2giLCJhbGwiLCJtb2RlbFBhcnNlIiwiZmV0Y2hJbml0RGF0YSIsInNldE1vZGVsIiwiZ2V0Tm9kZSIsInNlbGVjdEFsbCIsImNoZWNrQWxsIiwidW5jaGVja0FsbCIsImV4cGFuZEFsbCIsImNvbGxhcHNlQWxsIiwibmV4dFZpc2libGVOb2RlIiwicHJldlZpc2libGVOb2RlIiwiYWRkVG9Nb2RlbCIsImFkZE5vZGUiLCJnZXROb2RlQnlJZCIsInByb3BlcnR5TmFtZXMiLCJrZXlDb2RlcyIsIkFSUk9XX0xFRlQiLCJBUlJPV19UT1AiLCJBUlJPV19SSUdIVCIsIkFSUk9XX0JPVFRPTSIsIlNQQUNFIiwiREVMRVRFIiwiRU5URVIiLCJFU0MiLCJjb2Rlc0FyciIsImluaXRLZXlib2FyZE5hdmlnYXRpb24iLCJsZWZ0QXJyb3ciLCJyaWdodEFycm93IiwiZm9jdXNVcCIsImZvY3VzZERvd24iLCJjaGVja05vZGUiLCJkZWxldGlvbiIsImRlbGV0ZU5vZGUiLCJhc3NlcnQiLCJUcmVlTWl4aW4iLCJfcHJvdmlkZWQiLCJyZXNvbHZlIiwiY29ubmVjdFN0b3JlIiwiaW5pdEV2ZW50cyIsImtleWJvYXJkTmF2aWdhdGlvbiIsIm11dGF0aW9ucyIsImRpc3BhdGNoZXIiLCJzdWJzY3JpYmUiLCJmaW5kQWxsIiwiZ2V0Um9vdE5vZGUiLCJzdHJpbmdpZnkiLCJEcm9wUG9zaXRpb24iLCJBQk9WRSIsIkJFTE9XIiwiT04iLCJwYXRoIiwiY29tcG9zZWRQYXRoIiwidGFnTmFtZSIsInBhcmVudEVsZW1lbnQiLCJnZXREcm9wRGVzdGluYXRpb24iLCJjbGFzc05hbWUiLCJnZXRTZWxlY3RlZE5vZGUiLCJ1cGRhdGVIZWxwZXJDbGFzc2VzIiwiY2FsbERuZENiIiwiVHJlZURuZCIsIm9uRHJhZ1N0YXJ0IiwiJCRzdGFydERyYWdQb3NpdGlvbiIsImNsaWVudFgiLCJjbGllbnRZIiwiJCRwb3NzaWJsZURyYWdOb2RlIiwiaW5pdERyYWdMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZHJhZ2dhYmxlTm9kZSIsIiQkZHJvcERlc3RpbmF0aW9uIiwiYWJzIiwiaXNNb3ZpbmdTdGFydGVkIiwibGVmdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbGVhckRyb3BDbGFzc2VzIiwiZ2V0QXR0cmlidXRlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiZ2V0RHJvcFBvc2l0aW9uIiwiZGVmYXVsdHMiLCJmaWx0ZXJEZWZhdWx0cyIsImVtcHR5VGV4dCIsIlRyZWVSb290IiwidGFnIiwidHJlZS1sb2FkaW5nIiwidHJlZS0tZHJhZ2dhYmxlIiwicm9sZSIsIl9zIiwiZHJhZ3N0YXJ0IiwiRHJhZ2dhYmxlTm9kZSIsIm1peGlucyIsInByb3ZpZGUiLCJTdHJpbmciLCJpbnN0YWxsIiwidXNlIiwibGlxdW9yX3RyZWVfZXNtIiwiTGlxdW9yVHJlZSIsImVkaXRNb2RlIiwidHJlZUZpbHRlcjAiLCJ0cmVlT3B0aW9uczAiLCJ0cmVlRGF0YSIsImdldERhdGEiLCJ0cmVlT3B0aW9ucyIsImpzb24iLCJjb2RlIiwiZGVzY3JpcHRp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T0FBQSxXQUVBaEIsUUFBQUMsSUFBQTdDLEtBQUE0TixRQUVBL04sYUFDQSxJQUFBVCxFQUFBWSxLQUFBdUcsU0FBQSxHQUNNcEksRUFBQSxZQUFXa0IsV0FBQUQsR0FDakJvRyxLQUFBQyxJQUVBekYsS0FBQXVlLFVBQUEsRUFDQTNZLE1BQUEseUNBQ0E1RixLQUFBNEcsVUFBQSxXQUNBNUcsS0FBQW1GLGNBQUEsT0FJQXRGLGdCQUFBWixFQUFBOEIsR0FDQTZCLFFBQUFDLElBQUE1RCxHQUNBZSxLQUFBd0csZ0JBQUF2SCxLQUNBZSxLQUFBd0csZ0JBQUF6RixRQUlBZixLQUFBNEcsVUFBQSxXQUNBMUcsRUFBQSxnQkFBQWtILE1BQUEsYUFHQXZILGNBQ0FHLEtBQUF1RyxTQUFBLEdBQUF1WSxLQUFBL1ksS0FBQSxDQUNBZ1osWUFBQSxHQUNBOVosU0FBQSxHQUNBK1osd0JBQUEsS0FHQWhmLEtBQUE0RyxVQUFBLFdBQ0E1RyxLQUFBbUYsY0FBQSxLQUdBdEYsZUFBQWtCLEdBQ0FmLEtBQUF1RyxTQUFBLEdBQUF1WSxLQUFBaEssT0FBQS9ULEVBQUEsR0FFQWYsS0FBQTRHLFVBQUEsV0FDQTVHLEtBQUFtRixjQUFBLEtBR0F0RixXQUNBK0YsTUFBQSxZQUNBNUYsS0FBQXVlLFNBQ0F2ZSxLQUFBdWUsVUFBQSxFQUVBdmUsS0FBQXVlLFVBQUEsR0FFQTFlLGVBQUFpRyxHQUNBLEdBQUFBLEVBQUFnQixTQUFBNUYsUUFFQWxCLEtBQUFiLFFBQUEyRyIsImZpbGUiOiJkaXN0L21haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNSk7XG4iLCJ2YXIgbm90ZUpzTW9kZWwgPSB7XHJcbiAgICB0ZXN0OiB7XHJcbiAgICAgICAgbmFtZTogXCJtb3N0YWZhXCJcclxuICAgIH0sXHJcbiAgICBnZXROb3RlczogZnVuY3Rpb24gKHBhcmFtKSB7XHJcbiAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnL0dldE5vdGVzP3BhZ2U9JyArcGFyYW0ucGFnZSArIFwiJnBlclBhZ2U9XCJcclxuICAgICAgICAgKyBwYXJhbS5wZXJQYWdlIFxyXG4gICAgICAgICArIHBhcmFtLnRpdGxlIFxyXG4gICAgICAgICArIHBhcmFtLmJvb2tNYXJrIFxyXG4gICAgICAgICArIHBhcmFtLm5vdGVUeXBlXHJcbiAgICAgICAgICsgcGFyYW0ucHJvamVjdE5hbWVcclxuICAgICAgICAgKyBwYXJhbS50ZWNobm9sb2d5XHJcbiAgICAgICAgICsgcGFyYW0uc3BlY2lmaWNTdWJqZWN0XHJcbiAgICAgICAgIClcclxuICAgIH0sXHJcbiAgICBkZWxldGVOb3RlOiBmdW5jdGlvbiAoaWQpIHtcclxuICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvRGVsZXRlTm90ZT9pZD0nICsgaWQpXHJcbiAgICB9LFxyXG4gICAgZ2V0Tm90ZVRyZWU6ZnVuY3Rpb24oKXtcclxuICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvR2V0Tm90ZVRyZWUnKTtcclxuICAgIH0sXHJcbiAgICBnZXROb3RlOmZ1bmN0aW9uKG1vZGVsKXtcclxuICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCcvR2V0Tm90ZT9pZD0nK21vZGVsLmlkKTtcclxuICAgIH0sXHJcbiAgICB1cGRhdGVOb3RlOmZ1bmN0aW9uKG1vZGVsKXtcclxuICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgnL1VwZGF0ZU5vdGUnLCB7IG1vZGVsOiBtb2RlbCB9KVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgbm90ZUpzTW9kZWwgfTsiLCJcclxuZXhwb3J0IGNvbnN0IGNvZGVNaXJyb3JDb21wb25lbnQgPVZ1ZS5jb21wb25lbnQoJ2NvZGUtbWlycm9yJywge1xyXG4gIHRlbXBsYXRlOiAnPHRleHRhcmVhPnt7Ym9keX19PC90ZXh0YXJlYT4nLFxyXG4gIHByb3BzOiBbJ2JvZHknLCBcImxhbmdcIixcImluZGV4XCJdLFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIG1ldGhvZFRoYXRGb3JjZXNVcGRhdGUoKSB7XHJcbiAgICAgIC8vIC4uLlxyXG4gICAgICAvLyBOb3RpY2Ugd2UgaGF2ZSB0byB1c2UgYSAkIGhlcmVcclxuICAgICAgLy8gLi4uXHJcbiAgICB9XHJcbiAgfSxcclxuICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdm09IHRoaXM7XHJcbiAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxhbmcpXHJcbiAgICB2YXIgZWxlbWVudCA9ICQodGhpcy4kZWwpXHJcbiAgICB2YXIgY29kZSA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKGVsZW1lbnRbMF0sIHtcclxuICAgICAgbW9kZTogdGhpcy5sYW5nLFxyXG4gICAgICBsaW5lTnVtYmVyczogdHJ1ZSxcclxuICAgICAgc3R5bGVBY3RpdmVMaW5lOiB0cnVlLFxyXG4gICAgICBtYXRjaEJyYWNrZXRzOiB0cnVlLFxyXG4gICAgICB2aWV3cG9ydE1hcmdpbjogSW5maW5pdHksXHJcbiAgICB9KS5vbignY2hhbmdlJywgZWRpdG9yID0+IHtcclxuICAgICAgLy8gY29uc29sZS5sb2coZWRpdG9yLmdldFZhbHVlKCkpO1xyXG4gICAgICB2bS4kZW1pdChcImlucHV0LXRleHQtYXJlYVwiLCB7XCJpbmRleFwiOnZtLmluZGV4LFwidmFsdWVcIjplZGl0b3IuZ2V0VmFsdWUoKX0pO1xyXG4gICAgfSk7XHJcblxyXG4gIH0sXHJcbiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gY29uc29sZS5sb2coY20pXHJcbiAgICBsZXQgaT0wO1xyXG4gICAgZm9yIChpID0gMDsgaSA8ICQoJy5Db2RlTWlycm9yJykubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdmFyIGNtID0gJCgnLkNvZGVNaXJyb3InKVtpXTtcclxuICAgICAgaWYgKGNtICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBjbS5Db2RlTWlycm9yLnNldE9wdGlvbihcIm1vZGVcIiwgXCJ0ZXh0L3gtY3NyY1wiKTtcclxuICAgICAgICBjbS5Db2RlTWlycm9yLmdldFdyYXBwZXJFbGVtZW50KCkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjbS5Db2RlTWlycm9yLmdldFdyYXBwZXJFbGVtZW50KCkpO1xyXG4gICAgICAgIGNtLkNvZGVNaXJyb3IgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSxcclxuICBkZXN0cm95ZWQ6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfVxyXG59KTtcclxuIiwiZXhwb3J0IGNvbnN0IHNlbGVjdDIgPSBWdWUuY29tcG9uZW50KCdzZWxlY3QyJywge1xyXG4gIHByb3BzOiBbJ29wdGlvbnMnLCAndmFsdWUnLCAndXJsJywgJ211bHRpJ10sXHJcbiAgZGF0YSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNlbGVjdFZhbHVlOiAnMTIzNCcsXHJcbiAgICB9O1xyXG4gIH0sXHJcbiAgXHJcbiAgdGVtcGxhdGU6IGA8aW5wdXQgLz4gYCxcclxuXHJcbiAgbW91bnRlZDogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciB2bSA9IHRoaXNcclxuICAgIHNlbGVjdDIgPSAkKHRoaXMuJGVsKS5zZWxlY3QyKHtcclxuICAgICAgLy8gcGxhY2Vob2xkZXI6IFwiXCIsXHJcbiAgICAgIGFsbG93Q2xlYXI6IHRydWUsXHJcbiAgICAgICB0YWdzOiB2bS5tdWx0aT09PVwidHJ1ZVwiID8gW106ICB1bmRlZmluZWQsXHJcbiAgICAgICBtYXhpbXVtSW5wdXRMZW5ndGg6IDMwLFxyXG4gICAgICAgbWF4aW11bVNlbGVjdGlvblNpemU6IDEsXHJcbiAgICAgIC8vIGFsbG93Q2xlYXI6IHRydWUsXHJcbiAgICAgIGluaXRTZWxlY3Rpb246IGZ1bmN0aW9uIChlbGVtZW50LCBjYWxsYmFjaykge1xyXG4gICAgICAgIC8vIHZhciBkYXRhID0geyBpZDogMSwgdGV4dDogJ2luaXRTZWxlY3Rpb24gdGVzdCcgfTtcclxuICAgICAgICAvLyBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgICAvLyBhcHAucHJvamVjdFR5cGUgPSBkYXRhO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGFwcC5wcm9qZWN0VHlwZSlcclxuICAgICAgfSxcclxuICAgICAgLy8gbXVsdGlwbGU6IHRydWUsXHJcbiAgICAgIC8vbWF4aW11bUlucHV0TGVuZ3RoOiAzMCxcclxuICAgICAgLy8gbWF4aW11bVNlbGVjdGlvblNpemU6IDEsXHJcbiAgICAgIGFqYXg6IHsgLy8gaW5zdGVhZCBvZiB3cml0aW5nIHRoZSBmdW5jdGlvbiB0byBleGVjdXRlIHRoZSByZXF1ZXN0IHdlIHVzZSBTZWxlY3QyJ3MgY29udmVuaWVudCBoZWxwZXJcclxuICAgICAgICB1cmw6IHZtLnVybCxcclxuICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgIHF1aWV0TWlsbGlzOiAxMDAsXHJcbiAgICAgICAgZGF0YTogZnVuY3Rpb24gKHRlcm0sIHBhZ2UpIHtcclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHF1ZXJ5OiB0ZXJtLCAvLyBzZWFyY2ggdGVybVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlc3VsdHM6IGZ1bmN0aW9uIChkYXRhLCBwYWdlKSB7IC8vIHBhcnNlIHRoZSByZXN1bHRzIGludG8gdGhlIGZvcm1hdCBleHBlY3RlZCBieSBTZWxlY3QyLlxyXG4gICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHVzaW5nIGN1c3RvbSBmb3JtYXR0aW5nIGZ1bmN0aW9ucyB3ZSBkbyBub3QgbmVlZCB0byBhbHRlciB0aGUgcmVtb3RlIEpTT04gZGF0YVxyXG4gICAgICAgICAgcmV0dXJuIHsgcmVzdWx0czogZGF0YS5tb2RlbCB9O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8gY2FjaGU6IHRydWVcclxuICAgICAgfSxcclxuICAgICAgY3JlYXRlU2VhcmNoQ2hvaWNlOiBmdW5jdGlvbiAodGVybSwgZGF0YSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKClcclxuICAgICAgICBpZiAoJChkYXRhKS5maWx0ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMudGV4dC5sb2NhbGVDb21wYXJlKHRlcm0pID09PSAwO1xyXG4gICAgICAgIH0pLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgcmV0dXJuIHsgaWQ6IFwiJCpOZXdUYWcqJFwiLCB0ZXh0OiB0ZXJtIH07XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICAvL211bHRpcGxlOiB0cnVlLFxyXG4gICAgfSkuc2VsZWN0MigndmFsJywgIHZtLm11bHRpPT09XCJ0cnVlXCIgPyBbXTogICcnKS5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICB2YXIgZGF0YSA9ICQodGhpcykuc2VsZWN0MignZGF0YScpO1xyXG4gICAgICBpZiAodm0ubXVsdGk9PT1cInRydWVcIilcclxuICAgICAge1xyXG4gICAgICAgIGRhdGEgPSAkKHRoaXMpLnNlbGVjdDIoJ2RhdGEnKVswXTtcclxuICAgICAgfVxyXG4gICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tc2VsZWN0IDIgRGF0YS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cIilcclxuICAgICAgY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCAmJiBkYXRhICE9PSBudWxsKSB7XHJcbiAgICAgICAgdm0uJGVtaXQoXCJpbnB1dC1kYXRhXCIsIGRhdGEpO1xyXG4gICAgICAgIC8vICAgYXBwLm5vZGVNb2RlbC5ub3RlVHlwZS50ZXh0ID0gZGF0YS50ZXh0O1xyXG4gICAgICAgIC8vICAgYXBwLm5vZGVNb2RlbC5ub3RlVHlwZS5pZCA9IGRhdGEuaWQ7XHJcbiAgICAgIH1lbHNlIHtcclxuICAgICAgICB2bS4kZW1pdChcImlucHV0LWRhdGFcIiwge3RleHQ6XCJcIixpZDpcIlwifSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9KVxyXG5cclxuICBcclxuXHJcbiAgXHJcbiAgfSxcclxuICB3YXRjaDoge1xyXG4gICAgdmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICBjb25zb2xlLmxvZyh2YWx1ZSlcclxuICAgICAgaWYgKHZhbHVlID09IFwiXCIpIHtcclxuICAgICAgICAkKHRoaXMuJGVsKS5zZWxlY3QyKFwidmFsXCIsIFwiXCIpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgb3B0aW9uczogZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgY29uc29sZS5sb2cob3B0aW9ucylcclxuICAgIH1cclxuICB9LFxyXG4gIGRlc3Ryb3llZDogZnVuY3Rpb24gKCkge1xyXG4gICAgJCh0aGlzLiRlbCkub2ZmKCkuc2VsZWN0MignZGVzdHJveScpXHJcbiAgfVxyXG59KVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyBleHBvcnQgY29uc3Qgc2VsZWN0aXplID0gVnVlLmNvbXBvbmVudCgnc2VsZWN0aXplJywge1xyXG4vLyAgICAgcHJvcHM6IFsnb3B0aW9ucycsICd2YWx1ZSddLFxyXG4vLyAgICAgdGVtcGxhdGU6IGAgIFxyXG4vLyAgICAgPHNlbGVjdD5cclxuLy8gICAgIDxzbG90Pjwvc2xvdD5cclxuLy8gICAgIDwvc2VsZWN0PmAsXHJcbi8vICAgICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgZGVidWdnZXJcclxuLy8gICAgICAgICB2YXIgdm0gPSB0aGlzXHJcbi8vICAgICAgICAgJCh0aGlzLiRlbCkuc2VsZWN0aXplKHtcclxuLy8gICAgICAgICAgICAgbWF4SXRlbXM6IDQsXHJcbi8vICAgICAgICAgICAgIGRlbGltaXRlcjogJywnLFxyXG4vLyAgICAgICAgICAgICBwZXJzaXN0OiBmYWxzZSxcclxuLy8gICAgICAgICAgICAgLy8gIG9wdGlvbnM6IFtcclxuLy8gICAgICAgICAgICAgLy8gICAgIHtlbWFpbDogJ2JyaWFuQHRoaXJkcm91dGUuY29tJywgdGV4dDogJ0JyaWFuIFJlYXZpcyd9LFxyXG4vLyAgICAgICAgICAgICAvLyAgICAge2VtYWlsOiAnbmlrb2xhQHRlc2xhLmNvbScsIHRleHQ6ICdOaWtvbGEgVGVzbGEnfSxcclxuLy8gICAgICAgICAgICAgLy8gXSxcclxuLy8gICAgICAgICAgICAgY3JlYXRlOiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuLy8gICAgICAgICAgICAgICByZXR1cm4ge1xyXG4vLyAgICAgICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxyXG4vLyAgICAgICAgICAgICAgICAgdGV4dDogaW5wdXRcclxuLy8gICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgIH0pLm9uKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7ICAgXHJcbi8vICAgICAgICAgICAgIGFsZXJ0KFwic2Rmc2RcIikgXHJcbi8vICAgICAgICAgICAvLyAkKCcjbXlTZWxlY3QnKS5hdHRyKCdzaXplJywnMScpO1xyXG4vLyAgICAgICAgICAgLy8gJCgnI215U2VsZWN0JykudHJpZ2dlcignYmx1cicpO1xyXG4vLyAgICAgICAgICAgIH0pO1xyXG4vLyAgICAgICAgIC8vICAgJChzeikub24oJ2NoYW5nZScsZnVuY3Rpb24oKXsgICBcclxuLy8gICAgICAgICAvLyAgICAgICBhbGVydChcInNkZnNkXCIpIFxyXG4vLyAgICAgICAgIC8vICAgICAvLyAkKCcjbXlTZWxlY3QnKS5hdHRyKCdzaXplJywnMScpO1xyXG4vLyAgICAgICAgIC8vICAgICAvLyAkKCcjbXlTZWxlY3QnKS50cmlnZ2VyKCdibHVyJyk7XHJcbi8vICAgICAgICAgLy8gICAgICB9KTtcclxuLy8gICAgICAgICAgICAgLy8gaW5pdCBzZWxlY3QyXHJcbi8vICAgICAgICAgICAgIC8vIC5zZWxlY3QyKHsgXHJcbi8vICAgICAgICAgICAgIC8vICAgICBkYXRhOiB0aGlzLm9wdGlvbnMsXHJcbi8vICAgICAgICAgICAgIC8vICAgICAgdGhlbWU6IFwiYm9vdHN0cmFwNFwiICxtdWx0aXBsZTogdHJ1ZSx9KVxyXG4vLyAgICAgICAgICAgICAvLyAudmFsKHRoaXMudmFsdWUpXHJcbi8vICAgICAgICAgICAgIC8vIC50cmlnZ2VyKCdjaGFuZ2UnKVxyXG4vLyAgICAgICAgICAgICAvLyAvLyBlbWl0IGV2ZW50IG9uIGNoYW5nZS5cclxuLy8gICAgICAgICAgICAgLy8gLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgICAgIC8vICAgICB2bS4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbHVlKVxyXG4vLyAgICAgICAgICAgICAvLyB9KVxyXG4vLyAgICAgfSxcclxuLy8gICAgIHdhdGNoOiB7XHJcbi8vICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4vLyAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInNmZGRzZlwiKVxyXG4vLyAgICAgICAgICAgICAvLyB1cGRhdGUgdmFsdWVcclxuLy8gICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJIZWxsb1wiKVxyXG4vLyAgICAgICAgICAgICAvLyAkKHRoaXMuJGVsKVxyXG4vLyAgICAgICAgICAgICAvLyAgICAgLnZhbCh2YWx1ZSlcclxuLy8gICAgICAgICAgICAgLy8gICAgIC50cmlnZ2VyKCdjaGFuZ2UnKVxyXG4vLyAgICAgICAgIH0sXHJcbi8vICAgICAgICAgb3B0aW9uczogZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuLy8gICAgICAgICAgICAgLy8gdXBkYXRlIG9wdGlvbnNcclxuLy8gICAgICAgICAgICAgLy8gJCh0aGlzLiRlbCkuZW1wdHkoKS5zZWxlY3QyKHsgZGF0YTogb3B0aW9ucyB9KVxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0sXHJcbi8vICAgICBkZXN0cm95ZWQ6IGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICAvLyAkKHRoaXMuJGVsKS5vZmYoKS5zZWxlY3QyKCdkZXN0cm95JylcclxuLy8gICAgIH1cclxuLy8gfSlcclxuIiwibGV0IHV0aWxpdHkgPSB7XHJcbiAgICBnZXRVcmxQYXJhbWV0ZXIgOiBmdW5jdGlvbiBnZXRVcmxQYXJhbWV0ZXIoc1BhcmFtKSB7XHJcbiAgICAgICAgdmFyIHNQYWdlVVJMID0gd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHJpbmcoMSksXHJcbiAgICAgICAgICAgIHNVUkxWYXJpYWJsZXMgPSBzUGFnZVVSTC5zcGxpdCgnJicpLFxyXG4gICAgICAgICAgICBzUGFyYW1ldGVyTmFtZSxcclxuICAgICAgICAgICAgaTtcclxuXHJcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNVUkxWYXJpYWJsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgc1BhcmFtZXRlck5hbWUgPSBzVVJMVmFyaWFibGVzW2ldLnNwbGl0KCc9Jyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoc1BhcmFtZXRlck5hbWVbMF0gPT09IHNQYXJhbSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNQYXJhbWV0ZXJOYW1lWzFdID09PSB1bmRlZmluZWQgPyB0cnVlIDogZGVjb2RlVVJJQ29tcG9uZW50KHNQYXJhbWV0ZXJOYW1lWzFdKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5leHBvcnQgeyB1dGlsaXR5IH07IiwibGV0IGRyb3Bkb3ducyA9IHtcclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tTm90ZVR5cGUtLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIGVuYWJsZU5vdGVUeXBlIDogZnVuY3Rpb24gKGFwcCkge1xyXG4gICAgICAgICQoXCIjblR5cGVcIikuc2VsZWN0Mih7XHJcbiAgICAgICAgICAgIC8vIHRhZ3M6IFtdLFxyXG4gICAgICAgICAgICAvLyBhbGxvd0NsZWFyOiB0cnVlLFxyXG4gICAgICAgICAgICBpbml0U2VsZWN0aW9uOiBmdW5jdGlvbiAoZWxlbWVudCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAvLyB2YXIgZGF0YSA9IHsgaWQ6IDEsIHRleHQ6ICdpbml0U2VsZWN0aW9uIHRlc3QnIH07XHJcbiAgICAgICAgICAgICAgLy8gY2FsbGJhY2soZGF0YSk7XHJcbiAgICAgICAgICAgICAgLy8gYXBwLnByb2plY3RUeXBlID0gZGF0YTtcclxuICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhcHAucHJvamVjdFR5cGUpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIC8vIG11bHRpcGxlOiB0cnVlLFxyXG4gICAgICAgICAgICAvL21heGltdW1JbnB1dExlbmd0aDogMzAsXHJcbiAgICAgICAgICAgIC8vIG1heGltdW1TZWxlY3Rpb25TaXplOiAxLFxyXG4gICAgICAgICAgICBhamF4OiB7IC8vIGluc3RlYWQgb2Ygd3JpdGluZyB0aGUgZnVuY3Rpb24gdG8gZXhlY3V0ZSB0aGUgcmVxdWVzdCB3ZSB1c2UgU2VsZWN0MidzIGNvbnZlbmllbnQgaGVscGVyXHJcbiAgICAgICAgICAgICAgdXJsOiBcIi9HZXROb3RlVHlwZXNcIixcclxuICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICAgIHF1aWV0TWlsbGlzOiAxMDAsXHJcbiAgICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gKHRlcm0sIHBhZ2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgIHF1ZXJ5OiB0ZXJtLCAvLyBzZWFyY2ggdGVybVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIHJlc3VsdHM6IGZ1bmN0aW9uIChkYXRhLCBwYWdlKSB7IC8vIHBhcnNlIHRoZSByZXN1bHRzIGludG8gdGhlIGZvcm1hdCBleHBlY3RlZCBieSBTZWxlY3QyLlxyXG4gICAgICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHVzaW5nIGN1c3RvbSBmb3JtYXR0aW5nIGZ1bmN0aW9ucyB3ZSBkbyBub3QgbmVlZCB0byBhbHRlciB0aGUgcmVtb3RlIEpTT04gZGF0YVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0czogZGF0YS5tb2RlbCB9O1xyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgLy8gY2FjaGU6IHRydWVcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY3JlYXRlU2VhcmNoQ2hvaWNlOiBmdW5jdGlvbiAodGVybSwgZGF0YSkge1xyXG4gICAgICAgICAgICAgIGlmICgkKGRhdGEpLmZpbHRlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50ZXh0LmxvY2FsZUNvbXBhcmUodGVybSkgPT09IDA7XHJcbiAgICAgICAgICAgICAgfSkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBpZDogXCIkKk5ld1RhZyokXCIsIHRleHQ6IHRlcm0gfTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIC8vbXVsdGlwbGU6IHRydWUsXHJcbiAgICAgICAgICB9KS5zZWxlY3QyKCd2YWwnLCAnJykub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLnNlbGVjdDIoJ2RhdGEnKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICAgICAgLy8gYWxlcnQoXCJlbmFibGVOb3RlVHlwZVwiKTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgIGFwcC5ub2RlTW9kZWwubm90ZVR5cGUudGV4dCA9IGRhdGEudGV4dDtcclxuICAgICAgICAgICAgICBhcHAubm9kZU1vZGVsLm5vdGVUeXBlLmlkID0gZGF0YS5pZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1Qcm9qZWN0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgZW5hYmxlUHJvamVjdDpmdW5jdGlvbihhcHApe1xyXG4gICAgICAkKFwiI3Byb2plY3RcIikuc2VsZWN0Mih7XHJcbiAgICAgICAgdGFnczogW10sXHJcbiAgICAgICAgLy8gYWxsb3dDbGVhcjogdHJ1ZSxcclxuICAgICAgICBpbml0U2VsZWN0aW9uOiBmdW5jdGlvbiAoZWxlbWVudCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgIC8vIHZhciBkYXRhID0geyBpZDogMSwgdGV4dDogJ2luaXRTZWxlY3Rpb24gdGVzdCcgfTtcclxuICAgICAgICAgIC8vIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgICAgLy8gYXBwLnByb2plY3RUeXBlID0gZGF0YTtcclxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGFwcC5wcm9qZWN0VHlwZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIG11bHRpcGxlOiB0cnVlLFxyXG4gICAgICAgIG1heGltdW1JbnB1dExlbmd0aDogMzAsXHJcbiAgICAgICAgbWF4aW11bVNlbGVjdGlvblNpemU6IDEsXHJcbiAgICAgICAgYWpheDogeyAvLyBpbnN0ZWFkIG9mIHdyaXRpbmcgdGhlIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgdGhlIHJlcXVlc3Qgd2UgdXNlIFNlbGVjdDIncyBjb252ZW5pZW50IGhlbHBlclxyXG4gICAgICAgICAgdXJsOiBcIi9HZXRQcm9qZWN0VHlwZXNcIixcclxuICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICBxdWlldE1pbGxpczogMTAwLFxyXG4gICAgICAgICAgZGF0YTogZnVuY3Rpb24gKHRlcm0sIHBhZ2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICBxdWVyeTogdGVybSwgLy8gc2VhcmNoIHRlcm1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICByZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSwgcGFnZSkgeyAvLyBwYXJzZSB0aGUgcmVzdWx0cyBpbnRvIHRoZSBmb3JtYXQgZXhwZWN0ZWQgYnkgU2VsZWN0Mi5cclxuICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHVzaW5nIGN1c3RvbSBmb3JtYXR0aW5nIGZ1bmN0aW9ucyB3ZSBkbyBub3QgbmVlZCB0byBhbHRlciB0aGUgcmVtb3RlIEpTT04gZGF0YVxyXG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHRzOiBkYXRhLm1vZGVsIH07XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgLy8gY2FjaGU6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNyZWF0ZVNlYXJjaENob2ljZTogZnVuY3Rpb24gKHRlcm0sIGRhdGEpIHtcclxuICAgICAgICAgIGlmICgkKGRhdGEpLmZpbHRlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHQubG9jYWxlQ29tcGFyZSh0ZXJtKSA9PT0gMDtcclxuICAgICAgICAgIH0pLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBpZDogXCIkKk5ld1RhZyokXCIsIHRleHQ6IHRlcm0gfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG11bHRpcGxlOiB0cnVlLFxyXG4gICAgICB9KS5zZWxlY3QyKCd2YWwnLCBbXSkub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBhcHAucHJvamVjdFR5cGUgPSBcIlwiO1xyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5zZWxlY3QyKCdkYXRhJylbMF07XHJcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICBhcHAubm9kZU1vZGVsLnByb2plY3RUeXBlLnRleHQgPSBkYXRhLnRleHQ7XHJcbiAgICAgICAgICBhcHAubm9kZU1vZGVsLnByb2plY3RUeXBlLmlkID0gZGF0YS5pZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coYXBwLnByb2plY3RUeXBlKVxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1HZW5lcmFsU3ViamVjdC0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBlbmFibGVHZW5lcmFsU3ViamVjdDpmdW5jdGlvbihhcHApe1xyXG4gICAgICAkKFwiI3RlY2hub2xvZ3lcIikuc2VsZWN0Mih7XHJcbiAgICAgICAgdGFnczogW10sXHJcbiAgICAgICAgLy8gYWxsb3dDbGVhcjogdHJ1ZSxcclxuICAgICAgICBpbml0U2VsZWN0aW9uOiBmdW5jdGlvbiAoZWxlbWVudCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgIC8vIHZhciBkYXRhID0geyBpZDogMSwgdGV4dDogJ2luaXRTZWxlY3Rpb24gdGVzdCcgfTtcclxuICAgICAgICAgIC8vIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgICAgLy8gYXBwLnByb2plY3RUeXBlID0gZGF0YTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIG11bHRpcGxlOiB0cnVlLFxyXG4gICAgICAgIG1heGltdW1JbnB1dExlbmd0aDogMzAsXHJcbiAgICAgICAgbWF4aW11bVNlbGVjdGlvblNpemU6IDEsXHJcbiAgICAgICAgYWpheDogeyAvLyBpbnN0ZWFkIG9mIHdyaXRpbmcgdGhlIGZ1bmN0aW9uIHRvIGV4ZWN1dGUgdGhlIHJlcXVlc3Qgd2UgdXNlIFNlbGVjdDIncyBjb252ZW5pZW50IGhlbHBlclxyXG4gICAgICAgICAgdXJsOiBcIi9HZXRUZWNobm9sb2dpZXNcIixcclxuICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXHJcbiAgICAgICAgICBxdWlldE1pbGxpczogMTAwLFxyXG4gICAgICAgICAgZGF0YTogZnVuY3Rpb24gKHRlcm0sIHBhZ2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICBxdWVyeTogdGVybSwgLy8gc2VhcmNoIHRlcm1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICByZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSwgcGFnZSkgeyAvLyBwYXJzZSB0aGUgcmVzdWx0cyBpbnRvIHRoZSBmb3JtYXQgZXhwZWN0ZWQgYnkgU2VsZWN0Mi5cclxuICAgICAgICAgICAgLy8gc2luY2Ugd2UgYXJlIHVzaW5nIGN1c3RvbSBmb3JtYXR0aW5nIGZ1bmN0aW9ucyB3ZSBkbyBub3QgbmVlZCB0byBhbHRlciB0aGUgcmVtb3RlIEpTT04gZGF0YVxyXG4gICAgICAgICAgICByZXR1cm4geyByZXN1bHRzOiBkYXRhLm1vZGVsIH07XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgLy8gY2FjaGU6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNyZWF0ZVNlYXJjaENob2ljZTogZnVuY3Rpb24gKHRlcm0sIGRhdGEpIHtcclxuICAgICAgICAgIGlmICgkKGRhdGEpLmZpbHRlcihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHQubG9jYWxlQ29tcGFyZSh0ZXJtKSA9PT0gMDtcclxuICAgICAgICAgIH0pLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBpZDogXCIkKk5ld1RhZyokXCIsIHRleHQ6IHRlcm0gfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG11bHRpcGxlOiB0cnVlLFxyXG4gICAgICB9KS5zZWxlY3QyKCd2YWwnLCBbXSkub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgIFxyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5zZWxlY3QyKCdkYXRhJylbMF07XHJcbiAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgYXBwLm5vZGVNb2RlbC50ZWNobm9sb2d5VHlwZS50ZXh0ID0gZGF0YS50ZXh0O1xyXG4gICAgICAgICAgYXBwLm5vZGVNb2RlbC50ZWNobm9sb2d5VHlwZS5pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgIH0pO1xyXG4gICAgXHJcbiAgICB9LFxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVNwZWNpZmljU3ViamVjdC0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgZW5hYmxlU3BlY2lmaWNTdWJqZWN0OmZ1bmN0aW9uKGFwcCl7XHJcbiAgICAgICQoXCIjc3BlY2lmaWNTdWJqZWN0XCIpLnNlbGVjdDIoe1xyXG4gICAgICAgIHRhZ3M6IFtdLFxyXG4gICAgICAgIC8vIGFsbG93Q2xlYXI6IHRydWUsXHJcbiAgICAgICAgaW5pdFNlbGVjdGlvbjogZnVuY3Rpb24gKGVsZW1lbnQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAvLyB2YXIgZGF0YSA9IHsgaWQ6IDEsIHRleHQ6ICdpbml0U2VsZWN0aW9uIHRlc3QnIH07XHJcbiAgICAgICAgICAvLyBjYWxsYmFjayhkYXRhKTtcclxuICAgICAgICAgIC8vIGFwcC5wcm9qZWN0VHlwZSA9IGRhdGE7XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvLyBtdWx0aXBsZTogdHJ1ZSxcclxuICAgICAgICBtYXhpbXVtSW5wdXRMZW5ndGg6IDMwLFxyXG4gICAgICAgIG1heGltdW1TZWxlY3Rpb25TaXplOiAxLFxyXG4gICAgICAgIGFqYXg6IHsgLy8gaW5zdGVhZCBvZiB3cml0aW5nIHRoZSBmdW5jdGlvbiB0byBleGVjdXRlIHRoZSByZXF1ZXN0IHdlIHVzZSBTZWxlY3QyJ3MgY29udmVuaWVudCBoZWxwZXJcclxuICAgICAgICAgIHVybDogXCIvR2V0U3BlY2lmaWNTdWJqZWN0XCIsXHJcbiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgcXVpZXRNaWxsaXM6IDEwMCxcclxuICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uICh0ZXJtLCBwYWdlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgcXVlcnk6IHRlcm0sIC8vIHNlYXJjaCB0ZXJtXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgcmVzdWx0czogZnVuY3Rpb24gKGRhdGEsIHBhZ2UpIHsgLy8gcGFyc2UgdGhlIHJlc3VsdHMgaW50byB0aGUgZm9ybWF0IGV4cGVjdGVkIGJ5IFNlbGVjdDIuXHJcbiAgICAgICAgICAgIC8vIHNpbmNlIHdlIGFyZSB1c2luZyBjdXN0b20gZm9ybWF0dGluZyBmdW5jdGlvbnMgd2UgZG8gbm90IG5lZWQgdG8gYWx0ZXIgdGhlIHJlbW90ZSBKU09OIGRhdGFcclxuICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0czogZGF0YS5tb2RlbCB9O1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIC8vIGNhY2hlOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjcmVhdGVTZWFyY2hDaG9pY2U6IGZ1bmN0aW9uICh0ZXJtLCBkYXRhKSB7XHJcbiAgICAgICAgICBpZiAoJChkYXRhKS5maWx0ZXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy50ZXh0LmxvY2FsZUNvbXBhcmUodGVybSkgPT09IDA7XHJcbiAgICAgICAgICB9KS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgaWQ6IFwiJCpOZXdUYWcqJFwiLCB0ZXh0OiB0ZXJtIH07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBtdWx0aXBsZTogdHJ1ZSxcclxuICAgICAgfSkuc2VsZWN0MigndmFsJywgW10pLm9uKFwiY2hhbmdlXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIFxyXG4gICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5zZWxlY3QyKCdkYXRhJylbMF07XHJcbiAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgYXBwLm5vZGVNb2RlbC5zcGVjaWZpY1N1YmplY3QudGV4dCA9IGRhdGEudGV4dDtcclxuICAgICAgICAgIGFwcC5ub2RlTW9kZWwuc3BlY2lmaWNTdWJqZWN0LmlkID0gZGF0YS5pZDtcclxuICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICB9KTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgeyBkcm9wZG93bnMgfTsiLCJcclxuaW1wb3J0IHsgbm90ZUpzTW9kZWwgfSBmcm9tIFwiLi9tb2RlbC9ub3RlSnNNb2RlbFwiXHJcbmltcG9ydCB7IGNvZGVNaXJyb3JDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2NvZGVNaXJyb3JDb21wb25lbnRcIlxyXG5pbXBvcnQgeyBzZWxlY3QyIH0gZnJvbSBcIi4vY29tcG9uZW50cy9zZWxlY3QyXCJcclxuXHJcblxyXG53aW5kb3cuRW5hYmxlQWRkTm9kZSA9IGZ1bmN0aW9uICgpIHtcclxuICB2YXIgYXBwID0gbmV3IFZ1ZSh7XHJcbiAgICBlbDogJyNhbmFwcCcsXHJcbiAgICAvLyB0ZW1wbGF0ZTogJyNkZW1vLXRlbXBsYXRlJyxcclxuICAgIGRhdGE6IHtcclxuICAgICAgc2VsZWN0ZWRQcm9qZWN0OiBcIlwiLFxyXG4gICAgICBzZWxlY3RlZFNwZWNpZmljU3ViamVjdDogXCJcIixcclxuICAgICAgc2VsZWN0ZWRHZW5lcmFsU3ViamVjdDogXCJcIixcclxuICAgICAgc2VsZWN0ZWROb3RlVHlwZTogXCJcIixcclxuICAgICAgbWVzc2FnZTogJ0NyZWF0ZSBhIE5vdGUnLFxyXG4gICAgICBub2RlTW9kZWw6IHtcclxuICAgICAgICBib29rTWFyazogZmFsc2UsXHJcbiAgICAgICAgdGl0bGU6IFwiXCIsXHJcbiAgICAgICAgcHJvamVjdFR5cGU6IHt9LFxyXG4gICAgICAgIHRlY2hub2xvZ3lUeXBlOiB7fSxcclxuICAgICAgICBzcGVjaWZpY1N1YmplY3Q6IHt9LFxyXG4gICAgICAgIG5vdGVUeXBlOiB7fSxcclxuICAgICAgICBtb2RlbDogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBtYWluYm9keTogXCJcIixcclxuICAgICAgICAgICAgZGVzYzogXCJcIixcclxuICAgICAgICAgICAgbGFuZzogXCJodG1sbWl4ZWRcIlxyXG4gICAgICAgICAgfV1cclxuICAgICAgfSxcclxuICAgICAgY29tcG9uZW50S2V5OiAxLFxyXG4gICAgfSxcclxuICAgIGNvbXBvbmVudHM6IHtcclxuICAgICAgY29kZU1pcnJvckNvbXBvbmVudCxcclxuICAgICAgc2VsZWN0MlxyXG4gICAgfSxcclxuICAgIHVwZGF0ZWQ6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICBzdWJtaXQoKSB7XHJcblxyXG4gICAgICAgIC8vIHZhciBub2RlTW9kZWwgPSBjb25zb2xlLmxvZyh0aGlzLm5vZGVNb2RlbC5tb2RlbCk7XHJcbiAgICAgICAgYXhpb3MucG9zdCgnL1Bvc3RBZGROb3RlJywgeyBtb2RlbDogdGhpcy5ub2RlTW9kZWwgfSlcclxuICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm5vZGVNb2RlbCA9IHtcclxuICAgICAgICAgICAgICBib29rTWFyazogZmFsc2UsXHJcbiAgICAgICAgICAgICAgdGl0bGU6IFwiXCIsXHJcbiAgICAgICAgICAgICAgcHJvamVjdFR5cGU6IHt9LFxyXG4gICAgICAgICAgICAgIHRlY2hub2xvZ3lUeXBlOiB7fSxcclxuICAgICAgICAgICAgICBzcGVjaWZpY1N1YmplY3Q6IHt9LFxyXG4gICAgICAgICAgICAgIG5vdGVUeXBlOiB7fSxcclxuICAgICAgICAgICAgICBtb2RlbDogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICBtYWluYm9keTogXCJcIixcclxuICAgICAgICAgICAgICAgICAgZGVzYzogXCJcIixcclxuICAgICAgICAgICAgICAgICAgbGFuZzogXCJodG1sbWl4ZWRcIlxyXG4gICAgICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgICAgY29tcG9uZW50S2V5OiAxLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50S2V5ICs9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRQcm9qZWN0PSBcIlwiO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkTm90ZVR5cGU9IFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRTcGVjaWZpY1N1YmplY3Q9IFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRHZW5lcmFsU3ViamVjdD0gXCJcIjtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgIGFsZXJ0KGVycm9yKVxyXG4gICAgICAgICAgfSlcclxuXHJcbiAgICAgIH0sXHJcbiAgICAgIGdldE5vdGVUeXBlU2VsZWN0VmFsdWUoZGF0YSkge1xyXG4gICAgICAgIHRoaXMubm9kZU1vZGVsLm5vdGVUeXBlLnRleHQgPSBkYXRhLnRleHQ7XHJcbiAgICAgICAgdGhpcy5ub2RlTW9kZWwubm90ZVR5cGUuaWQgPSBkYXRhLmlkO1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWROb3RlVHlwZSA9IGRhdGEudGV4dDtcclxuXHJcbiAgICAgIH0sXHJcbiAgICAgIGdldFByb2plY3RTZWxlY3RWYWx1ZShkYXRhKSB7XHJcbiAgICAgICAgYXBwLm5vZGVNb2RlbC5wcm9qZWN0VHlwZS50ZXh0ID0gZGF0YS50ZXh0O1xyXG4gICAgICAgIGFwcC5ub2RlTW9kZWwucHJvamVjdFR5cGUuaWQgPSBkYXRhLmlkO1xyXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRQcm9qZWN0PSBkYXRhLnRleHQ7XHJcblxyXG4gICAgICB9LFxyXG4gICAgICBnZXRHZW5lcmFsU3ViamVjdFNlbGVjdFZhbHVlKGRhdGEpIHtcclxuICAgICAgICBhcHAubm9kZU1vZGVsLnRlY2hub2xvZ3lUeXBlLnRleHQgPSBkYXRhLnRleHQ7XHJcbiAgICAgICAgYXBwLm5vZGVNb2RlbC50ZWNobm9sb2d5VHlwZS5pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZEdlbmVyYWxTdWJqZWN0PSBkYXRhLnRleHQ7XHJcblxyXG4gICAgICB9LCAgICAgIFxyXG4gICAgICBnZXRTcGVjaWZpY1N1YmplY3RTZWxlY3RWYWx1ZShkYXRhKSB7XHJcbiAgICAgICAgYXBwLm5vZGVNb2RlbC5zcGVjaWZpY1N1YmplY3QudGV4dCA9IGRhdGEudGV4dDtcclxuICAgICAgICBhcHAubm9kZU1vZGVsLnNwZWNpZmljU3ViamVjdC5pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZFNwZWNpZmljU3ViamVjdD0gZGF0YS50ZXh0O1xyXG5cclxuICAgICAgfSxcclxuICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICAgIHVwZGF0ZVR5cGUodmFyaWFibGUpIHtcclxuXHJcbiAgICAgIH0sXHJcbiAgICAgIHVwZGF0ZVRlY2hub2xvZ3kodmFyaWFibGUpIHtcclxuXHJcbiAgICAgIH0sXHJcbiAgICAgIHVwZGF0ZVByb2plY3RUeXBlKHZhcmlhYmxlKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codmFyaWFibGUpXHJcbiAgICAgICAgdGhpcy5ub2RlTW9kZWwucHJvamVjdFR5cGUgPSB2YXJpYWJsZTtcclxuICAgICAgfSxcclxuICAgICAgdXBkYXRlQ29kZU1pcnJvclRleHQoaXRlbSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGl0ZW0pXHJcbiAgICAgICAgdGhpcy5ub2RlTW9kZWwubW9kZWxbaXRlbS5pbmRleF0ubWFpbmJvZHkgPSBpdGVtLnZhbHVlXHJcbiAgICAgIH0sXHJcbiAgICAgIGFkZCgpIHtcclxuICAgICAgICB0aGlzLm5vZGVNb2RlbC5tb2RlbC5wdXNoKHtcclxuICAgICAgICAgIG1haW5ib2R5OiBcIlwiLFxyXG4gICAgICAgICAgZGVzYzogXCJcIixcclxuICAgICAgICAgIGxhbmc6IFwiXCJcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGJlZm9yZUNyZWF0ZSgpIHtcclxuICAgICAgY29uc29sZS5sb2coJ05vdGhpbmcgZ2V0cyBjYWxsZWQgYmVmb3JlIG1lIScpXHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZCgpIHtcclxuICAgICAgY29uc29sZS5sb2coJ2NyZWF0ZWQgJylcclxuICAgIH0sXHJcbiAgICBtb3VudGVkKCkge1xyXG4gICAgIC8vICQoXCIuY2FyZEhlaWd0aFwiKS5ibHVyKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG5cclxuIFxyXG59IiwiaW1wb3J0IHsgbm90ZUpzTW9kZWwgfSBmcm9tIFwiLi9tb2RlbC9ub3RlSnNNb2RlbFwiXHJcbmltcG9ydCB7IGNvZGVNaXJyb3JDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2NvZGVNaXJyb3JDb21wb25lbnRcIlxyXG5pbXBvcnQgeyB1dGlsaXR5IH0gZnJvbSBcIi4vY29tbW9uL3V0aWxpdHlKc1wiXHJcbmltcG9ydCB7IGRyb3Bkb3ducyB9IGZyb20gXCIuL2NvbW1vbi9kcm9wZG93bnNKc1wiO1xyXG5pbXBvcnQgeyBzZWxlY3QyIH0gZnJvbSBcIi4vY29tcG9uZW50cy9zZWxlY3QyXCJcclxuXHJcblxyXG53aW5kb3cuRW5hYmxlVnVzSnMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc29sZS5sb2cobm90ZUpzTW9kZWwudGVzdC5uYW1lKTtcclxuXHJcbiAgdmFyIGFjdGlvbiA9ICdpbmFjdGl2ZSc7XHJcbiAgdmFyIHBhZ2UgPSAxO1xyXG4gIHZhciBhcHAgPSBuZXcgVnVlKHtcclxuICAgIGVsOiAnI2FwcCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIG5vdGVUeXBlOiB7fSxcclxuICAgICAgbWVzc2FnZTogJ0hlbGxvIFZ1ZSEnLFxyXG4gICAgICBzZWFyY2hNb2RlbDoge1xyXG4gICAgICAgIHNlYXJjaFRleHRCb3g6IFwiXCIsXHJcbiAgICAgICAgYm9va01hcms6IGZhbHNlLFxyXG4gICAgICAgIG5vdGVUeXBlOiBcIlwiLFxyXG4gICAgICAgIHByb2plY3ROYW1lOiBcIlwiLFxyXG4gICAgICAgIHRlY2hub2xvZ3k6IFwiXCIsXHJcbiAgICAgICAgc3BlY2lmaWNTdWJqZWN0OiBcIlwiLFxyXG4gICAgICB9LFxyXG5cclxuICAgICAgYm94bW9kZWw6IFtdLFxyXG4gICAgICBkZWxldGVNb2RhbE5vdGU6IHtcclxuICAgICAgICBpZDogMCxcclxuICAgICAgICBpbmRleDogMCxcclxuICAgICAgICB0ZXh0OiBcIlwiXHJcbiAgICAgIH0sXHJcbiAgICAgIGNvbXBvbmVudEtleTogMCxcclxuXHJcbiAgICB9LFxyXG4gICAgY29tcG9uZW50czoge1xyXG4gICAgICBjb2RlTWlycm9yQ29tcG9uZW50LFxyXG4gICAgICBzZWxlY3QyXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlZDogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgIGdldE5vdGVUeXBlU2VsZWN0VmFsdWUoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuc2VhcmNoTW9kZWwubm90ZVR5cGUgPSBkYXRhLnRleHQ7XHJcbiAgICAgICAgdGhpcy5zZWFyY2goKTtcclxuICAgICAgfSxcclxuICAgICAgZ2V0UHJvamVjdFNlbGVjdFZhbHVlKGRhdGEpIHtcclxuICAgICAgICB0aGlzLnNlYXJjaE1vZGVsLnByb2plY3ROYW1lID0gZGF0YS50ZXh0O1xyXG4gICAgICAgIHRoaXMuc2VhcmNoKCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGdldEdlbmVyYWxTdWJqZWN0U2VsZWN0VmFsdWUoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuc2VhcmNoTW9kZWwudGVjaG5vbG9neSA9IGRhdGEudGV4dDtcclxuICAgICAgICB0aGlzLnNlYXJjaCgpO1xyXG4gICAgICB9LFxyXG4gICAgICBnZXRTcGVjaWZpY1N1YmplY3RTZWxlY3RWYWx1ZShkYXRhKSB7XHJcbiAgICAgICAgdGhpcy5zZWFyY2hNb2RlbC5zcGVjaWZpY1N1YmplY3QgPSBkYXRhLnRleHQ7XHJcbiAgICAgICAgdGhpcy5zZWFyY2goKTtcclxuICAgICAgfSxcclxuICAgICAgc2VhcmNoOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcGFnZSA9IDE7XHJcbiAgICAgICAgdGhpcy5sb2FkTm90ZShwYWdlLCB0cnVlKTtcclxuICAgICAgfSxcclxuICAgICAgbG9hZE5vdGUocGFnZSwgcmVzZXQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkxMTExMTExMTExMTExMTExPT09ERERcIilcclxuICAgICAgICB2YXIgcGFyYW0gPSB7XHJcbiAgICAgICAgICBwYWdlOiBwYWdlLFxyXG4gICAgICAgICAgcGVyUGFnZTogOCxcclxuICAgICAgICAgIHRpdGxlOiBcIlwiLFxyXG4gICAgICAgICAgYm9va01hcms6IFwiXCIsXHJcbiAgICAgICAgICBub3RlVHlwZTogXCJcIixcclxuICAgICAgICAgIHByb2plY3ROYW1lOiBcIlwiLFxyXG4gICAgICAgICAgdGVjaG5vbG9neTogXCJcIixcclxuICAgICAgICAgIHNwZWNpZmljU3ViamVjdDogXCJcIixcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VhcmNoTW9kZWwuc2VhcmNoVGV4dEJveClcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoTW9kZWwuc2VhcmNoVGV4dEJveCAhPT0gdW5kZWZpbmVkICYmIHRoaXMuc2VhcmNoTW9kZWwuc2VhcmNoVGV4dEJveCAhPSBcIlwiKVxyXG4gICAgICAgICAgcGFyYW0udGl0bGUgPSBcIiZ0aXRsZT1cIiArIHRoaXMuc2VhcmNoTW9kZWwuc2VhcmNoVGV4dEJveDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoTW9kZWwuYm9va01hcmsgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnNlYXJjaE1vZGVsLmJvb2tNYXJrICE9IGZhbHNlKVxyXG4gICAgICAgICAgcGFyYW0uYm9va01hcmsgPSBcIiZib29rTWFyaz1cIiArIHRoaXMuc2VhcmNoTW9kZWwuYm9va01hcms7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNlYXJjaE1vZGVsLm5vdGVUeXBlICE9PSB1bmRlZmluZWQgJiYgdGhpcy5zZWFyY2hNb2RlbC5ub3RlVHlwZSAhPSBmYWxzZSlcclxuICAgICAgICAgIHBhcmFtLm5vdGVUeXBlID0gXCImbm90ZVR5cGU9XCIgKyB0aGlzLnNlYXJjaE1vZGVsLm5vdGVUeXBlO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5zZWFyY2hNb2RlbC5wcm9qZWN0TmFtZSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuc2VhcmNoTW9kZWwucHJvamVjdE5hbWUgIT0gZmFsc2UpXHJcbiAgICAgICAgICBwYXJhbS5wcm9qZWN0TmFtZSA9IFwiJnByb2plY3ROYW1lPVwiICsgdGhpcy5zZWFyY2hNb2RlbC5wcm9qZWN0TmFtZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoTW9kZWwudGVjaG5vbG9neSAhPT0gdW5kZWZpbmVkICYmIHRoaXMuc2VhcmNoTW9kZWwudGVjaG5vbG9neSAhPSBmYWxzZSlcclxuICAgICAgICAgIHBhcmFtLnRlY2hub2xvZ3kgPSBcIiZ0ZWNobm9sb2d5PVwiICsgdGhpcy5zZWFyY2hNb2RlbC50ZWNobm9sb2d5O1xyXG5cclxuICAgICAgICBpZiAodGhpcy5zZWFyY2hNb2RlbC5zcGVjaWZpY1N1YmplY3QgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnNlYXJjaE1vZGVsLnNwZWNpZmljU3ViamVjdCAhPSBmYWxzZSlcclxuICAgICAgICAgIHBhcmFtLnNwZWNpZmljU3ViamVjdCA9IFwiJnNwZWNpZmljU3ViamVjdD1cIiArIHRoaXMuc2VhcmNoTW9kZWwuc3BlY2lmaWNTdWJqZWN0O1xyXG5cclxuXHJcbiAgICAgICAgbm90ZUpzTW9kZWwuZ2V0Tm90ZXMocGFyYW0pXHJcbiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXNldCkge1xyXG4gICAgICAgICAgICAgIHRoaXMuYm94bW9kZWwgPSBbXTtcclxuICAgICAgICAgICAgICB0aGlzLmJveG1vZGVsID0gcmVzcG9uc2UuZGF0YS5tb2RlbFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEubW9kZWwuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYm94bW9kZWwucHVzaChlbGVtZW50KTtcclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhY3Rpb24gPSAnaW5hY3RpdmUnO1xyXG4gICAgICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgLy8gRE9NIGlzIG5vdyB1cGRhdGVkXHJcbiAgICAgICAgICAgICAgLy8gYHRoaXNgIGlzIGJvdW5kIHRvIHRoZSBjdXJyZW50IGluc3RhbmNlXHJcbiAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMTtcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICApXHJcbiAgICAgIH0sXHJcbiAgICAgIE9wZW5DbG9zZU5vdGUoaWQpIHtcclxuICAgICAgICB2YXIgaGVpZ3RoID0gXCIxMDBweFwiO1xyXG4gICAgICAgIGRlYnVnZ2VyO1xyXG4gICAgICAgICQoXCIjb2MtXCIgKyBpZClcclxuICAgICAgICBjb25zb2xlLmxvZygkKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLmNoaWxkcmVuKFwiLmNhcmRIZWlndGhcIikpXHJcbiAgICAgICAgdmFyIHNlbGN0b3IgPSAkKFwiI29jLVwiICsgaWQpO1xyXG4gICAgICAgIHZhciBzZWxlID0gJChzZWxjdG9yKS5wYXJlbnQoKS5wYXJlbnQoKVxyXG4gICAgICAgIHZhciBoID0gJChzZWxjdG9yKS5jc3MoXCJoZWlnaHRcIik7XHJcbiAgICAgICAgaWYgKGggPT0gaGVpZ3RoKSB7XHJcbiAgICAgICAgICAkKHNlbGN0b3IpLmNzcygnaGVpZ2h0JywgJ2F1dG8nKTtcclxuICAgICAgICAgICQoc2VsY3RvcikuY3NzKCdvdmVyZmxvdy15JywgJ2hpZGRlbicpO1xyXG4gICAgICAgICAgJChzZWxlKS5yZW1vdmVDbGFzcyhcImNvbC1sZy02XCIpXHJcbiAgICAgICAgICAkKHNlbGUpLmFkZENsYXNzKFwiY29sLWxnLTEyXCIpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICQoc2VsY3RvcikuY3NzKCdoZWlnaHQnLCBoZWlndGgpO1xyXG4gICAgICAgICAgJChzZWxjdG9yKS5jc3MoJ292ZXJmbG93LXknLCAnc2Nyb2xsJyk7XHJcbiAgICAgICAgICAkKHNlbGUpLnJlbW92ZUNsYXNzKFwiY29sLWxnLTEyXCIpXHJcbiAgICAgICAgICAkKHNlbGUpLmFkZENsYXNzKFwiY29sLWxnLTZcIilcclxuICAgICAgICAgIC8vICQoc2VsY3RvcikuYW5pbWF0ZSh7aGVpZ2h0OlwiMTAwcHhcIn0sIDQwMCwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAvLyAgICAgLy8gQW5pbWF0aW9uIGNvbXBsZXRlLlxyXG4gICAgICAgICAgLy8gICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgICBvcGVuRGVsZXRlTW9kYWwoaWQsIGluZGV4KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coaWQpXHJcbiAgICAgICAgdGhpcy5kZWxldGVNb2RhbE5vdGUuaWQgPSBpZDtcclxuICAgICAgICB0aGlzLmRlbGV0ZU1vZGFsTm90ZS5pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIC8vIGluZGV4XHJcbiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgJCgnI2RlbGV0ZU1vZGFsJykubW9kYWwoJ3RvZ2dsZScpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgIH0sXHJcbiAgICAgIGRlbGV0ZU5vdGUoaWQsIGluZGV4KSB7XHJcbiAgICAgICAgLy8gaWYgKGNvbmZpcm0oXCJXYW5uYSBEZWxldGU/XCIpKSB7XHJcbiAgICAgICAgbm90ZUpzTW9kZWwuZGVsZXRlTm90ZShpZClcclxuICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgZGVidWdnZXI7XHJcbiAgICAgICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmJveG1vZGVsLCBpbmRleClcclxuICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICQoJyNkZWxldGVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgICAgICAgLy9VcGRhdGUgQ29tcG9uZW50cyBhbmQgZXZlcnlUaGluZ1xyXG4gICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50S2V5ICs9IDE7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICApXHJcbiAgICAgICAgLy8gfVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAvLyBhbGVydChcImRzZGZzXCIpXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZCgpIHtcclxuICAgICAgLy8gZHJvcGRvd25zLmVuYWJsZU5vdGVUeXBlKGFwcCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCRcIilcclxuICAgICAgY29uc29sZS5sb2coXCJwYWdlPT5cIilcclxuICAgICAgY29uc29sZS5sb2codXRpbGl0eS5nZXRVcmxQYXJhbWV0ZXIoXCJwcm9qZWN0XCIpKVxyXG4gICAgICB0aGlzLmxvYWROb3RlKHBhZ2UpO1xyXG5cclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoKCQod2luZG93KS5zY3JvbGxUb3AoKSArICQod2luZG93KS5oZWlnaHQoKSA+ICQoZG9jdW1lbnQpLmhlaWdodCgpIC0gNSkgJiYgYWN0aW9uID09ICdpbmFjdGl2ZScpIHtcclxuICAgICAgYWN0aW9uID0gJ2FjdGl2ZSc7XHJcbiAgICAgIC8vICBzdGFydCA9IHN0YXJ0ICsgbGltaXQ7XHJcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHBhZ2UgPSBwYWdlICsgMTtcclxuICAgICAgICBhcHAubG9hZE5vdGUocGFnZSk7XHJcbiAgICAgIH0sIDUwMCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgJChcIiNzZWFyY2hUeHRcIikuZm9jdXMoKTtcclxuICB9KTtcclxuXHJcblxyXG4gICQoJ2JvZHknKS5vbignY2xpY2snLCAnLk9wZW5DbG9zZU5vdGUnLCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIH0pO1xyXG5cclxufSIsIihmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBJbml0aWFsaXplIG5hbWVzcGFjZSAndXRpbGl0aWVzJyAob3IgdXNlIGV4aXN0aW5nIG9uZSBpZiBwcmVzZW50KVxyXG4gICAgd2luZG93Lm5vdGVVdGlsaXR5SnMgPSB3aW5kb3cubm90ZVV0aWxpdHlKcyB8fCB7fTtcclxuICBcclxuXHJcbiAgICB2YXIgZWRpdEFyciA9IFtdO1xyXG4gICAgZm9yIChpID0gMDsgaSA8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJtaXJyb3JDb2RlXCIpLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciBsYW5nID0gJCgkKFwiLm1pcnJvckNvZGVcIilbaV0pLmF0dHIoXCJsYW5nXCIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcImxhbmcgPSBcIiArIGxhbmcpO1xyXG4gICAgICB2YXIgZWRpdG9yID0gQ29kZU1pcnJvci5mcm9tVGV4dEFyZWEoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1pcnJvckNvZGVcIilbaV0sIHtcclxuICAgICAgICBtb2RlOiBsYW5nLFxyXG4gICAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLFxyXG4gICAgICAgIHN0eWxlQWN0aXZlTGluZTogdHJ1ZSxcclxuICAgICAgICBtYXRjaEJyYWNrZXRzOiB0cnVlLFxyXG4gICAgICAgIHZpZXdwb3J0TWFyZ2luOiBJbmZpbml0eSxcclxuICAgICAgfSk7XHJcbiAgICAgIGVkaXRBcnIucHVzaChlZGl0b3IpXHJcbiAgICB9XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gU2V0dXAgLSBhZGQgYSB0ZXh0IGlucHV0IHRvIGVhY2ggZm9vdGVyIGNlbGxcclxuICAgICAgICAkKCcjZXhhbXBsZSB0aGVhZCB0cicpLmNsb25lKHRydWUpLmFwcGVuZFRvKCAnI2V4YW1wbGUgdGhlYWQnICk7XHJcbiAgICAgICAgJCgnI2V4YW1wbGUgdGhlYWQgdHI6ZXEoMSkgdGgnKS5lYWNoKCBmdW5jdGlvbiAoaSkge1xyXG4gICAgICAgICAgICB2YXIgdGl0bGUgPSAkKHRoaXMpLnRleHQoKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5odG1sKCAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJTZWFyY2ggJyt0aXRsZSsnXCIgLz4nICk7XHJcbiAgICAgXHJcbiAgICAgICAgICAgICQoICdpbnB1dCcsIHRoaXMgKS5vbiggJ2tleXVwIGNoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICggdGFibGUuY29sdW1uKGkpLnNlYXJjaCgpICE9PSB0aGlzLnZhbHVlICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb2x1bW4oaSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnNlYXJjaCggdGhpcy52YWx1ZSApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5kcmF3KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gKTtcclxuICAgICAgICB9ICk7XHJcbiAgICAgXHJcbiAgICAgICAgdmFyIHRhYmxlID0gJCgnI2V4YW1wbGUnKS5EYXRhVGFibGUoIHtcclxuICAgICAgICAgICAgb3JkZXJDZWxsc1RvcDogdHJ1ZSxcclxuICAgICAgICAgICAgZml4ZWRIZWFkZXI6IHRydWVcclxuICAgICAgICB9ICk7XHJcbiAgICB9ICk7XHJcbn0pKCk7IiwiKGZ1bmN0aW9uICgkKSB7XG4gIFwidXNlIHN0cmljdFwiOyAvLyBTdGFydCBvZiB1c2Ugc3RyaWN0XG4gIHZhciBpZGMgPSAxO1xuICAkKCdib2R5Jykub24oJ2NsaWNrJywgJyNhZGRwcm9ncmFtbWluZ25vdGVib2R5JywgZnVuY3Rpb24gKCkge1xuICAgIC8vIGFsZXJ0KFwic1wiKVxuICAgIGRlYnVnZ2VyO1xuICAgIGxldCBpZCA9IFwiY29kZVwiICsgaWRjXG4gICAgbGV0IGlkU2VsZWN0ID0gXCJjb2RlXCIgKyBpZGNcblxuICAgIHZhciB0ZXh0QXJlYUJvZHkgPSBgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbm90ZS1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cImArIGlkICsgYFwiIHJvd3M9XCI4XCIgbmFtZT0nY29kZVtgICsgaWRjICsgYF1bYm9keV0nIHN0eWxlPVwibWFyZ2luOiAxMHB4OyBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIlwiIGNsYXNzPVwiY29kZSBmb3JtLWNvbnRyb2xcIj48L3RleHRhcmVhPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2YFxuXG4gICAgdmFyIHJvdyA9IGA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBjb2wtbWQtOVwiPjxpbnB1dCBpZD1cImV4YW1wbGVJbnB1dEVtYWlsMVwiIFxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCIgYXJpYS1kZXNjcmliZWRieT1cImVtYWlsSGVscFwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiVGl0bGVcIiBuYW1lPVwiY29kZVtgKyBpZGMgKyBgXVtkZXNjXVwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGJveC1pZD1cImArIGlkICsgYFwiICBjbGFzcz1cImZvcm0tZ3JvdXAgY29sLW1kLTMgc2VsZWN0bGFuZ1wiPlxuICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz1cImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2xcIiBuYW1lPVwiY29kZVtgKyBpZGMgKyBgXVtjb2RlbGFuZ11cIj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImh0bWxtaXhlZFwiPkh0bWw8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInRleHQvY3NzXCI+IENTUzwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidGV4dC9qYXZhc2NyaXB0XCI+IEphdmFTY3JpcHQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInRleHQveC1zcWxcIj4gU1FsPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ0ZXh0L3gtY3NoYXJwXCI+IEMjPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ0ZXh0L3gtcHl0aG9uXCI+IFB5dGhvbjwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidGV4dC94LWphdmFcIj4gSmF2YTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwidGV4dC94LXBocFwiPiBQSFA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInRleHQveC1jKytzcmNcIj4gQysrPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ0ZXh0L3gtY3NyY1wiPiBDPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJ0ZXh0L3gtZ29cIj4gR288L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInRleHQveC1yc3JjXCI+IFI8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImFwcGxpY2F0aW9uL3gtcG93ZXJzaGVsbFwiPiBQb3dlclNoZWxsPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5gXG5cbiAgICAkKFwiLm5vdGUtYm9keVwiKS5sYXN0KCkuYWZ0ZXIocm93ICsgdGV4dEFyZWFCb2R5KTtcblxuICAgIHZhciBlZGl0b3IgPSBDb2RlTWlycm9yLmZyb21UZXh0QXJlYShkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCksIHtcbiAgICAgIGxpbmVOdW1iZXJzOiB0cnVlLFxuICAgICAgc3R5bGVBY3RpdmVMaW5lOiB0cnVlLFxuICAgICAgbWF0Y2hCcmFja2V0czogdHJ1ZSxcbiAgICAgIHZpZXdwb3J0TWFyZ2luOiBJbmZpbml0eSxcbiAgICAgIC8vIG1vZGU6IFwiaHRtbG1peGVkXCJcbiAgICB9KTtcbiAgICAvLyBlZGl0QXJyLnB1c2goZWRpdG9yKVxuICAgIGlkYyA9IGlkYyArIDE7XG4gIH0pO1xuXG4gICQoJ2JvZHknKS5vbignY2hhbmdlJywgJy5zZWxlY3RsYW5nJywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBzID0gJCh0aGlzKS5hdHRyKFwiYm94LWlkXCIpXG4gICAgdmFyIHYgPSAkKHRoaXMpLnZhbCgpXG4gICAgLy8gYWxlcnQocyt2KTtcbiAgfSk7XG5cbiAgJChcIiNzZWFyY2hCb3hCdG5cIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgIHZhciByZXN1bHQgPSAkKFwiI3NlYXJjaEJveFwiKS52YWwoKTtcbiAgICBsb2NhdGlvbi5ocmVmID0gXCIvTm90ZXM/dGl0bGU9XCIrcmVzdWx0O1xuICB9KTtcblxuXG5cbiAgZnVuY3Rpb24gdG9nZ2xlU2lkZWJhcigpIHtcbiAgICAkKFwiYm9keVwiKS50b2dnbGVDbGFzcyhcInNpZGViYXItdG9nZ2xlZFwiKTtcbiAgICAkKFwiLnNpZGViYXJcIikudG9nZ2xlQ2xhc3MoXCJ0b2dnbGVkXCIpO1xuICAgIGlmICgkKFwiLnNpZGViYXJcIikuaGFzQ2xhc3MoXCJ0b2dnbGVkXCIpKSB7XG4gICAgICAkKCcuc2lkZWJhciAuY29sbGFwc2UnKS5jb2xsYXBzZSgnaGlkZScpO1xuICAgIH07XG4gIH1cbiAgdG9nZ2xlU2lkZWJhcigpO1xuICAvLyBUb2dnbGUgdGhlIHNpZGUgbmF2aWdhdGlvblxuICAkKFwiI3NpZGViYXJUb2dnbGUsICNzaWRlYmFyVG9nZ2xlVG9wXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgdG9nZ2xlU2lkZWJhcigpO1xuICAgIC8vICQoXCJib2R5XCIpLnRvZ2dsZUNsYXNzKFwic2lkZWJhci10b2dnbGVkXCIpO1xuICAgIC8vICQoXCIuc2lkZWJhclwiKS50b2dnbGVDbGFzcyhcInRvZ2dsZWRcIik7XG4gICAgLy8gaWYgKCQoXCIuc2lkZWJhclwiKS5oYXNDbGFzcyhcInRvZ2dsZWRcIikpIHtcbiAgICAvLyAgICQoJy5zaWRlYmFyIC5jb2xsYXBzZScpLmNvbGxhcHNlKCdoaWRlJyk7XG4gICAgLy8gfTtcbiAgfSk7XG5cbiAgLy8gQ2xvc2UgYW55IG9wZW4gbWVudSBhY2NvcmRpb25zIHdoZW4gd2luZG93IGlzIHJlc2l6ZWQgYmVsb3cgNzY4cHhcbiAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCQod2luZG93KS53aWR0aCgpIDwgNzY4KSB7XG4gICAgICAkKCcuc2lkZWJhciAuY29sbGFwc2UnKS5jb2xsYXBzZSgnaGlkZScpO1xuICAgIH07XG4gIH0pO1xuXG4gIC8vIFByZXZlbnQgdGhlIGNvbnRlbnQgd3JhcHBlciBmcm9tIHNjcm9sbGluZyB3aGVuIHRoZSBmaXhlZCBzaWRlIG5hdmlnYXRpb24gaG92ZXJlZCBvdmVyXG4gICQoJ2JvZHkuZml4ZWQtbmF2IC5zaWRlYmFyJykub24oJ21vdXNld2hlZWwgRE9NTW91c2VTY3JvbGwgd2hlZWwnLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+IDc2OCkge1xuICAgICAgdmFyIGUwID0gZS5vcmlnaW5hbEV2ZW50LFxuICAgICAgICBkZWx0YSA9IGUwLndoZWVsRGVsdGEgfHwgLWUwLmRldGFpbDtcbiAgICAgIHRoaXMuc2Nyb2xsVG9wICs9IChkZWx0YSA8IDAgPyAxIDogLTEpICogMzA7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9KTtcblxuICAvLyBTY3JvbGwgdG8gdG9wIGJ1dHRvbiBhcHBlYXJcbiAgJChkb2N1bWVudCkub24oJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2Nyb2xsRGlzdGFuY2UgPSAkKHRoaXMpLnNjcm9sbFRvcCgpO1xuICAgIGlmIChzY3JvbGxEaXN0YW5jZSA+IDEwMCkge1xuICAgICAgJCgnLnNjcm9sbC10by10b3AnKS5mYWRlSW4oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJCgnLnNjcm9sbC10by10b3AnKS5mYWRlT3V0KCk7XG4gICAgfVxuICB9KTtcblxuICAvLyBTbW9vdGggc2Nyb2xsaW5nIHVzaW5nIGpRdWVyeSBlYXNpbmdcbiAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ2Euc2Nyb2xsLXRvLXRvcCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyICRhbmNob3IgPSAkKHRoaXMpO1xuICAgICQoJ2h0bWwsIGJvZHknKS5zdG9wKCkuYW5pbWF0ZSh7XG4gICAgICBzY3JvbGxUb3A6ICgkKCRhbmNob3IuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3ApXG4gICAgfSwgMTAwMCwgJ2Vhc2VJbk91dEV4cG8nKTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0pO1xuXG59KShqUXVlcnkpOyAvLyBFbmQgb2YgdXNlIHN0cmljdFxuIiwiLyohXG4gKiBMaXF1b3JUcmVlIHYwLjIuNTlcbiAqIChjKSAyMDE5IGFtc2lrXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbnZhciBOb2RlQ29udGVudD17bmFtZTpcIm5vZGUtY29udGVudFwiLHByb3BzOltcIm5vZGVcIl0scmVuZGVyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj10aGlzLm5vZGUscj10aGlzLm5vZGUudHJlZS52bTtpZihuLmlzRWRpdGluZyl7dmFyIG89bi50ZXh0O3JldHVybiB0aGlzLiRuZXh0VGljayhmdW5jdGlvbihlKXt0LiRyZWZzLmVkaXRDdHJsLmZvY3VzKCl9KSxlKFwiaW5wdXRcIix7ZG9tUHJvcHM6e3ZhbHVlOm4udGV4dCx0eXBlOlwidGV4dFwifSxjbGFzczpcInRyZWUtaW5wdXRcIixvbjp7aW5wdXQ6ZnVuY3Rpb24oZSl7bz1lLnRhcmdldC52YWx1ZX0sYmx1cjpmdW5jdGlvbigpe24uc3RvcEVkaXRpbmcobyl9LGtleXVwOmZ1bmN0aW9uKGUpezEzPT09ZS5rZXlDb2RlJiZuLnN0b3BFZGl0aW5nKG8pfSxtb3VzZXVwOmZ1bmN0aW9uKGUpe2Uuc3RvcFByb3BhZ2F0aW9uKCl9fSxyZWY6XCJlZGl0Q3RybFwifSl9cmV0dXJuIHIuJHNjb3BlZFNsb3RzLmRlZmF1bHQ/ci4kc2NvcGVkU2xvdHMuZGVmYXVsdCh7bm9kZTp0aGlzLm5vZGV9KTplKFwic3BhblwiLHtkb21Qcm9wczp7aW5uZXJIVE1MOm4udGV4dH19KX19OyFmdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudCl7dmFyIGU9ZG9jdW1lbnQuaGVhZHx8ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLG49JyAudHJlZS1ub2RlIHsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcG9zaXRpb246IHJlbGF0aXZlOyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9IC50cmVlLWNvbnRlbnQgeyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBwYWRkaW5nOiAzcHg7IGN1cnNvcjogcG9pbnRlcjsgd2lkdGg6IDEwMCU7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH0gLnRyZWUtbm9kZTpub3QoLnNlbGVjdGVkKSA+IC50cmVlLWNvbnRlbnQ6aG92ZXIgeyBiYWNrZ3JvdW5kOiAjZjZmOGZiOyB9IC50cmVlLW5vZGUuc2VsZWN0ZWQgPiAudHJlZS1jb250ZW50IHsgYmFja2dyb3VuZC1jb2xvcjogI2U3ZWVmNzsgfSAudHJlZS1ub2RlLmRpc2FibGVkID4gLnRyZWUtY29udGVudDpob3ZlciB7IGJhY2tncm91bmQ6IGluaGVyaXQ7IH0gLnRyZWUtYXJyb3cgeyBmbGV4LXNocmluazogMDsgaGVpZ2h0OiAzMHB4OyBjdXJzb3I6IHBvaW50ZXI7IG1hcmdpbi1sZWZ0OiAzMHB4OyB3aWR0aDogMDsgfSAudHJlZS1hcnJvdy5oYXMtY2hpbGQgeyBtYXJnaW4tbGVmdDogMDsgd2lkdGg6IDMwcHg7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfSAudHJlZS1hcnJvdy5oYXMtY2hpbGQ6YWZ0ZXIgeyBib3JkZXI6IDEuNXB4IHNvbGlkICM0OTQ2NDY7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgYm9yZGVyLWxlZnQ6IDA7IGJvcmRlci10b3A6IDA7IGxlZnQ6IDlweDsgdG9wOiA1MCU7IGhlaWdodDogOXB4OyB3aWR0aDogOXB4OyB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgwKTsgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4yNXM7IHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjsgfSAudHJlZS1hcnJvdy5oYXMtY2hpbGQucnRsOmFmdGVyIHsgYm9yZGVyOiAxLjVweCBzb2xpZCAjNDk0NjQ2OyBwb3NpdGlvbjogYWJzb2x1dGU7IGJvcmRlci1yaWdodDogMDsgYm9yZGVyLWJvdHRvbTogMDsgcmlnaHQ6IDBweDsgdG9wOiA1MCU7IGhlaWdodDogOXB4OyB3aWR0aDogOXB4OyB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgwKTsgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4yNXM7IHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjsgfSAudHJlZS1hcnJvdy5leHBhbmRlZC5oYXMtY2hpbGQ6YWZ0ZXIgeyB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01cHgpOyB9IC50cmVlLWNoZWNrYm94IHsgZmxleC1zaHJpbms6IDA7IHBvc2l0aW9uOiByZWxhdGl2ZTsgd2lkdGg6IDMwcHg7IGhlaWdodDogMzBweDsgYm94LXNpemluZzogYm9yZGVyLWJveDsgYm9yZGVyOiAxcHggc29saWQgI2RhZGFkYTsgYm9yZGVyLXJhZGl1czogMnB4OyBiYWNrZ3JvdW5kOiAjZmZmOyB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgLjI1cywgYmFja2dyb3VuZC1jb2xvciAuMjVzOyB9IC50cmVlLWNoZWNrYm94OmFmdGVyLCAudHJlZS1hcnJvdzphZnRlciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgZGlzcGxheTogYmxvY2s7IGNvbnRlbnQ6IFwiXCI7IH0gLnRyZWUtY2hlY2tib3guY2hlY2tlZCwgLnRyZWUtY2hlY2tib3guaW5kZXRlcm1pbmF0ZSB7IGJhY2tncm91bmQtY29sb3I6ICMzYTk5ZmM7IGJvcmRlci1jb2xvcjogIzIxOGVmZjsgfSAudHJlZS1jaGVja2JveC5jaGVja2VkOmFmdGVyIHsgYm94LXNpemluZzogY29udGVudC1ib3g7IGJvcmRlcjogMS41cHggc29saWQgI2ZmZjsgLyogcHJvYmFibHkgd2lkdGggd291bGQgYmUgcm91bmRlZCBpbiBtb3N0IGNhc2VzICovIGJvcmRlci1sZWZ0OiAwOyBib3JkZXItdG9wOiAwOyBsZWZ0OiA5cHg7IHRvcDogM3B4OyBoZWlnaHQ6IDE1cHg7IHdpZHRoOiA4cHg7IHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVkoMCk7IHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMjVzOyB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7IH0gLnRyZWUtY2hlY2tib3guY2hlY2tlZDphZnRlciB7IHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZVkoMSk7IH0gLnRyZWUtY2hlY2tib3guaW5kZXRlcm1pbmF0ZTphZnRlciB7IGJhY2tncm91bmQtY29sb3I6ICNmZmY7IHRvcDogNTAlOyBsZWZ0OiAyMCU7IHJpZ2h0OiAyMCU7IGhlaWdodDogMnB4OyB9IC50cmVlLWFuY2hvciB7IGZsZXgtZ3JvdzogMjsgb3V0bGluZTogbm9uZTsgZGlzcGxheTogZmxleDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBjb2xvcjogIzM0MzQzNDsgdmVydGljYWwtYWxpZ246IHRvcDsgbWFyZ2luLWxlZnQ6IDNweDsgbGluZS1oZWlnaHQ6IDI0cHg7IHBhZGRpbmc6IDNweCA2cHg7IC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7IC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7IC1tcy11c2VyLXNlbGVjdDogbm9uZTsgdXNlci1zZWxlY3Q6IG5vbmU7IH0gLnRyZWUtbm9kZS5zZWxlY3RlZCA+IC50cmVlLWNvbnRlbnQgPiAudHJlZS1hbmNob3IgeyBvdXRsaW5lOiBub25lOyB9IC50cmVlLW5vZGUuZGlzYWJsZWQgPiAudHJlZS1jb250ZW50ID4gLnRyZWUtYW5jaG9yIHsgY29sb3I6ICM5ODkxOTE7IGJhY2tncm91bmQ6ICNmZmY7IG9wYWNpdHk6IC42OyBjdXJzb3I6IGRlZmF1bHQ7IG91dGxpbmU6IG5vbmU7IH0gLnRyZWUtaW5wdXQgeyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IDEwMCU7IGhlaWdodDogMjRweDsgbGluZS1oZWlnaHQ6IDI0cHg7IG91dGxpbmU6IG5vbmU7IGJvcmRlcjogMXB4IHNvbGlkICMzNDk4ZGI7IHBhZGRpbmc6IDAgNHB4OyB9IC5sLWZhZGUtZW50ZXItYWN0aXZlLCAubC1mYWRlLWxlYXZlLWFjdGl2ZSB7IHRyYW5zaXRpb246IG9wYWNpdHkgLjNzLCB0cmFuc2Zvcm0gLjNzOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH0gLmwtZmFkZS1lbnRlciwgLmwtZmFkZS1sZWF2ZS10byB7IG9wYWNpdHk6IDA7IHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMmVtKTsgfSAudHJlZS0tc21hbGwgLnRyZWUtYW5jaG9yIHsgbGluZS1oZWlnaHQ6IDE5cHg7IH0gLnRyZWUtLXNtYWxsIC50cmVlLWNoZWNrYm94IHsgd2lkdGg6IDIzcHg7IGhlaWdodDogMjNweDsgfSAudHJlZS0tc21hbGwgLnRyZWUtYXJyb3cgeyBoZWlnaHQ6IDIzcHg7IH0gLnRyZWUtLXNtYWxsIC50cmVlLWNoZWNrYm94LmNoZWNrZWQ6YWZ0ZXIgeyBsZWZ0OiA3cHg7IHRvcDogM3B4OyBoZWlnaHQ6IDExcHg7IHdpZHRoOiA1cHg7IH0gLnRyZWUtbm9kZS5oYXMtY2hpbGQubG9hZGluZyA+IC50cmVlLWNvbnRlbnQgPiAudHJlZS1hcnJvdywgLnRyZWUtbm9kZS5oYXMtY2hpbGQubG9hZGluZyA+IC50cmVlLWNvbnRlbnQgPiAudHJlZS1hcnJvdzphZnRlciB7IGJvcmRlci1yYWRpdXM6IDUwJTsgd2lkdGg6IDE1cHg7IGhlaWdodDogMTVweDsgYm9yZGVyOiAwOyB9IC50cmVlLW5vZGUuaGFzLWNoaWxkLmxvYWRpbmcgPiAudHJlZS1jb250ZW50ID4gLnRyZWUtYXJyb3cgeyBmb250LXNpemU6IDNweDsgcG9zaXRpb246IHJlbGF0aXZlOyBib3JkZXItdG9wOiAxLjFlbSBzb2xpZCByZ2JhKDQ1LDQ1LDQ1LCAwLjIpOyBib3JkZXItcmlnaHQ6IDEuMWVtIHNvbGlkIHJnYmEoNDUsNDUsNDUsIDAuMik7IGJvcmRlci1ib3R0b206IDEuMWVtIHNvbGlkIHJnYmEoNDUsNDUsNDUsIDAuMik7IGJvcmRlci1sZWZ0OiAxLjFlbSBzb2xpZCAjMmQyZDJkOyAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTsgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApOyBsZWZ0OiA1cHg7IC13ZWJraXQtYW5pbWF0aW9uOiBsb2FkaW5nIDEuMXMgaW5maW5pdGUgbGluZWFyOyBhbmltYXRpb246IGxvYWRpbmcgMS4xcyBpbmZpbml0ZSBsaW5lYXI7IG1hcmdpbi1yaWdodDogOHB4OyB9IEAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nIHsgMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfSAxMDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH0gQGtleWZyYW1lcyBsb2FkaW5nIHsgMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfSAxMDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH0gJzt0LnR5cGU9XCJ0ZXh0L2Nzc1wiLHQuc3R5bGVTaGVldD90LnN0eWxlU2hlZXQuY3NzVGV4dD1uOnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobikpLGUuYXBwZW5kQ2hpbGQodCl9fSgpO3ZhciBUcmVlTm9kZT17cmVuZGVyOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PWUuJGNyZWF0ZUVsZW1lbnQsbj1lLl9zZWxmLl9jfHx0O3JldHVybiBuKFwibGlcIix7c3RhdGljQ2xhc3M6XCJ0cmVlLW5vZGVcIixjbGFzczplLm5vZGVDbGFzcyxhdHRyczp7XCJkYXRhLWlkXCI6ZS5ub2RlLmlkfSxvbjp7bW91c2Vkb3duOmZ1bmN0aW9uKHQpe3JldHVybiB0LnN0b3BQcm9wYWdhdGlvbigpLGUuaGFuZGxlTW91c2VEb3duKHQpfX19LFtuKFwiZGl2XCIse3N0YXRpY0NsYXNzOlwidHJlZS1jb250ZW50XCIsc3R5bGU6W1wibHRyXCI9PWUub3B0aW9ucy5kaXJlY3Rpb24/e1wicGFkZGluZy1sZWZ0XCI6ZS5wYWRkaW5nfTp7XCJwYWRkaW5nLXJpZ2h0XCI6ZS5wYWRkaW5nfV0sb246e2NsaWNrOmZ1bmN0aW9uKHQpe3JldHVybiB0LnN0b3BQcm9wYWdhdGlvbigpLGUuc2VsZWN0KHQpfX19LFtuKFwiaVwiLHtzdGF0aWNDbGFzczpcInRyZWUtYXJyb3dcIixjbGFzczpbe2V4cGFuZGVkOmUubm9kZS5zdGF0ZXMuZXhwYW5kZWQsXCJoYXMtY2hpbGRcIjplLm5vZGUuY2hpbGRyZW4ubGVuZ3RofHxlLm5vZGUuaXNCYXRjaH0sZS5vcHRpb25zLmRpcmVjdGlvbl0sb246e2NsaWNrOmZ1bmN0aW9uKHQpe3JldHVybiB0LnN0b3BQcm9wYWdhdGlvbigpLGUudG9nZ2xlRXhwYW5kKHQpfX19KSxlLl92KFwiIFwiKSxlLm9wdGlvbnMuY2hlY2tib3g/bihcImlcIix7c3RhdGljQ2xhc3M6XCJ0cmVlLWNoZWNrYm94XCIsY2xhc3M6e2NoZWNrZWQ6ZS5ub2RlLnN0YXRlcy5jaGVja2VkLGluZGV0ZXJtaW5hdGU6ZS5ub2RlLnN0YXRlcy5pbmRldGVybWluYXRlfSxvbjp7Y2xpY2s6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RvcFByb3BhZ2F0aW9uKCksZS5jaGVjayh0KX19fSk6ZS5fZSgpLGUuX3YoXCIgXCIpLG4oXCJzcGFuXCIse3JlZjpcImFuY2hvclwiLHN0YXRpY0NsYXNzOlwidHJlZS1hbmNob3JcIixhdHRyczp7dGFiaW5kZXg6XCItMVwifSxvbjp7Zm9jdXM6ZS5vbk5vZGVGb2N1cyxkYmxjbGljazpmdW5jdGlvbih0KXtlLnRyZWUuJGVtaXQoXCJub2RlOmRibGNsaWNrXCIsZS5ub2RlKX19fSxbbihcIm5vZGUtY29udGVudFwiLHthdHRyczp7bm9kZTplLm5vZGV9fSldLDEpXSksZS5fdihcIiBcIiksbihcInRyYW5zaXRpb25cIix7YXR0cnM6e25hbWU6XCJsLWZhZGVcIn19LFtlLmhhc0NoaWxkcmVuKCkmJmUubm9kZS5zdGF0ZXMuZXhwYW5kZWQ/bihcInVsXCIse3N0YXRpY0NsYXNzOlwidHJlZS1jaGlsZHJlblwifSxlLl9sKGUubm9kZS5jaGlsZHJlbixmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC52aXNpYmxlKCk/bihcIm5vZGVcIix7a2V5OnQuaWQsYXR0cnM6e25vZGU6dCxvcHRpb25zOmUub3B0aW9uc319KTplLl9lKCl9KSk6ZS5fZSgpXSldLDEpfSxzdGF0aWNSZW5kZXJGbnM6W10sbmFtZTpcIk5vZGVcIixpbmplY3Q6W1widHJlZVwiXSxwcm9wczpbXCJub2RlXCIsXCJvcHRpb25zXCJdLGNvbXBvbmVudHM6e05vZGVDb250ZW50Ok5vZGVDb250ZW50fSx3YXRjaDp7bm9kZTpmdW5jdGlvbigpe3RoaXMubm9kZS52bT10aGlzfX0sZGF0YTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5vZGUudm09dGhpcyx7bG9hZGluZzohMX19LGNvbXB1dGVkOntwYWRkaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9kZS5kZXB0aCoodGhpcy5vcHRpb25zLnBhZGRpbmdMZWZ0P3RoaXMub3B0aW9ucy5wYWRkaW5nTGVmdDp0aGlzLm9wdGlvbnMubm9kZUluZGVudCkrXCJweFwifSxub2RlQ2xhc3M6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm5vZGUuc3RhdGVzLHQ9dGhpcy5oYXNDaGlsZHJlbigpLG49e1wiaGFzLWNoaWxkXCI6dCxleHBhbmRlZDp0JiZlLmV4cGFuZGVkLHNlbGVjdGVkOmUuc2VsZWN0ZWQsZGlzYWJsZWQ6ZS5kaXNhYmxlZCxtYXRjaGVkOmUubWF0Y2hlZCxkcmFnZ2luZzplLmRyYWdnaW5nLGxvYWRpbmc6dGhpcy5sb2FkaW5nLGRyYWdnYWJsZTplLmRyYWdnYWJsZX07cmV0dXJuIHRoaXMub3B0aW9ucy5jaGVja2JveCYmKG4uY2hlY2tlZD1lLmNoZWNrZWQsbi5pbmRldGVybWluYXRlPWUuaW5kZXRlcm1pbmF0ZSksbn19LG1ldGhvZHM6e29uTm9kZUZvY3VzOmZ1bmN0aW9uKCl7dGhpcy50cmVlLmFjdGl2ZUVsZW1lbnQ9dGhpcy5ub2RlfSxmb2N1czpmdW5jdGlvbigpe3RoaXMuJHJlZnMuYW5jaG9yLmZvY3VzKCksdGhpcy5ub2RlLnNlbGVjdCgpfSxjaGVjazpmdW5jdGlvbigpe3RoaXMubm9kZS5jaGVja2VkKCk/dGhpcy5ub2RlLnVuY2hlY2soKTp0aGlzLm5vZGUuY2hlY2soKX0sc2VsZWN0OmZ1bmN0aW9uKGUpe3ZvaWQgMD09PWUmJihlPWV2bnQpO3ZhciB0PWUuY3RybEtleSxuPXRoaXMub3B0aW9ucyxyPXRoaXMudHJlZSxvPXRoaXMubm9kZTtpZihyLiRlbWl0KFwibm9kZTpjbGlja2VkXCIsbyksIW4uZWRpdGluZ3x8IW8uaXNFZGl0aW5nKXtpZihuLmVkaXRpbmcmJm8uZWRpdGFibGUoKSlyZXR1cm4gdGhpcy5zdGFydEVkaXRpbmcoKTtpZihuLmNoZWNrYm94JiZuLmNoZWNrT25TZWxlY3QpcmV0dXJuIW4ucGFyZW50U2VsZWN0JiZ0aGlzLmhhc0NoaWxkcmVuKCk/dGhpcy50b2dnbGVFeHBhbmQoKTp0aGlzLmNoZWNrKHQpOyFuLnBhcmVudFNlbGVjdCYmdGhpcy5oYXNDaGlsZHJlbigpJiZ0aGlzLnRvZ2dsZUV4cGFuZCgpLG4ubXVsdGlwbGU/by5zZWxlY3RlZCgpP3Q/by51bnNlbGVjdCgpOjEhPXRoaXMudHJlZS5zZWxlY3RlZE5vZGVzLmxlbmd0aCYmKHIudW5zZWxlY3RBbGwoKSxvLnNlbGVjdCgpKTpvLnNlbGVjdCh0KTpvLnNlbGVjdGVkKCkmJnQ/by51bnNlbGVjdCgpOm8uc2VsZWN0KCl9fSx0b2dnbGVFeHBhbmQ6ZnVuY3Rpb24oKXt0aGlzLmhhc0NoaWxkcmVuKCkmJnRoaXMubm9kZS50b2dnbGVFeHBhbmQoKX0saGFzQ2hpbGRyZW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ub2RlLmhhc0NoaWxkcmVuKCl9LHN0YXJ0RWRpdGluZzpmdW5jdGlvbigpe3RoaXMudHJlZS5fZWRpdGluZ05vZGUmJnRoaXMudHJlZS5fZWRpdGluZ05vZGUuc3RvcEVkaXRpbmcoKSx0aGlzLm5vZGUuc3RhcnRFZGl0aW5nKCl9LHN0b3BFZGl0aW5nOmZ1bmN0aW9uKCl7dGhpcy5ub2RlLnN0b3BFZGl0aW5nKCl9LGhhbmRsZU1vdXNlRG93bjpmdW5jdGlvbihlKXt0aGlzLm9wdGlvbnMuZG5kJiZ0aGlzLnRyZWUudm0uc3RhcnREcmFnZ2luZyh0aGlzLm5vZGUsZSl9fX07IWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50KXt2YXIgZT1kb2N1bWVudC5oZWFkfHxkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0sdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIiksbj1cIiAudHJlZS1kcmFnbm9kZSB7IHBhZGRpbmc6IDEwcHg7IGJvcmRlcjogMXB4IHNvbGlkICNlN2VlZjc7IHBvc2l0aW9uOiBmaXhlZDsgYm9yZGVyLXJhZGl1czogOHB4OyBiYWNrZ3JvdW5kOiAjZmZmOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMTEwJSk7IHotaW5kZXg6IDEwOyB9IFwiO3QudHlwZT1cInRleHQvY3NzXCIsdC5zdHlsZVNoZWV0P3Quc3R5bGVTaGVldC5jc3NUZXh0PW46dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuKSksZS5hcHBlbmRDaGlsZCh0KX19KCk7dmFyIERyYWdnYWJsZU5vZGU9e3JlbmRlcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuJGNyZWF0ZUVsZW1lbnQ7cmV0dXJuKHRoaXMuX3NlbGYuX2N8fGUpKFwiZGl2XCIse3N0YXRpY0NsYXNzOlwidHJlZS1kcmFnbm9kZVwiLHN0eWxlOnRoaXMuc3R5bGV9LFt0aGlzLl92KFwiIFwiK3RoaXMuX3ModGhpcy50YXJnZXQubm9kZS50ZXh0KStcIiBcIildKX0sc3RhdGljUmVuZGVyRm5zOltdLG5hbWU6XCJEcmFnTm9kZVwiLHByb3BzOltcInRhcmdldFwiXSxjb21wdXRlZDp7c3R5bGU6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dGhpcy50YXJnZXQudG9wP1wiZGlzcGxheTogbm9uZVwiOlwidG9wOiBcIit0aGlzLnRhcmdldC50b3ArXCJweDsgbGVmdDogXCIrdGhpcy50YXJnZXQubGVmdCtcInB4XCJ9fX07ZnVuY3Rpb24gcmVjdXJzZURvd24oZSx0KXt2YXIgbjtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9lLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gcmVjdXJzZURvd24oZSx0KX0pOighMSE9PShuPXQoZSkpJiZlLmNoaWxkcmVuJiZlLmNoaWxkcmVuLmxlbmd0aCYmKG49cmVjdXJzZURvd24oZS5jaGlsZHJlbix0KSksbil9ZnVuY3Rpb24gc3RyaXB0YWdzKGUpe3JldHVybiExPT0hIWRvY3VtZW50P2U6KHN0cmlwdGFncy5fX2VsZW1lbnR8fChzdHJpcHRhZ3MuX19lbGVtZW50PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpLHN0cmlwdGFncy5fX2VsZW1lbnQuaW5uZXJIVE1MPWUsc3RyaXB0YWdzLl9fZWxlbWVudC5pbm5lclRleHQpfWZ1bmN0aW9uIGZpbmRlcihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5rZXlzKGUpLmV2ZXJ5KGZ1bmN0aW9uKG4pe2lmKFwidGV4dFwiPT09bnx8XCJpZFwiPT09bil7dmFyIHI9ZVtuXSxvPXRbbl07cmV0dXJuIG89c3RyaXB0YWdzKG8pLGlzUmVnRXhwKHIpP3IudGVzdChvKTpyPT09b312YXIgaT1lW25dO3JldHVyblwic3RhdGVcIj09PW4mJihuPVwic3RhdGVzXCIpLE9iamVjdC5rZXlzKGkpLmV2ZXJ5KGZ1bmN0aW9uKGUpe3JldHVybiB0W25dW2VdPT09aVtlXX0pfSl9fWZ1bmN0aW9uIGlzUmVnRXhwKGUpe3JldHVybiBlIGluc3RhbmNlb2YgUmVnRXhwfWZ1bmN0aW9uIGdldEFsbENoaWxkcmVuKGUpe3ZhciB0PVtdO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24gZShuKXt0LnB1c2gobiksbi5jaGlsZHJlbiYmbi5jaGlsZHJlbi5mb3JFYWNoKGUpfSksdH1mdW5jdGlvbiBmaW5kKGUsdCxuKXtpZih2b2lkIDA9PT1uJiYobj0hMCksIWV8fCFlLmxlbmd0aHx8IXQpcmV0dXJuIG51bGw7aWYobiYmKGU9Z2V0QWxsQ2hpbGRyZW4oZSkpLFwibnVtYmVyXCI9PXR5cGVvZiB0KXJldHVybiBlW3RdfHxudWxsOyhcInN0cmluZ1wiPT10eXBlb2YgdHx8dCBpbnN0YW5jZW9mIFJlZ0V4cCkmJih0PXt0ZXh0OnR9KSxcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiYodD1maW5kZXIodCkpO3ZhciByPWUuZmlsdGVyKHQpO3JldHVybiByLmxlbmd0aD9yOm51bGx9ZnVuY3Rpb24gczQoKXtyZXR1cm4gTWF0aC5mbG9vcig2NTUzNiooMStNYXRoLnJhbmRvbSgpKSkudG9TdHJpbmcoMTYpLnN1YnN0cmluZygxKX1mdW5jdGlvbiB1dWlkVjQoKXtyZXR1cm4gczQoKStzNCgpK1wiLVwiK3M0KCkrXCItXCIrczQoKStcIi1cIitzNCgpK1wiLVwiK3M0KCkrczQoKStzNCgpfWZ1bmN0aW9uIG5vZGVJdGVyYXRvcihlLHQpe2Zvcih2YXIgbj1bXSxyPWFyZ3VtZW50cy5sZW5ndGgtMjtyLS0gPjA7KW5bcl09YXJndW1lbnRzW3IrMl07ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiBlW3RdLmFwcGx5KGUsbil9KX12YXIgU2VsZWN0aW9uPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCxuKXt2YXIgcjt2b2lkIDA9PT1uJiYobj1bXSksZS5jYWxsKHRoaXMpLHRoaXMudHJlZT10LChyPXRoaXMpLnB1c2guYXBwbHkocixuKX1yZXR1cm4gZSYmKHQuX19wcm90b19fPWUpLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZSYmZS5wcm90b3R5cGUpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXQsdC5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7cmV0dXJuIG5vZGVJdGVyYXRvcih0aGlzLFwicmVtb3ZlXCIpLHRoaXN9LHQucHJvdG90eXBlLmV4cGFuZD1mdW5jdGlvbigpe3JldHVybiBub2RlSXRlcmF0b3IodGhpcyxcImV4cGFuZFwiKSx0aGlzfSx0LnByb3RvdHlwZS5jb2xsYXBzZT1mdW5jdGlvbigpe3JldHVybiBub2RlSXRlcmF0b3IodGhpcyxcImNvbGxhcHNlXCIpLHRoaXN9LHQucHJvdG90eXBlLnNlbGVjdD1mdW5jdGlvbihlKXtyZXR1cm4gbm9kZUl0ZXJhdG9yKHRoaXMsXCJzZWxlY3RcIixlKSx0aGlzfSx0LnByb3RvdHlwZS51bnNlbGVjdD1mdW5jdGlvbigpe3JldHVybiBub2RlSXRlcmF0b3IodGhpcyxcInVuc2VsZWN0XCIpLHRoaXN9LHQucHJvdG90eXBlLmNoZWNrPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJlZS5vcHRpb25zLmNoZWNrYm94JiZub2RlSXRlcmF0b3IodGhpcyxcImNoZWNrXCIpLHRoaXN9LHQucHJvdG90eXBlLnVuY2hlY2s9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmVlLm9wdGlvbnMuY2hlY2tib3gmJm5vZGVJdGVyYXRvcih0aGlzLFwidW5jaGVja1wiKSx0aGlzfSx0fShBcnJheSksTm9kZT1mdW5jdGlvbihlLHQpe2lmKCF0KXRocm93IG5ldyBFcnJvcihcIk5vZGUgY2FuIG5vdCBiZSBlbXB0eVwiKTtpZih0aGlzLmlkPXQuaWR8fHV1aWRWNCgpLHRoaXMuc3RhdGVzPXQuc3RhdGV8fHt9LHRoaXMuc2hvd0NoaWxkcmVuPSEwLHRoaXMuY2hpbGRyZW49dC5jaGlsZHJlbnx8W10sdGhpcy5wYXJlbnQ9dC5wYXJlbnR8fG51bGwsdGhpcy5pc0JhdGNoPXQuaXNCYXRjaHx8ITEsdGhpcy5pc0VkaXRpbmc9ITEsdGhpcy5kYXRhPU9iamVjdC5hc3NpZ24oe30sdC5kYXRhfHx7fSx7dGV4dDp0LnRleHR9KSwhZSl0aHJvdyBuZXcgRXJyb3IoXCJOb2RlIG11c3QgaGFzIGEgVHJlZSBjb250ZXh0IVwiKTt0aGlzLnRyZWU9ZX0scHJvdG90eXBlQWNjZXNzb3JzPXtrZXk6e2NvbmZpZ3VyYWJsZTohMH0sZGVwdGg6e2NvbmZpZ3VyYWJsZTohMH0sdGV4dDp7Y29uZmlndXJhYmxlOiEwfX07Tm9kZS5wcm90b3R5cGUuJGVtaXQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG49W10scj1hcmd1bWVudHMubGVuZ3RoLTE7ci0tID4wOyluW3JdPWFyZ3VtZW50c1tyKzFdOyh0PXRoaXMudHJlZSkuJGVtaXQuYXBwbHkodCxbXCJub2RlOlwiK2UsdGhpc10uY29uY2F0KG4pKX0sTm9kZS5wcm90b3R5cGUuZ2V0UGF0aD1mdW5jdGlvbigpe2lmKCF0aGlzLnBhcmVudClyZXR1cm5bdGhpc107Zm9yKHZhciBlPVt0aGlzXSx0PXRoaXM7bnVsbCE9PSh0PXQucGFyZW50KTspZS5wdXNoKHQpO3JldHVybiBlfSxwcm90b3R5cGVBY2Nlc3NvcnMua2V5LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlkK3RoaXMudGV4dH0scHJvdG90eXBlQWNjZXNzb3JzLmRlcHRoLmdldD1mdW5jdGlvbigpe3ZhciBlPTAsdD10aGlzLnBhcmVudDtpZighdHx8ITE9PT10aGlzLnNob3dDaGlsZHJlbilyZXR1cm4gZTtkb3tlKyt9d2hpbGUodD10LnBhcmVudCk7cmV0dXJuIGV9LHByb3RvdHlwZUFjY2Vzc29ycy50ZXh0LmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGEudGV4dH0scHJvdG90eXBlQWNjZXNzb3JzLnRleHQuc2V0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMudGV4dDt0IT09ZSYmKHRoaXMuZGF0YS50ZXh0PWUsdGhpcy4kZW1pdChcInRleHQ6Y2hhbmdlZFwiLGUsdCkpfSxOb2RlLnByb3RvdHlwZS5zdGF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P3RoaXMuc3RhdGVzW2VdOih0aGlzLnN0YXRlc1tlXT10LHRoaXMpfSxOb2RlLnByb3RvdHlwZS5yZWN1cnNlVXA9ZnVuY3Rpb24oZSx0KXtpZih2b2lkIDA9PT10JiYodD10aGlzKSx0LnBhcmVudClyZXR1cm4hMSE9PWUodC5wYXJlbnQpP3RoaXMucmVjdXJzZVVwKGUsdC5wYXJlbnQpOnZvaWQgMH0sTm9kZS5wcm90b3R5cGUucmVjdXJzZURvd249ZnVuY3Rpb24oZSx0KXshMCE9PXQmJmUodGhpcyksdGhpcy5oYXNDaGlsZHJlbigpJiZyZWN1cnNlRG93bih0aGlzLmNoaWxkcmVuLGUpfSxOb2RlLnByb3RvdHlwZS5yZWZyZXNoSW5kZXRlcm1pbmF0ZVN0YXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMudHJlZS5vcHRpb25zLmF1dG9DaGVja0NoaWxkcmVuKXJldHVybiB0aGlzO2lmKHRoaXMuc3RhdGUoXCJpbmRldGVybWluYXRlXCIsITEpLHRoaXMuaGFzQ2hpbGRyZW4oKSl7dmFyIGU9dGhpcy5jaGlsZHJlbi5sZW5ndGgsdD0wLG49MCxyPTA7dGhpcy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UuY2hlY2tlZCgpJiZ0KyssZS5kaXNhYmxlZCgpJiZyKyssZS5pbmRldGVybWluYXRlKCkmJm4rK30pLHQ+MCYmdD09PWUtcj90aGlzLmNoZWNrZWQoKXx8KHRoaXMuc3RhdGUoXCJjaGVja2VkXCIsITApLHRoaXMudHJlZS5jaGVjayh0aGlzKSx0aGlzLiRlbWl0KFwiY2hlY2tlZFwiKSk6KHRoaXMuY2hlY2tlZCgpJiYodGhpcy5zdGF0ZShcImNoZWNrZWRcIiwhMSksdGhpcy50cmVlLnVuY2hlY2sodGhpcyksdGhpcy4kZW1pdChcInVuY2hlY2tlZFwiKSksdGhpcy5zdGF0ZShcImluZGV0ZXJtaW5hdGVcIixuPjB8fHQ+MCYmdDxlKSl9dGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LnJlZnJlc2hJbmRldGVybWluYXRlU3RhdGUoKX0sTm9kZS5wcm90b3R5cGUuaW5kZXRlcm1pbmF0ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXRlKFwiaW5kZXRlcm1pbmF0ZVwiKX0sTm9kZS5wcm90b3R5cGUuZWRpdGFibGU9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zdGF0ZShcImRpc2FibGVkXCIpJiZ0aGlzLnN0YXRlKFwiZWRpdGFibGVcIil9LE5vZGUucHJvdG90eXBlLnNlbGVjdGFibGU9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zdGF0ZShcImRpc2FibGVkXCIpJiZ0aGlzLnN0YXRlKFwic2VsZWN0YWJsZVwiKX0sTm9kZS5wcm90b3R5cGUuc2VsZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0ZShcInNlbGVjdGVkXCIpfSxOb2RlLnByb3RvdHlwZS5zZWxlY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIXRoaXMuc2VsZWN0YWJsZSgpfHx0aGlzLnNlbGVjdGVkKCk/dGhpczoodGhpcy50cmVlLnNlbGVjdCh0aGlzLGUpLHRoaXMuc3RhdGUoXCJzZWxlY3RlZFwiLCEwKSx0aGlzLiRlbWl0KFwic2VsZWN0ZWRcIiksdGhpcyl9LE5vZGUucHJvdG90eXBlLnVuc2VsZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2VsZWN0YWJsZSgpJiZ0aGlzLnNlbGVjdGVkKCk/KHRoaXMudHJlZS51bnNlbGVjdCh0aGlzKSx0aGlzLnN0YXRlKFwic2VsZWN0ZWRcIiwhMSksdGhpcy4kZW1pdChcInVuc2VsZWN0ZWRcIiksdGhpcyk6dGhpc30sTm9kZS5wcm90b3R5cGUuY2hlY2tlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXRlKFwiY2hlY2tlZFwiKX0sTm9kZS5wcm90b3R5cGUuY2hlY2s9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKHRoaXMuY2hlY2tlZCgpfHx0aGlzLmRpc2FibGVkKCkpcmV0dXJuIHRoaXM7aWYodGhpcy5pbmRldGVybWluYXRlKCkpcmV0dXJuIHRoaXMudW5jaGVjaygpO3ZhciB0PXRoaXMudHJlZS5vcHRpb25zLmNoZWNrRGlzYWJsZWRDaGlsZHJlbjtyZXR1cm4gdGhpcy50cmVlLm9wdGlvbnMuYXV0b0NoZWNrQ2hpbGRyZW4/KHRoaXMucmVjdXJzZURvd24oZnVuY3Rpb24obil7bi5zdGF0ZShcImluZGV0ZXJtaW5hdGVcIiwhMSksbi5kaXNhYmxlZCgpJiYhdHx8bi5jaGVja2VkKCl8fChlLnRyZWUuY2hlY2sobiksbi5zdGF0ZShcImNoZWNrZWRcIiwhMCksbi4kZW1pdChcImNoZWNrZWRcIikpfSksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LnJlZnJlc2hJbmRldGVybWluYXRlU3RhdGUoKSk6KHRoaXMudHJlZS5jaGVjayh0aGlzKSx0aGlzLnN0YXRlKFwiY2hlY2tlZFwiLCEwKSx0aGlzLiRlbWl0KFwiY2hlY2tlZFwiKSksdGhpc30sTm9kZS5wcm90b3R5cGUudW5jaGVjaz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIXRoaXMuaW5kZXRlcm1pbmF0ZSgpJiYhdGhpcy5jaGVja2VkKCl8fHRoaXMuZGlzYWJsZWQoKT90aGlzOih0aGlzLnRyZWUub3B0aW9ucy5hdXRvQ2hlY2tDaGlsZHJlbj8odGhpcy5yZWN1cnNlRG93bihmdW5jdGlvbih0KXt0LnN0YXRlKFwiaW5kZXRlcm1pbmF0ZVwiLCExKSx0LmNoZWNrZWQoKSYmKGUudHJlZS51bmNoZWNrKHQpLHQuc3RhdGUoXCJjaGVja2VkXCIsITEpLHQuJGVtaXQoXCJ1bmNoZWNrZWRcIikpfSksdGhpcy5wYXJlbnQmJnRoaXMucGFyZW50LnJlZnJlc2hJbmRldGVybWluYXRlU3RhdGUoKSk6KHRoaXMudHJlZS51bmNoZWNrKHRoaXMpLHRoaXMuc3RhdGUoXCJjaGVja2VkXCIsITEpLHRoaXMuJGVtaXQoXCJ1bmNoZWNrZWRcIikpLHRoaXMpfSxOb2RlLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmlzaWJsZSgpP3RoaXM6KHRoaXMuc3RhdGUoXCJ2aXNpYmxlXCIsITApLHRoaXMuJGVtaXQoXCJzaG93blwiKSx0aGlzKX0sTm9kZS5wcm90b3R5cGUuaGlkZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmhpZGRlbigpP3RoaXM6KHRoaXMuc3RhdGUoXCJ2aXNpYmxlXCIsITEpLHRoaXMuJGVtaXQoXCJoaWRkZW5cIiksdGhpcyl9LE5vZGUucHJvdG90eXBlLnZpc2libGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0ZShcInZpc2libGVcIil9LE5vZGUucHJvdG90eXBlLmhpZGRlbj1mdW5jdGlvbigpe3JldHVybiF0aGlzLnN0YXRlKFwidmlzaWJsZVwiKX0sTm9kZS5wcm90b3R5cGUuZW5hYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZW5hYmxlZCgpP3RoaXM6KHRoaXMudHJlZS5vcHRpb25zLmF1dG9EaXNhYmxlQ2hpbGRyZW4/KHRoaXMuc3RhdGUoXCJkaXNhYmxlZFwiLCExKSx0aGlzLiRlbWl0KFwiZW5hYmxlZFwiKSk6dGhpcy5yZWN1cnNlRG93bihmdW5jdGlvbihlKXtlLmRpc2FibGVkKCkmJihlLnN0YXRlKFwiZGlzYWJsZWRcIiwhMSksZS4kZW1pdChcImVuYWJsZWRcIikpfSksdGhpcyl9LE5vZGUucHJvdG90eXBlLmVuYWJsZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zdGF0ZShcImRpc2FibGVkXCIpfSxOb2RlLnByb3RvdHlwZS5kaXNhYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGlzYWJsZWQoKT90aGlzOih0aGlzLnRyZWUub3B0aW9ucy5hdXRvRGlzYWJsZUNoaWxkcmVuP3RoaXMucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7ZS5lbmFibGVkKCkmJihlLnN0YXRlKFwiZGlzYWJsZWRcIiwhMCksZS4kZW1pdChcImRpc2FibGVkXCIpKX0pOih0aGlzLnN0YXRlKFwiZGlzYWJsZWRcIiwhMCksdGhpcy4kZW1pdChcImRpc2FibGVkXCIpKSx0aGlzKX0sTm9kZS5wcm90b3R5cGUuZGlzYWJsZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGF0ZShcImRpc2FibGVkXCIpfSxOb2RlLnByb3RvdHlwZS5leHBhbmRUb3A9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLnJlY3Vyc2VVcChmdW5jdGlvbihuKXtuLnN0YXRlKFwiZXhwYW5kZWRcIiwhMCksITAhPT1lJiZ0LiRlbWl0KFwiZXhwYW5kZWRcIixuKX0pfSxOb2RlLnByb3RvdHlwZS5leHBhbmQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiB0aGlzLmNhbkV4cGFuZCgpPyh0aGlzLmlzQmF0Y2g/dGhpcy50cmVlLmxvYWRDaGlsZHJlbih0aGlzKS50aGVuKGZ1bmN0aW9uKHQpe2Uuc3RhdGUoXCJleHBhbmRlZFwiLCEwKSxlLiRlbWl0KFwiZXhwYW5kZWRcIil9KToodGhpcy5zdGF0ZShcImV4cGFuZGVkXCIsITApLHRoaXMuJGVtaXQoXCJleHBhbmRlZFwiKSksdGhpcyk6dGhpc30sTm9kZS5wcm90b3R5cGUuY2FuRXhwYW5kPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29sbGFwc2VkKCkmJnRoaXMuaGFzQ2hpbGRyZW4oKSYmKCF0aGlzLnRyZWUuYXV0b0Rpc2FibGVDaGlsZHJlbnx8dGhpcy5kaXNhYmxlZCgpKX0sTm9kZS5wcm90b3R5cGUuY2FuQ29sbGFwc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5leHBhbmRlZCgpJiZ0aGlzLmhhc0NoaWxkcmVuKCkmJighdGhpcy50cmVlLmF1dG9EaXNhYmxlQ2hpbGRyZW58fHRoaXMuZGlzYWJsZWQoKSl9LE5vZGUucHJvdG90eXBlLmV4cGFuZGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhdGUoXCJleHBhbmRlZFwiKX0sTm9kZS5wcm90b3R5cGUuY29sbGFwc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jYW5Db2xsYXBzZSgpPyh0aGlzLnN0YXRlKFwiZXhwYW5kZWRcIiwhMSksdGhpcy4kZW1pdChcImNvbGxhcHNlZFwiKSx0aGlzKTp0aGlzfSxOb2RlLnByb3RvdHlwZS5jb2xsYXBzZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zdGF0ZShcImV4cGFuZGVkXCIpfSxOb2RlLnByb3RvdHlwZS50b2dnbGVFeHBhbmQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdG9nZ2xlT3BlbmVkU3RhdGUoKX0sTm9kZS5wcm90b3R5cGUudG9nZ2xlQ29sbGFwc2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdG9nZ2xlT3BlbmVkU3RhdGUoKX0sTm9kZS5wcm90b3R5cGUuX3RvZ2dsZU9wZW5lZFN0YXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY2FuQ29sbGFwc2UoKT90aGlzLmNvbGxhcHNlKCk6dGhpcy5jYW5FeHBhbmQoKT90aGlzLmV4cGFuZCgpOnZvaWQgMH0sTm9kZS5wcm90b3R5cGUuaXNEcm9wYWJsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVuYWJsZWQoKSYmdGhpcy5zdGF0ZShcImRyb3BhYmxlXCIpfSxOb2RlLnByb3RvdHlwZS5pc0RyYWdnYWJsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVuYWJsZWQoKSYmdGhpcy5zdGF0ZShcImRyYWdnYWJsZVwiKSYmIXRoaXMuaXNFZGl0aW5nfSxOb2RlLnByb3RvdHlwZS5zdGFydERyYWdnaW5nPWZ1bmN0aW9uKCl7cmV0dXJuISghdGhpcy5pc0RyYWdnYWJsZSgpfHx0aGlzLnN0YXRlKFwiZHJhZ2dpbmdcIikpJiYoKCF0aGlzLmlzUm9vdCgpfHwxIT09dGhpcy50cmVlLm1vZGVsLmxlbmd0aCkmJih0aGlzLnRyZWUub3B0aW9ucy5zdG9yZSYmKHRoaXMudHJlZS5fX3NpbGVuY2U9ITApLHRoaXMuc2VsZWN0KCksdGhpcy5zdGF0ZShcImRyYWdnaW5nXCIsITApLHRoaXMuJGVtaXQoXCJkcmFnZ2luZzpzdGFydFwiKSx0aGlzLnRyZWUuX19zaWxlbmNlPSExLCEwKSl9LE5vZGUucHJvdG90eXBlLmZpbmlzaERyYWdnaW5nPWZ1bmN0aW9uKGUsdCl7aWYoZS5pc0Ryb3BhYmxlKCl8fFwiZHJhZy1vblwiIT09dCl7dmFyIG49dGhpcy50cmVlLHI9dGhpcy5jbG9uZSgpLG89dGhpcy5wYXJlbnQ7ci5pZD10aGlzLmlkLG4uX19zaWxlbmNlPSEwLFwiZHJhZy1vblwiPT09dD9uLmFwcGVuZChlLHIpOlwiZHJhZy1iZWxvd1wiPT09dD9uLmFmdGVyKGUscik6XCJkcmFnLWFib3ZlXCI9PT10JiZuLmJlZm9yZShlLHIpLHRoaXMucmVtb3ZlKCksZS5yZWZyZXNoSW5kZXRlcm1pbmF0ZVN0YXRlKCksbyYmby5yZWZyZXNoSW5kZXRlcm1pbmF0ZVN0YXRlKCksbi5fX3NpbGVuY2U9ITEsci5zdGF0ZShcImRyYWdnaW5nXCIsITEpLHRoaXMuc3RhdGUoXCJkcmFnZ2luZ1wiLCExKSx0aGlzLiRlbWl0KFwiZHJhZ2dpbmc6ZmluaXNoXCIpLHIuc3RhdGUoXCJzZWxlY3RlZFwiKSYmKG4uc2VsZWN0ZWROb2Rlcy5yZW1vdmUodGhpcyksbi5zZWxlY3RlZE5vZGVzLmFkZChyKSxuLnZtLiRzZXQodGhpcy5zdGF0ZSxcInNlbGVjdGVkXCIsITEpLG4udm0uJHNldChyLnN0YXRlLFwic2VsZWN0ZWRcIiwhMCkpLHRoaXMudHJlZS5vcHRpb25zLnN0b3JlJiZ0aGlzLnRyZWUudm0uJGVtaXQoXCJMSVFVT1JfTk9JU0VcIil9fSxOb2RlLnByb3RvdHlwZS5zdGFydEVkaXRpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLmRpc2FibGVkKCkpcmV0dXJuITE7dGhpcy5pc0VkaXRpbmd8fCh0aGlzLnRyZWUuX2VkaXRpbmdOb2RlPXRoaXMsdGhpcy50cmVlLmFjdGl2ZUVsZW1lbnQ9dGhpcyx0aGlzLmlzRWRpdGluZz0hMCx0aGlzLiRlbWl0KFwiZWRpdGluZzpzdGFydFwiKSl9LE5vZGUucHJvdG90eXBlLnN0b3BFZGl0aW5nPWZ1bmN0aW9uKGUpe2lmKHRoaXMuaXNFZGl0aW5nKXt0aGlzLmlzRWRpdGluZz0hMSx0aGlzLnRyZWUuX2VkaXRpbmdOb2RlPW51bGwsdGhpcy50cmVlLmFjdGl2ZUVsZW1lbnQ9bnVsbDt2YXIgdD10aGlzLnRleHQ7ZSYmITEhPT1lJiZ0aGlzLnRleHQhPT1lJiYodGhpcy50ZXh0PWUpLHRoaXMuJGVtaXQoXCJlZGl0aW5nOnN0b3BcIix0KX19LE5vZGUucHJvdG90eXBlLmluZGV4PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRyZWUuaW5kZXgodGhpcyxlKX0sTm9kZS5wcm90b3R5cGUuZmlyc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oYXNDaGlsZHJlbigpP3RoaXMuY2hpbGRyZW5bMF06bnVsbH0sTm9kZS5wcm90b3R5cGUubGFzdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmhhc0NoaWxkcmVuKCk/dGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aC0xXTpudWxsfSxOb2RlLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJlZS5uZXh0Tm9kZSh0aGlzKX0sTm9kZS5wcm90b3R5cGUucHJldj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRyZWUucHJldk5vZGUodGhpcyl9LE5vZGUucHJvdG90eXBlLmluc2VydEF0PWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztpZih2b2lkIDA9PT10JiYodD10aGlzLmNoaWxkcmVuLmxlbmd0aCksZSlyZXR1cm4gZT10aGlzLnRyZWUub2JqZWN0VG9Ob2RlKGUpLEFycmF5LmlzQXJyYXkoZSk/KGUucmV2ZXJzZSgpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbi5pbnNlcnRBdChlLHQpfSksbmV3IFNlbGVjdGlvbih0aGlzLnRyZWUsW10uY29uY2F0KGUpKSk6KGUucGFyZW50PXRoaXMsdGhpcy5jaGlsZHJlbi5zcGxpY2UodCwwLGUpLGUuZGlzYWJsZWQoKSYmZS5oYXNDaGlsZHJlbigpJiZlLnJlY3Vyc2VEb3duKGZ1bmN0aW9uKGUpe2Uuc3RhdGUoXCJkaXNhYmxlZFwiLCEwKX0pLHRoaXMuaXNCYXRjaHx8dGhpcy4kZW1pdChcImFkZGVkXCIsZSksZSl9LE5vZGUucHJvdG90eXBlLmFkZENoaWxkPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmluc2VydEF0KGUpfSxOb2RlLnByb3RvdHlwZS5hcHBlbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYWRkQ2hpbGQoZSl9LE5vZGUucHJvdG90eXBlLnByZXBlbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuaW5zZXJ0QXQoZSwwKX0sTm9kZS5wcm90b3R5cGUuYmVmb3JlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRyZWUuYmVmb3JlKHRoaXMsZSl9LE5vZGUucHJvdG90eXBlLmFmdGVyPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRyZWUuYWZ0ZXIodGhpcyxlKX0sTm9kZS5wcm90b3R5cGUuZW1wdHk9ZnVuY3Rpb24oKXtmb3IodmFyIGU7ZT10aGlzLmNoaWxkcmVuLnBvcCgpOyllLnJlbW92ZSgpO3JldHVybiB0aGlzfSxOb2RlLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmVlLnJlbW92ZU5vZGUodGhpcyl9LE5vZGUucHJvdG90eXBlLnJlbW92ZUNoaWxkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuZmluZChlKTtyZXR1cm4gdD90aGlzLnRyZWUucmVtb3ZlTm9kZSh0KTpudWxsfSxOb2RlLnByb3RvdHlwZS5maW5kPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMudHJlZS5pc05vZGUoZSk/ZTpmaW5kKHRoaXMuY2hpbGRyZW4sZSx0KX0sTm9kZS5wcm90b3R5cGUuZm9jdXM9ZnVuY3Rpb24oKXt0aGlzLnZtJiZ0aGlzLnZtLmZvY3VzKCl9LE5vZGUucHJvdG90eXBlLmhhc0NoaWxkcmVuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hvd0NoaWxkcmVuJiZ0aGlzLmlzQmF0Y2h8fHRoaXMuY2hpbGRyZW4ubGVuZ3RoPjB9LE5vZGUucHJvdG90eXBlLmlzUm9vdD1mdW5jdGlvbigpe3JldHVybiBudWxsPT09dGhpcy5wYXJlbnR9LE5vZGUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJlZS5vYmplY3RUb05vZGUodGhpcy50b0pTT04oKSl9LE5vZGUucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJue3RleHQ6dGhpcy50ZXh0LGRhdGE6dGhpcy5kYXRhLHN0YXRlOnRoaXMuc3RhdGVzLGNoaWxkcmVuOnRoaXMuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBlLnRyZWUub2JqZWN0VG9Ob2RlKHQpLnRvSlNPTigpfSl9fSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhOb2RlLnByb3RvdHlwZSxwcm90b3R5cGVBY2Nlc3NvcnMpO3ZhciBub2RlU3RhdGVzPXtzZWxlY3RlZDohMSxzZWxlY3RhYmxlOiEwLGNoZWNrZWQ6ITEsZXhwYW5kZWQ6ITEsZGlzYWJsZWQ6ITEsdmlzaWJsZTohMCxpbmRldGVybWluYXRlOiExLG1hdGNoZWQ6ITEsZWRpdGFibGU6ITAsZHJhZ2dpbmc6ITEsZHJhZ2dhYmxlOiEwLGRyb3BhYmxlOiEwfTtmdW5jdGlvbiBtZXJnZShlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9e30pLE9iamVjdC5hc3NpZ24oe30sbm9kZVN0YXRlcyxlKX1mdW5jdGlvbiBvYmplY3RUb05vZGUoZSx0KXt2YXIgbj1udWxsO2lmKHQgaW5zdGFuY2VvZiBOb2RlKXJldHVybiB0O2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KW49bmV3IE5vZGUoZSx7dGV4dDp0LHN0YXRlOm1lcmdlKCksaWQ6dXVpZFY0KCl9KTtlbHNle2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBvYmplY3RUb05vZGUoZSx0KX0pOyhuPW5ldyBOb2RlKGUsdCkpLnN0YXRlcz1tZXJnZShuLnN0YXRlcyksbi5pZHx8KG4uaWQ9dXVpZFY0KCkpLG4uY2hpbGRyZW4ubGVuZ3RoJiYobi5jaGlsZHJlbj1uLmNoaWxkcmVuLm1hcChmdW5jdGlvbih0KXtyZXR1cm4odD1vYmplY3RUb05vZGUoZSx0KSkucGFyZW50PW4sdH0pKX1yZXR1cm4gbn12YXIgTGlzdD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIGUmJih0Ll9fcHJvdG9fXz1lKSx0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUmJmUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LHQucHJvdG90eXBlLmVtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BsaWNlKDAsdGhpcy5sZW5ndGgpLHRoaXN9LHQucHJvdG90eXBlLmhhcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pbmNsdWRlcyhlKX0sdC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9W10sbj1hcmd1bWVudHMubGVuZ3RoO24tLTspdFtuXT1hcmd1bWVudHNbbl07cmV0dXJuKGU9dGhpcykucHVzaC5hcHBseShlLHQpLHRoaXN9LHQucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmluZGV4T2YoZSk7cmV0dXJuLTE9PT10P3RoaXM6KHRoaXMuc3BsaWNlKHQsMSksdGhpcyl9LHQucHJvdG90eXBlLnJlbW92ZUFsbD1mdW5jdGlvbihlKXtmb3IoO3RoaXMuaW5jbHVkZXMoZSk7KXRoaXMucmVtb3ZlKGUpO3JldHVybiB0aGlzfSx0LnByb3RvdHlwZS50b3A9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1t0aGlzLmxlbmd0aC0xXX0sdH0oQXJyYXkpLGRlZmF1bHRQcm9wZXJ0eU5hbWVzPXtpZDpcImlkXCIsdGV4dDpcInRleHRcIixjaGlsZHJlbjpcImNoaWxkcmVuXCIsc3RhdGU6XCJzdGF0ZVwiLGRhdGE6XCJkYXRhXCIsaXNCYXRjaDpcImlzQmF0Y2hcIn07ZnVuY3Rpb24gY29udmVydE5hbWVzKGUsdCl7cmV0dXJue2lkOmVbdC5pZF0sdGV4dDplW3QudGV4dF0sY2hpbGRyZW46ZVt0LmNoaWxkcmVuXSxzdGF0ZTplW3Quc3RhdGVdLGRhdGE6ZVt0LmRhdGFdLGlzQmF0Y2g6ZVt0LmlzQmF0Y2hdfX12YXIgVHJlZVBhcnNlcj17cGFyc2U6ZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PW4mJihuPXt9KSxcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9SlNPTi5wYXJzZShlKSksQXJyYXkuaXNBcnJheShlKXx8KGU9W2VdKTt2YXIgcj1PYmplY3QuYXNzaWduKHt9LGRlZmF1bHRQcm9wZXJ0eU5hbWVzLG4pO3JldHVybiBlLm1hcChmdW5jdGlvbiBlKHQpe3ZhciBuPWNvbnZlcnROYW1lcyh0LHIpO3JldHVybiBuLmNoaWxkcmVuJiYhQXJyYXkuaXNBcnJheShuLmNoaWxkcmVuKSYmKG4uY2hpbGRyZW49W24uY2hpbGRyZW5dKSxuLmNoaWxkcmVuJiYobi5jaGlsZHJlbj1uLmNoaWxkcmVuLm1hcChlKSksbn0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gb2JqZWN0VG9Ob2RlKHQsZSl9KX19O2Z1bmN0aW9uIHJlcXVlc3QoZSl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsbil7dmFyIHI9bmV3IFhNTEh0dHBSZXF1ZXN0O3Iub3BlbihcIkdFVFwiLGUpLHIuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLFwiYXBwbGljYXRpb24vanNvblwiKSxyLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsZnVuY3Rpb24oZSl7dHJ5e3ZhciBvPUpTT04ucGFyc2Uoci5yZXNwb25zZSk7dChvKX1jYXRjaChlKXtuKGUpfX0pLHIuc2VuZChudWxsKX0pfWZ1bmN0aW9uIGdldChlKXtyZXR1cm4gcmVxdWVzdChlKX1mdW5jdGlvbiBjcmVhdGVUZW1wbGF0ZShlKXtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKHZhciBuLHI9L3soW159XSspfS8sbz1lO249ci5leGVjKG8pOylvPW8ucmVwbGFjZShuWzBdLHRbblsxXV0pO3JldHVybiBvfX1mdW5jdGlvbiBvcmRlckFzYyhlLHQpe3JldHVybiBlLnRleHQ8dC50ZXh0Py0xOmUudGV4dD50LnRleHQ/MTowfWZ1bmN0aW9uIG9yZGVyRGVzYyhlLHQpe3JldHVybiBlLnRleHQ8dC50ZXh0PzE6ZS50ZXh0PnQudGV4dD8tMTowfWZ1bmN0aW9uIGdldENvbXBhcmVGdW5jdGlvbihlKXtzd2l0Y2goZS50b0xvd2VyQ2FzZSgpKXtjYXNlXCJhc2NcIjpyZXR1cm4gb3JkZXJBc2M7Y2FzZVwiZGVzY1wiOnJldHVybiBvcmRlckRlc2N9fWZ1bmN0aW9uIHNvcnQoZSx0KXtcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9Z2V0Q29tcGFyZUZ1bmN0aW9uKHQpKSxBcnJheS5pc0FycmF5KGUpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZlLnNvcnQodCl9ZnVuY3Rpb24gZmV0Y2hEZWxheShlKXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCl7c2V0VGltZW91dCh0LGUpfSl9dmFyIFRyZWU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLnZtPWUsdGhpcy5vcHRpb25zPWUub3B0cyx0aGlzLmFjdGl2ZUVsZW1lbnQ9bnVsbDt2YXIgbixyPXRoaXMub3B0aW9ucy5mZXRjaERhdGE7XCJzdHJpbmdcIj09dHlwZW9mIHImJih0aGlzLm9wdGlvbnMuZmV0Y2hEYXRhPShuPWNyZWF0ZVRlbXBsYXRlKHIpLGZ1bmN0aW9uKGUpe3JldHVybiBnZXQobihlKSkuY2F0Y2godC5vcHRpb25zLm9uRmV0Y2hFcnJvcil9KSl9O1RyZWUucHJvdG90eXBlLiRvbj1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj1bXSxyPWFyZ3VtZW50cy5sZW5ndGgtMTtyLS0gPjA7KW5bcl09YXJndW1lbnRzW3IrMV07KHQ9dGhpcy52bSkuJG9uLmFwcGx5KHQsW2VdLmNvbmNhdChuKSl9LFRyZWUucHJvdG90eXBlLiRvbmNlPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPVtdLHI9YXJndW1lbnRzLmxlbmd0aC0xO3ItLSA+MDspbltyXT1hcmd1bWVudHNbcisxXTsodD10aGlzLnZtKS4kb25jZS5hcHBseSh0LFtlXS5jb25jYXQobikpfSxUcmVlLnByb3RvdHlwZS4kb2ZmPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPVtdLHI9YXJndW1lbnRzLmxlbmd0aC0xO3ItLSA+MDspbltyXT1hcmd1bWVudHNbcisxXTsodD10aGlzLnZtKS4kb2ZmLmFwcGx5KHQsW2VdLmNvbmNhdChuKSl9LFRyZWUucHJvdG90eXBlLiRlbWl0PWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPVtdLHI9YXJndW1lbnRzLmxlbmd0aC0xO3ItLSA+MDspbltyXT1hcmd1bWVudHNbcisxXTt0aGlzLl9fc2lsZW5jZXx8KCh0PXRoaXMudm0pLiRlbWl0LmFwcGx5KHQsW2VdLmNvbmNhdChuKSksdGhpcy5vcHRpb25zLnN0b3JlJiZ0aGlzLnZtLiRlbWl0KFwiTElRVU9SX05PSVNFXCIpKX0sVHJlZS5wcm90b3R5cGUuX3NvcnQ9ZnVuY3Rpb24oZSx0LG4peyExIT09biYmdGhpcy5yZWN1cnNlRG93bihlLGZ1bmN0aW9uKGUpe2UuaGFzQ2hpbGRyZW4oKSYmc29ydChlLmNoaWxkcmVuLHQpfSksc29ydChlLHQpfSxUcmVlLnByb3RvdHlwZS5zb3J0VHJlZT1mdW5jdGlvbihlLHQpe3RoaXMuX3NvcnQodGhpcy5tb2RlbCxlLHQpfSxUcmVlLnByb3RvdHlwZS5zb3J0PWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLG89dGhpcy5maW5kKGUsITApO28mJnQmJm8uZm9yRWFjaChmdW5jdGlvbihlKXtyLl9zb3J0KGUuY2hpbGRyZW4sdCxuKX0pfSxUcmVlLnByb3RvdHlwZS5jbGVhckZpbHRlcj1mdW5jdGlvbigpe3RoaXMucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7ZS5zdGF0ZShcIm1hdGNoZWRcIiwhMSksZS5zdGF0ZShcInZpc2libGVcIiwhMCksZS5zdGF0ZShcImV4cGFuZGVkXCIsZS5fX2V4cGFuZGVkKSxlLl9fZXhwYW5kZWQ9dm9pZCAwLGUuc2hvd0NoaWxkcmVuPSEwfSksdGhpcy52bS5tYXRjaGVzLmxlbmd0aD0wLHRoaXMudm0uJGVtaXQoXCJ0cmVlOmZpbHRlcmVkXCIsW10sXCJcIil9LFRyZWUucHJvdG90eXBlLmZpbHRlcj1mdW5jdGlvbihlKXtpZighZSlyZXR1cm4gdGhpcy5jbGVhckZpbHRlcigpO3ZhciB0PVtdLG49dGhpcy5vcHRpb25zLmZpbHRlci5tYXRjaGVyLHI9dGhpcy5vcHRpb25zLmZpbHRlcixvPXIuc2hvd0NoaWxkcmVuLGk9ci5wbGFpbkxpc3Q7cmV0dXJuIHRoaXMucmVjdXJzZURvd24oZnVuY3Rpb24ocil7bihlLHIpJiZ0LnB1c2gociksci5zaG93Q2hpbGRyZW49ITAsdm9pZCAwPT09ci5fX2V4cGFuZGVkJiYoci5fX2V4cGFuZGVkPXIuc3RhdGUoXCJleHBhbmRlZFwiKSksci5zdGF0ZShcInZpc2libGVcIiwhMSksci5zdGF0ZShcIm1hdGNoZWRcIiwhMSksci5zdGF0ZShcImV4cGFuZGVkXCIsITApfSksdC5yZXZlcnNlKCkuZm9yRWFjaChmdW5jdGlvbihlKXtlLnN0YXRlKFwibWF0Y2hlZFwiLCEwKSxlLnN0YXRlKFwidmlzaWJsZVwiLCEwKSxlLnNob3dDaGlsZHJlbj0haSxlLmhhc0NoaWxkcmVuKCkmJmUucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7ZS5zdGF0ZShcInZpc2libGVcIiwhIW8pfSwhMCksZS5yZWN1cnNlVXAoZnVuY3Rpb24oZSl7ZS5zdGF0ZShcInZpc2libGVcIiwhMCksZS5zdGF0ZShcImV4cGFuZGVkXCIsITApfSksZS5oYXNDaGlsZHJlbigpJiZlLnN0YXRlKFwiZXhwYW5kZWRcIiwhMSl9KSx0aGlzLnZtLm1hdGNoZXM9dCx0aGlzLnZtLiRlbWl0KFwidHJlZTpmaWx0ZXJlZFwiLHQsZSksdH0sVHJlZS5wcm90b3R5cGUuc2VsZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmFwcGx5KFNlbGVjdGlvbixbbnVsbF0uY29uY2F0KFt0aGlzXSx0aGlzLnNlbGVjdGVkTm9kZXMpKSl9LFRyZWUucHJvdG90eXBlLmNoZWNrZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vcHRpb25zLmNoZWNrYm94P25ldyhGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5hcHBseShTZWxlY3Rpb24sW251bGxdLmNvbmNhdChbdGhpc10sdGhpcy5jaGVja2VkTm9kZXMpKSk6bnVsbH0sVHJlZS5wcm90b3R5cGUubG9hZENoaWxkcmVuPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoZSl7dGhpcy4kZW1pdChcInRyZWU6ZGF0YTpmZXRjaFwiLGUpLHRoaXMub3B0aW9ucy5taW5GZXRjaERlbGF5PjAmJmUudm0mJihlLnZtLmxvYWRpbmc9ITApO3ZhciBuPXRoaXMuZmV0Y2goZSkudGhlbihmdW5jdGlvbihuKXtlLmFwcGVuZChuKSxlLmlzQmF0Y2g9ITEsdC5vcHRpb25zLmF1dG9DaGVja0NoaWxkcmVuJiYoZS5jaGVja2VkKCkmJmUucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7ZS5zdGF0ZShcImNoZWNrZWRcIiwhMCl9KSxlLnJlZnJlc2hJbmRldGVybWluYXRlU3RhdGUoKSksdC4kZW1pdChcInRyZWU6ZGF0YTpyZWNlaXZlZFwiLGUpfSk7cmV0dXJuIFByb21pc2UuYWxsKFtmZXRjaERlbGF5KHRoaXMub3B0aW9ucy5taW5GZXRjaERlbGF5KSxuXSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZS52bSYmKGUudm0ubG9hZGluZz0hMSksbn0pfX0sVHJlZS5wcm90b3R5cGUuZmV0Y2g9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLHI9dGhpcy5vcHRpb25zLmZldGNoRGF0YShlKTtyZXR1cm4gci50aGVufHwocj1nZXQocikuY2F0Y2godGhpcy5vcHRpb25zLm9uRmV0Y2hFcnJvcikpLCExPT09dD9yOnIudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gbi5wYXJzZShlLG4ub3B0aW9ucy5tb2RlbFBhcnNlKX0pLmNhdGNoKHRoaXMub3B0aW9ucy5vbkZldGNoRXJyb3IpfSxUcmVlLnByb3RvdHlwZS5mZXRjaEluaXREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmV0Y2goe2lkOlwicm9vdFwiLG5hbWU6XCJyb290XCJ9LCExKX0sVHJlZS5wcm90b3R5cGUuc2V0TW9kZWw9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZih0aGlzLm1vZGVsPXRoaXMucGFyc2UoZSx0aGlzLm9wdGlvbnMubW9kZWxQYXJzZSksdGhpcy52bS5tb2RlbD10aGlzLm1vZGVsLHRoaXMuc2VsZWN0ZWROb2Rlcz1uZXcgTGlzdCx0aGlzLmNoZWNrZWROb2Rlcz1uZXcgTGlzdCxyZWN1cnNlRG93bih0aGlzLm1vZGVsLGZ1bmN0aW9uKGUpe2UudHJlZT10LGUuc2VsZWN0ZWQoKSYmdC5zZWxlY3RlZE5vZGVzLmFkZChlKSxlLmNoZWNrZWQoKSYmKHQuY2hlY2tlZE5vZGVzLmFkZChlKSxlLnBhcmVudCYmZS5wYXJlbnQucmVmcmVzaEluZGV0ZXJtaW5hdGVTdGF0ZSgpKSx0Lm9wdGlvbnMuYXV0b0Rpc2FibGVDaGlsZHJlbiYmZS5kaXNhYmxlZCgpJiZlLnJlY3Vyc2VEb3duKGZ1bmN0aW9uKGUpe2Uuc3RhdGUoXCJkaXNhYmxlZFwiLCEwKX0pfSksIXRoaXMub3B0aW9ucy5tdWx0aXBsZSYmdGhpcy5zZWxlY3RlZE5vZGVzLmxlbmd0aCl7dmFyIG49dGhpcy5zZWxlY3RlZE5vZGVzLnRvcCgpO3RoaXMuc2VsZWN0ZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKGUpe24hPT1lJiZlLnN0YXRlKFwic2VsZWN0ZWRcIiwhMSl9KSx0aGlzLnNlbGVjdGVkTm9kZXMuZW1wdHkoKS5hZGQobil9dGhpcy5vcHRpb25zLmNoZWNrT25TZWxlY3QmJnRoaXMub3B0aW9ucy5jaGVja2JveCYmdGhpcy51bnNlbGVjdEFsbCgpfSxUcmVlLnByb3RvdHlwZS5yZWN1cnNlRG93bj1mdW5jdGlvbihlLHQpe3JldHVybiF0JiZlJiYodD1lLGU9dGhpcy5tb2RlbCkscmVjdXJzZURvd24oZSx0KX0sVHJlZS5wcm90b3R5cGUuc2VsZWN0PWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5nZXROb2RlKGUpO3JldHVybiEhbiYmKHRoaXMub3B0aW9ucy5tdWx0aXBsZSYmdD90aGlzLnNlbGVjdGVkTm9kZXMuYWRkKG4pOih0aGlzLnVuc2VsZWN0QWxsKCksdGhpcy5zZWxlY3RlZE5vZGVzLmVtcHR5KCkuYWRkKG4pKSwhMCl9LFRyZWUucHJvdG90eXBlLnNlbGVjdEFsbD1mdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuISF0aGlzLm9wdGlvbnMubXVsdGlwbGUmJih0aGlzLnNlbGVjdGVkTm9kZXMuZW1wdHkoKSx0aGlzLnJlY3Vyc2VEb3duKGZ1bmN0aW9uKHQpe2Uuc2VsZWN0ZWROb2Rlcy5hZGQodC5zZWxlY3QoITApKX0pLCEwKX0sVHJlZS5wcm90b3R5cGUudW5zZWxlY3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5nZXROb2RlKGUpO3JldHVybiEhdCYmKHRoaXMuc2VsZWN0ZWROb2Rlcy5yZW1vdmUodCksITApfSxUcmVlLnByb3RvdHlwZS51bnNlbGVjdEFsbD1mdW5jdGlvbigpe2Zvcih2YXIgZTtlPXRoaXMuc2VsZWN0ZWROb2Rlcy5wb3AoKTspZS51bnNlbGVjdCgpO3JldHVybiEwfSxUcmVlLnByb3RvdHlwZS5jaGVjaz1mdW5jdGlvbihlKXt0aGlzLmNoZWNrZWROb2Rlcy5hZGQoZSl9LFRyZWUucHJvdG90eXBlLnVuY2hlY2s9ZnVuY3Rpb24oZSl7dGhpcy5jaGVja2VkTm9kZXMucmVtb3ZlKGUpfSxUcmVlLnByb3RvdHlwZS5jaGVja0FsbD1mdW5jdGlvbigpe3RoaXMucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7MD09PWUuZGVwdGgmJihlLmluZGV0ZXJtaW5hdGUoKSYmZS5zdGF0ZShcImluZGV0ZXJtaW5hdGVcIiwhMSksZS5jaGVjaygpKX0pfSxUcmVlLnByb3RvdHlwZS51bmNoZWNrQWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBlO2U9dGhpcy5jaGVja2VkTm9kZXMucG9wKCk7KWUudW5jaGVjaygpO3JldHVybiEwfSxUcmVlLnByb3RvdHlwZS5leHBhbmQ9ZnVuY3Rpb24oZSl7cmV0dXJuIWUuZXhwYW5kZWQoKSYmKGUuZXhwYW5kKCksITApfSxUcmVlLnByb3RvdHlwZS5jb2xsYXBzZT1mdW5jdGlvbihlKXtyZXR1cm4hZS5jb2xsYXBzZWQoKSYmKGUuY29sbGFwc2UoKSwhMCl9LFRyZWUucHJvdG90eXBlLnRvZ2dsZUV4cGFuZD1mdW5jdGlvbihlKXtyZXR1cm4hIWUuaGFzQ2hpbGRyZW4oKSYmKGUudG9nZ2xlRXhwYW5kKCksITApfSxUcmVlLnByb3RvdHlwZS50b2dnbGVDb2xsYXBzZT1mdW5jdGlvbihlKXtyZXR1cm4hIWUuaGFzQ2hpbGRyZW4oKSYmKGUudG9nZ2xlQ29sbGFwc2UoKSwhMCl9LFRyZWUucHJvdG90eXBlLmV4cGFuZEFsbD1mdW5jdGlvbigpe3RoaXMucmVjdXJzZURvd24oZnVuY3Rpb24oZSl7ZS5oYXNDaGlsZHJlbigpJiZlLmNvbGxhcHNlZCgpJiZlLmV4cGFuZCgpfSl9LFRyZWUucHJvdG90eXBlLmNvbGxhcHNlQWxsPWZ1bmN0aW9uKCl7dGhpcy5yZWN1cnNlRG93bihmdW5jdGlvbihlKXtlLmhhc0NoaWxkcmVuKCkmJmUuZXhwYW5kZWQoKSYmZS5jb2xsYXBzZSgpfSl9LFRyZWUucHJvdG90eXBlLmluZGV4PWZ1bmN0aW9uKGUsdCl7dmFyIG49ZS5wYXJlbnQscj0obj1uP24uY2hpbGRyZW46dGhpcy5tb2RlbCkuaW5kZXhPZihlKTtyZXR1cm4gdD97aW5kZXg6cix0YXJnZXQ6bixub2RlOm5bcl19OnJ9LFRyZWUucHJvdG90eXBlLm5leHROb2RlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuaW5kZXgoZSwhMCk7cmV0dXJuIHQudGFyZ2V0W3QuaW5kZXgrMV18fG51bGx9LFRyZWUucHJvdG90eXBlLm5leHRWaXNpYmxlTm9kZT1mdW5jdGlvbihlKXtpZihlLmhhc0NoaWxkcmVuKCkmJmUuZXhwYW5kZWQoKSlyZXR1cm4gZS5maXJzdCgpO3ZhciB0PXRoaXMubmV4dE5vZGUoZSk7cmV0dXJuIXQmJmUucGFyZW50P2UucGFyZW50Lm5leHQoKTp0fSxUcmVlLnByb3RvdHlwZS5wcmV2Tm9kZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmluZGV4KGUsITApO3JldHVybiB0LnRhcmdldFt0LmluZGV4LTFdfHxudWxsfSxUcmVlLnByb3RvdHlwZS5wcmV2VmlzaWJsZU5vZGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5wcmV2Tm9kZShlKTtyZXR1cm4gdD90Lmhhc0NoaWxkcmVuKCkmJnQuZXhwYW5kZWQoKT90Lmxhc3QoKTp0OmUucGFyZW50fSxUcmVlLnByb3RvdHlwZS5hZGRUb01vZGVsPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gdm9pZCAwPT09dCYmKHQ9dGhpcy5tb2RlbC5sZW5ndGgpLGU9dGhpcy5vYmplY3RUb05vZGUoZSksdGhpcy5tb2RlbC5zcGxpY2UodCwwLGUpLHRoaXMucmVjdXJzZURvd24oZSxmdW5jdGlvbihlKXtlLnRyZWU9bn0pLHRoaXMuJGVtaXQoXCJub2RlOmFkZGVkXCIsZSksZX0sVHJlZS5wcm90b3R5cGUuYXBwZW5kPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcy5maW5kKGUpO3JldHVybiEhbiYmbi5hcHBlbmQodCl9LFRyZWUucHJvdG90eXBlLnByZXBlbmQ9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLmZpbmQoZSk7cmV0dXJuISFuJiZuLnByZXBlbmQodCl9LFRyZWUucHJvdG90eXBlLmJlZm9yZT1mdW5jdGlvbihlLHQpe2U9dGhpcy5maW5kKGUpO3ZhciBuPXRoaXMuaW5kZXgoZSwhMCkscj10aGlzLm9iamVjdFRvTm9kZSh0KTtyZXR1cm4hIX5uLmluZGV4JiYobi50YXJnZXQuc3BsaWNlKG4uaW5kZXgsMCxyKSxyLnBhcmVudD1lLnBhcmVudCx0aGlzLiRlbWl0KFwibm9kZTphZGRlZFwiLHIpLHIpfSxUcmVlLnByb3RvdHlwZS5hZnRlcj1mdW5jdGlvbihlLHQpe2U9dGhpcy5maW5kKGUpO3ZhciBuPXRoaXMuaW5kZXgoZSwhMCkscj10aGlzLm9iamVjdFRvTm9kZSh0KTtyZXR1cm4hIX5uLmluZGV4JiYobi50YXJnZXQuc3BsaWNlKG4uaW5kZXgrMSwwLHIpLHIucGFyZW50PWUucGFyZW50LHRoaXMuJGVtaXQoXCJub2RlOmFkZGVkXCIscikscil9LFRyZWUucHJvdG90eXBlLmFkZE5vZGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5tb2RlbC5sZW5ndGg7cmV0dXJuIGU9b2JqZWN0VG9Ob2RlKGUpLHRoaXMubW9kZWwuc3BsaWNlKHQsMCxlKSx0aGlzLiRlbWl0KFwibm9kZTphZGRlZFwiLGUpLGV9LFRyZWUucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLnJlbW92ZU5vZGUodGhpcy5maW5kKGUsdCkpfSxUcmVlLnByb3RvdHlwZS5yZW1vdmVOb2RlPWZ1bmN0aW9uKGUpe2lmKGUgaW5zdGFuY2VvZiBTZWxlY3Rpb24pcmV0dXJuIGUucmVtb3ZlKCk7aWYoIWUpcmV0dXJuITE7aWYoZS5wYXJlbnQpe3ZhciB0PWUucGFyZW50LmNoaWxkcmVuO350LmluZGV4T2YoZSkmJnQuc3BsaWNlKHQuaW5kZXhPZihlKSwxKX1lbHNlfnRoaXMubW9kZWwuaW5kZXhPZihlKSYmdGhpcy5tb2RlbC5zcGxpY2UodGhpcy5tb2RlbC5pbmRleE9mKGUpLDEpO2UucGFyZW50JiZlLnBhcmVudC5pbmRldGVybWluYXRlKCkmJiFlLnBhcmVudC5oYXNDaGlsZHJlbigpJiZlLnBhcmVudC5zdGF0ZShcImluZGV0ZXJtaW5hdGVcIiwhMSksbnVsbCE9PXRoaXMuYWN0aXZlRWxlbWVudCYmZS5pZD09PXRoaXMuYWN0aXZlRWxlbWVudC5pZCYmKHRoaXMuYWN0aXZlRWxlbWVudD1udWxsKSxlLnBhcmVudD1udWxsLHRoaXMuJGVtaXQoXCJub2RlOnJlbW92ZWRcIixlKSx0aGlzLnNlbGVjdGVkTm9kZXMucmVtb3ZlKGUpLHRoaXMuY2hlY2tlZE5vZGVzLnJlbW92ZShlKTt2YXIgbj10aGlzLnZtLm1hdGNoZXM7cmV0dXJuIG4mJm4ubGVuZ3RoJiZuLmluY2x1ZGVzKGUpJiZuLnNwbGljZShuLmluZGV4T2YoZSksMSksZX0sVHJlZS5wcm90b3R5cGUuaXNOb2RlPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgTm9kZX0sVHJlZS5wcm90b3R5cGUuZmluZD1mdW5jdGlvbihlLHQpe2lmKHRoaXMuaXNOb2RlKGUpKXJldHVybiBlO3ZhciBuPWZpbmQodGhpcy5tb2RlbCxlKTtyZXR1cm4gbiYmbi5sZW5ndGg/bmV3IFNlbGVjdGlvbih0aGlzLCEwPT09dD9uOltuWzBdXSk6bnVsbH0sVHJlZS5wcm90b3R5cGUuZ2V0Tm9kZUJ5SWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9bnVsbDtyZXR1cm4gcmVjdXJzZURvd24odGhpcy5tb2RlbCxmdW5jdGlvbihuKXtpZihcIlwiK24uaWQ9PT1lKXJldHVybiB0PW4sITF9KSx0fSxUcmVlLnByb3RvdHlwZS5nZXROb2RlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmlzTm9kZShlKT9lOm51bGx9LFRyZWUucHJvdG90eXBlLm9iamVjdFRvTm9kZT1mdW5jdGlvbihlKXtyZXR1cm4gb2JqZWN0VG9Ob2RlKHRoaXMsZSl9LFRyZWUucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKGUsdCl7dHx8KHQ9dGhpcy5vcHRpb25zLnByb3BlcnR5TmFtZXMpO3RyeXtyZXR1cm4gVHJlZVBhcnNlci5wYXJzZShlLHRoaXMsdCl9Y2F0Y2goZSl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoZSksW119fTt2YXIga2V5Q29kZXM9e0FSUk9XX0xFRlQ6MzcsQVJST1dfVE9QOjM4LEFSUk9XX1JJR0hUOjM5LEFSUk9XX0JPVFRPTTo0MCxTUEFDRTozMixERUxFVEU6NDYsRU5URVI6MTMsRVNDOjI3fSxjb2Rlc0Fycj1bMzcsMzgsMzksNDAsMzJdO2Z1bmN0aW9uIGZvY3VzVXAoZSx0KXt2YXIgbj1lLnByZXZWaXNpYmxlTm9kZSh0KTtpZihuKXJldHVybiBuLmRpc2FibGVkKCk/Zm9jdXNVcChlLG4pOnZvaWQgbi5mb2N1cygpfWZ1bmN0aW9uIGZvY3VzZERvd24oZSx0KXt2YXIgbj1lLm5leHRWaXNpYmxlTm9kZSh0KTtpZihuKXJldHVybiBuLmRpc2FibGVkKCk/Zm9jdXNkRG93bihlLG4pOnZvaWQgbi5mb2N1cygpfWZ1bmN0aW9uIGNoZWNrTm9kZShlLHQpe2Uub3B0aW9ucy5jaGVja2JveCYmKHQuY2hlY2tlZCgpP3QudW5jaGVjaygpOnQuY2hlY2soKSl9ZnVuY3Rpb24gbGVmdEFycm93KGUsdCl7aWYodC5leHBhbmRlZCgpKXQuY29sbGFwc2UoKTtlbHNle3ZhciBuPXQucGFyZW50O24mJm4uZm9jdXMoKX19ZnVuY3Rpb24gcmlnaHRBcnJvdyhlLHQpe2lmKHQuY29sbGFwc2VkKCkpdC5leHBhbmQoKTtlbHNle3ZhciBuPXQuZmlyc3QoKTtuJiZuLmZvY3VzKCl9fWZ1bmN0aW9uIGRlbGV0ZU5vZGUoZSx0KXt2YXIgbj1lLm9wdGlvbnMuZGVsZXRpb247biYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG4/ITA9PT1uKHQpJiZ0LnJlbW92ZSgpOiEwPT09biYmdC5yZW1vdmUoKSl9ZnVuY3Rpb24gaW5pdEtleWJvYXJkTmF2aWdhdGlvbihlKXtlLnZtLiRlbC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGZ1bmN0aW9uKHQpe3ZhciBuPXQua2V5Q29kZSxyPWUuYWN0aXZlRWxlbWVudDtpZihlLmlzTm9kZShyKSlpZihyLmlzRWRpdGluZylzd2l0Y2gobil7Y2FzZSBrZXlDb2Rlcy5FU0M6cmV0dXJuIHIuc3RvcEVkaXRpbmcoITEpfWVsc2Ugc3dpdGNoKGNvZGVzQXJyLmluY2x1ZGVzKG4pJiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCkpLG4pe2Nhc2Uga2V5Q29kZXMuQVJST1dfTEVGVDpyZXR1cm4gbGVmdEFycm93KGUscik7Y2FzZSBrZXlDb2Rlcy5BUlJPV19SSUdIVDpyZXR1cm4gcmlnaHRBcnJvdyhlLHIpO2Nhc2Uga2V5Q29kZXMuQVJST1dfVE9QOnJldHVybiBmb2N1c1VwKGUscik7Y2FzZSBrZXlDb2Rlcy5BUlJPV19CT1RUT006cmV0dXJuIGZvY3VzZERvd24oZSxyKTtjYXNlIGtleUNvZGVzLlNQQUNFOmNhc2Uga2V5Q29kZXMuRU5URVI6cmV0dXJuIGNoZWNrTm9kZShlLHIpO2Nhc2Uga2V5Q29kZXMuREVMRVRFOnJldHVybiBkZWxldGVOb2RlKGUscil9fSwhMCl9ZnVuY3Rpb24gYXNzZXJ0KGUsdCl7aWYoITE9PT1lKXRocm93IG5ldyBFcnJvcih0KX1mdW5jdGlvbiBpbml0RXZlbnRzKGUpe3ZhciB0PWUub3B0cyxuPXQubXVsdGlwbGUscj10LmNoZWNrYm94LG89ZS50cmVlLGk9ZnVuY3Rpb24odCl7dmFyIG89ZS5zZWxlY3RlZCgpO3I/ZS4kZW1pdChcImlucHV0XCIse3NlbGVjdGVkOm4/bzpvWzBdfHxudWxsLGNoZWNrZWQ6ZS5jaGVja2VkKCl9KTplLiRlbWl0KFwiaW5wdXRcIixuP286b1swXXx8bnVsbCl9O2koKSxvLiRvbihcIm5vZGU6c2VsZWN0ZWRcIixpKSxvLiRvbihcIm5vZGU6dW5zZWxlY3RlZFwiLGkpLHImJihvLiRvbihcIm5vZGU6Y2hlY2tlZFwiLGkpLG8uJG9uKFwibm9kZTp1bmNoZWNrZWRcIixpKSksby4kb24oXCJub2RlOmFkZGVkXCIsZnVuY3Rpb24oZSx0KXt2YXIgbj10fHxlO3ImJihuLnN0YXRlKFwiY2hlY2tlZFwiKSYmIW8uY2hlY2tlZE5vZGVzLmhhcyhuKSYmby5jaGVja2VkTm9kZXMuYWRkKG4pLG4ucmVmcmVzaEluZGV0ZXJtaW5hdGVTdGF0ZSgpKSxuLnN0YXRlKFwic2VsZWN0ZWRcIikmJiFvLnNlbGVjdGVkTm9kZXMuaGFzKG4pJiZvLnNlbGVjdChuKSxpKCl9KX12YXIgVHJlZU1peGluPXttb3VudGVkOmZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLG49bmV3IFRyZWUodGhpcyk7dGhpcy50cmVlPW4sdGhpcy5fcHJvdmlkZWQudHJlZT1uLCF0aGlzLmRhdGEmJnRoaXMub3B0cy5mZXRjaERhdGE/ZT1uLmZldGNoSW5pdERhdGEoKTp0aGlzLmRhdGEmJnRoaXMuZGF0YS50aGVuPyhlPXRoaXMuZGF0YSx0aGlzLmxvYWRpbmc9ITApOmU9UHJvbWlzZS5yZXNvbHZlKHRoaXMuZGF0YSksZS50aGVuKGZ1bmN0aW9uKGUpe2V8fChlPVtdKSx0Lm9wdHMuc3RvcmU/dC5jb25uZWN0U3RvcmUodC5vcHRzLnN0b3JlKTp0LnRyZWUuc2V0TW9kZWwoZSksdC5sb2FkaW5nJiYodC5sb2FkaW5nPSExKSx0LiRlbWl0KFwidHJlZTptb3VudGVkXCIsdCksaW5pdEV2ZW50cyh0KX0pLCExIT09dGhpcy5vcHRzLmtleWJvYXJkTmF2aWdhdGlvbiYmaW5pdEtleWJvYXJkTmF2aWdhdGlvbihuKX0sbWV0aG9kczp7Y29ubmVjdFN0b3JlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj1lLnN0b3JlLHI9ZS5tdXRhdGlvbnMsbz1lLmdldHRlcixpPWUuZGlzcGF0Y2hlcjthc3NlcnQoXCJmdW5jdGlvblwiPT10eXBlb2YgbyxcImBnZXR0ZXJgIG11c3QgYmUgYSBmdW5jdGlvblwiKSxhc3NlcnQoXCJmdW5jdGlvblwiPT10eXBlb2YgaSxcImBkaXNwYXRjaGVyYCBtdXN0IGJlIGEgZnVuY3Rpb25cIiksdm9pZCAwIT09ciYmYXNzZXJ0KEFycmF5LmlzQXJyYXkociksXCJgbXV0YXRpb25zYCBtdXN0IGJlIGFuIGFycmF5XCIpLG4uc3Vic2NyaWJlKGZ1bmN0aW9uKGUsbil7cj9yLmluY2x1ZGVzKGUudHlwZSkmJnQudHJlZS5zZXRNb2RlbChvKCkpOnQudHJlZS5zZXRNb2RlbChvKCkpfSksdGhpcy50cmVlLnNldE1vZGVsKG8oKSksdGhpcy4kb24oXCJMSVFVT1JfTk9JU0VcIixmdW5jdGlvbigpe3QuJG5leHRUaWNrKGZ1bmN0aW9uKGUpe2kodC50b0pTT04oKSl9KX0pfSxyZWN1cnNlRG93bjpmdW5jdGlvbihlKXt0aGlzLnRyZWUucmVjdXJzZURvd24oZSl9LHNlbGVjdGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJlZS5zZWxlY3RlZCgpfSxjaGVja2VkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJlZS5jaGVja2VkKCl9LGFwcGVuZDpmdW5jdGlvbihlLHQpe3JldHVybiB0P3RoaXMudHJlZS5hcHBlbmQoZSx0KTp0aGlzLnRyZWUuYWRkVG9Nb2RlbChlLHRoaXMudHJlZS5tb2RlbC5sZW5ndGgpfSxwcmVwZW5kOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ/dGhpcy50cmVlLnByZXBlbmQoZSx0KTp0aGlzLnRyZWUuYWRkVG9Nb2RlbChlLDApfSxhZGRDaGlsZDpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmFwcGVuZChlLHQpfSxyZW1vdmU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy50cmVlLnJlbW92ZShlLHQpfSxiZWZvcmU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdD90aGlzLnRyZWUuYmVmb3JlKGUsdCk6dGhpcy5wcmVwZW5kKGUpfSxhZnRlcjpmdW5jdGlvbihlLHQpe3JldHVybiB0P3RoaXMudHJlZS5hZnRlcihlLHQpOnRoaXMuYXBwZW5kKGUpfSxmaW5kOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMudHJlZS5maW5kKGUsdCl9LGZpbmRBbGw6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudHJlZS5maW5kKGUsITApfSxleHBhbmRBbGw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmVlLmV4cGFuZEFsbCgpfSxjb2xsYXBzZUFsbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRyZWUuY29sbGFwc2VBbGwoKX0sc29ydFRyZWU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy50cmVlLnNvcnRUcmVlKGUsdCl9LHNvcnQ6ZnVuY3Rpb24oKXtmb3IodmFyIGUsdD1bXSxuPWFyZ3VtZW50cy5sZW5ndGg7bi0tOyl0W25dPWFyZ3VtZW50c1tuXTtyZXR1cm4oZT10aGlzLnRyZWUpLnNvcnQuYXBwbHkoZSx0KX0sc2V0TW9kZWw6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudHJlZS5zZXRNb2RlbChlKX0sZ2V0Um9vdE5vZGU6ZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMudHJlZS5tb2RlbC5sZW5ndGg/dGhpcy50cmVlLm1vZGVsWzBdOnRoaXMudHJlZS5tb2RlbH0sdG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5tb2RlbCkpfX19LERyb3BQb3NpdGlvbj17QUJPVkU6XCJkcmFnLWFib3ZlXCIsQkVMT1c6XCJkcmFnLWJlbG93XCIsT046XCJkcmFnLW9uXCJ9O2Z1bmN0aW9uIGlzTW92aW5nU3RhcnRlZChlLHQpe3JldHVybiBNYXRoLmFicyhlLmNsaWVudFgtdFswXSk+NXx8TWF0aC5hYnMoZS5jbGllbnRZLXRbMV0pPjV9ZnVuY3Rpb24gY29tcG9zZWRQYXRoKGUpe2Zvcih2YXIgdD1lLnRhcmdldCxuPVtdO3Q7KXtpZihuLnB1c2godCksXCJIVE1MXCI9PT10LnRhZ05hbWUpcmV0dXJuIG4ucHVzaChkb2N1bWVudCksbi5wdXNoKHdpbmRvdyksbjt0PXQucGFyZW50RWxlbWVudH1yZXR1cm4gbn1mdW5jdGlvbiBnZXRQYXRoKGUpe3JldHVybiBlLnBhdGg/ZS5wYXRoOmUuY29tcG9zZWRQYXRoP2UuY29tcG9zZWRQYXRoKCk6Y29tcG9zZWRQYXRoKGUpfWZ1bmN0aW9uIGdldFNlbGVjdGVkTm9kZShlKXtmb3IodmFyIHQsbj0wLHI9Z2V0UGF0aChlKTtuPHIubGVuZ3RoO24rKylpZih0PXJbbl0uY2xhc3NOYW1lfHxcIlwiLC90cmVlLW5vZGUvLnRlc3QodCkpcmV0dXJuIHJbbl07cmV0dXJuIG51bGx9ZnVuY3Rpb24gZ2V0RHJvcERlc3RpbmF0aW9uKGUpe3ZhciB0PWdldFNlbGVjdGVkTm9kZShlKTtyZXR1cm4gdHx8bnVsbH1mdW5jdGlvbiB1cGRhdGVIZWxwZXJDbGFzc2VzKGUsdCl7aWYoZSl7dmFyIG49ZS5jbGFzc05hbWU7aWYodCluZXcgUmVnRXhwKHQpLnRlc3Qobil8fChuKz1cIiBcIit0KTtlbHNle2Zvcih2YXIgciBpbiBEcm9wUG9zaXRpb24pbj1uLnJlcGxhY2UoRHJvcFBvc2l0aW9uW3JdLFwiXCIpO24ucmVwbGFjZShcImRyYWdnaW5nXCIsXCJcIil9ZS5jbGFzc05hbWU9bi5yZXBsYWNlKC9cXHMrL2csXCIgXCIpfX1mdW5jdGlvbiBnZXREcm9wUG9zaXRpb24oZSx0KXt2YXIgbj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHI9bi5oZWlnaHQvMyxvPURyb3BQb3NpdGlvbi5PTjtyZXR1cm4gbi50b3Arcj49ZS5jbGllbnRZP289RHJvcFBvc2l0aW9uLkFCT1ZFOm4udG9wKzIqcjw9ZS5jbGllbnRZJiYobz1Ecm9wUG9zaXRpb24uQkVMT1cpLG99ZnVuY3Rpb24gY2FsbERuZENiKGUsdCxuKXtpZih0JiZ0W25dJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W25dKXJldHVybiExIT09dFtuXS5hcHBseSh0LGUpfWZ1bmN0aW9uIGNsZWFyRHJvcENsYXNzZXMoZSl7Zm9yKHZhciB0IGluIERyb3BQb3NpdGlvbilmb3IodmFyIG49ZS5xdWVyeVNlbGVjdG9yQWxsKFwiLlwiK0Ryb3BQb3NpdGlvblt0XSkscj0wO3I8bi5sZW5ndGg7cisrKXVwZGF0ZUhlbHBlckNsYXNzZXMobltyXSl9dmFyIFRyZWVEbmQ9e21ldGhvZHM6e29uRHJhZ1N0YXJ0OmZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKX0sc3RhcnREcmFnZ2luZzpmdW5jdGlvbihlLHQpe2UuaXNEcmFnZ2FibGUoKSYmITEhPT1jYWxsRG5kQ2IoW2VdLHRoaXMudHJlZS5vcHRpb25zLmRuZCxcIm9uRHJhZ1N0YXJ0XCIpJiYodGhpcy4kJHN0YXJ0RHJhZ1Bvc2l0aW9uPVt0LmNsaWVudFgsdC5jbGllbnRZXSx0aGlzLiQkcG9zc2libGVEcmFnTm9kZT1lLHRoaXMuaW5pdERyYWdMaXN0ZW5lcnMoKSl9LGluaXREcmFnTGlzdGVuZXJzOmZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLG49ZnVuY3Rpb24oKXt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixyLCEwKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLG8sITApfSxyPWZ1bmN0aW9uKHIpeyh0LiQkc3RhcnREcmFnUG9zaXRpb258fHIuc3RvcFByb3BhZ2F0aW9uKCksdC5kcmFnZ2FibGVOb2RlJiZ0LmRyYWdnYWJsZU5vZGUubm9kZS5zdGF0ZShcImRyYWdnaW5nXCIsITEpLHQuJCRkcm9wRGVzdGluYXRpb24mJnQudHJlZS5pc05vZGUodC4kJGRyb3BEZXN0aW5hdGlvbikmJnQuJCRkcm9wRGVzdGluYXRpb24udm0pJiYodXBkYXRlSGVscGVyQ2xhc3Nlcyh0LiQkZHJvcERlc3RpbmF0aW9uLnZtLiRlbCxudWxsKSwhMSE9PWNhbGxEbmRDYihbdC5kcmFnZ2FibGVOb2RlLm5vZGUsdC4kJGRyb3BEZXN0aW5hdGlvbixlXSx0LnRyZWUub3B0aW9ucy5kbmQsXCJvbkRyYWdGaW5pc2hcIikmJih0LiQkZHJvcERlc3RpbmF0aW9uLmlzRHJvcGFibGUoKXx8ZSE9PURyb3BQb3NpdGlvbi5PTikmJmUmJnQuZHJhZ2dhYmxlTm9kZS5ub2RlLmZpbmlzaERyYWdnaW5nKHQuJCRkcm9wRGVzdGluYXRpb24sZSksdC4kJGRyb3BEZXN0aW5hdGlvbj1udWxsKTt0LiQkcG9zc2libGVEcmFnTm9kZT1udWxsLHQuJHNldCh0LFwiZHJhZ2dhYmxlTm9kZVwiLG51bGwpLG4oKX0sbz1mdW5jdGlvbihyKXtpZighdC4kJHN0YXJ0RHJhZ1Bvc2l0aW9ufHxpc01vdmluZ1N0YXJ0ZWQocix0LiQkc3RhcnREcmFnUG9zaXRpb24pKXtpZih0LiQkc3RhcnREcmFnUG9zaXRpb249bnVsbCx0LiQkcG9zc2libGVEcmFnTm9kZSl7aWYoITE9PT10LiQkcG9zc2libGVEcmFnTm9kZS5zdGFydERyYWdnaW5nKCkpcmV0dXJuIG4oKSx2b2lkKHQuJCRwb3NzaWJsZURyYWdOb2RlPW51bGwpO3QuJHNldCh0LFwiZHJhZ2dhYmxlTm9kZVwiLHtub2RlOnQuJCRwb3NzaWJsZURyYWdOb2RlLGxlZnQ6MCx0b3A6MH0pLHQuJCRwb3NzaWJsZURyYWdOb2RlPW51bGx9dC5kcmFnZ2FibGVOb2RlLmxlZnQ9ci5jbGllbnRYLHQuZHJhZ2dhYmxlTm9kZS50b3A9ci5jbGllbnRZO3ZhciBvPWdldERyb3BEZXN0aW5hdGlvbihyKTtpZihjbGVhckRyb3BDbGFzc2VzKHQuJGVsKSxvKXt2YXIgaT1vLmdldEF0dHJpYnV0ZShcImRhdGEtaWRcIik7aWYodC5kcmFnZ2FibGVOb2RlLm5vZGUuaWQ9PT1pKXJldHVybjtpZih0LiQkZHJvcERlc3RpbmF0aW9uJiZ0LiQkZHJvcERlc3RpbmF0aW9uLmlkPT09aXx8KHQuJCRkcm9wRGVzdGluYXRpb249dC50cmVlLmdldE5vZGVCeUlkKGkpKSx0LiQkZHJvcERlc3RpbmF0aW9uJiZ0LmRyYWdnYWJsZU5vZGUubm9kZSlpZih0LiQkZHJvcERlc3RpbmF0aW9uLmdldFBhdGgoKS5pbmNsdWRlcyh0LmRyYWdnYWJsZU5vZGUubm9kZSkpcmV0dXJuIHZvaWQodC4kJGRyb3BEZXN0aW5hdGlvbj1udWxsKTtlPWdldERyb3BQb3NpdGlvbihyLG8pO3ZhciBzPWNhbGxEbmRDYihbdC5kcmFnZ2FibGVOb2RlLm5vZGUsdC4kJGRyb3BEZXN0aW5hdGlvbixlXSx0LnRyZWUub3B0aW9ucy5kbmQsXCJvbkRyYWdPblwiKTt0LiQkZHJvcERlc3RpbmF0aW9uLmlzRHJvcGFibGUoKSYmITEhPT1zfHxlIT09RHJvcFBvc2l0aW9uLk9OfHwoZT1udWxsKSx1cGRhdGVIZWxwZXJDbGFzc2VzKG8sZSl9fX07d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsciwhMCksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixvLCEwKX19fTshZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgZG9jdW1lbnQpe3ZhciBlPWRvY3VtZW50LmhlYWR8fGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXSx0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSxuPVwiIC50cmVlIHsgb3ZlcmZsb3c6IGF1dG87IH0gLnRyZWUtcm9vdCwgLnRyZWUtY2hpbGRyZW4geyBsaXN0LXN0eWxlOiBub25lOyBwYWRkaW5nOiAwOyB9IC50cmVlID4gLnRyZWUtcm9vdCwgLnRyZWUgPiAudHJlZS1maWx0ZXItZW1wdHkgeyBwYWRkaW5nOiAzcHg7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH0gLnRyZWUudHJlZS0tZHJhZ2dhYmxlIC50cmVlLW5vZGU6bm90KC5zZWxlY3RlZCkgPiAudHJlZS1jb250ZW50OmhvdmVyIHsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH0gLmRyYWctYWJvdmUsIC5kcmFnLWJlbG93LCAuZHJhZy1vbiB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgfSAuZHJhZy1vbiA+IC50cmVlLWNvbnRlbnQgeyBiYWNrZ3JvdW5kOiAjZmFmY2ZmOyBvdXRsaW5lOiAxcHggc29saWQgIzdiYWZmMjsgfSAuZHJhZy1hYm92ZSA+IC50cmVlLWNvbnRlbnQ6OmJlZm9yZSwgLmRyYWctYmVsb3cgPiAudHJlZS1jb250ZW50OjphZnRlciB7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiAnJzsgcG9zaXRpb246IGFic29sdXRlOyBoZWlnaHQ6IDhweDsgbGVmdDogMDsgcmlnaHQ6IDA7IHotaW5kZXg6IDI7IGJveC1zaXppbmc6IGJvcmRlci1ib3g7IGJhY2tncm91bmQtY29sb3I6ICMzMzY3ZDY7IGJvcmRlcjogM3B4IHNvbGlkICMzMzY3ZDY7IGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50OyBib3JkZXItdG9wLWNvbG9yOiB0cmFuc3BhcmVudDsgYm9yZGVyLXJhZGl1czogMDsgfSAuZHJhZy1hYm92ZSA+IC50cmVlLWNvbnRlbnQ6OmJlZm9yZSB7IHRvcDogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9IC5kcmFnLWJlbG93ID4gLnRyZWUtY29udGVudDo6YWZ0ZXIgeyBib3R0b206IDA7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1MCUpOyB9IFwiO3QudHlwZT1cInRleHQvY3NzXCIsdC5zdHlsZVNoZWV0P3Quc3R5bGVTaGVldC5jc3NUZXh0PW46dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuKSksZS5hcHBlbmRDaGlsZCh0KX19KCk7dmFyIGRlZmF1bHRzPXtkaXJlY3Rpb246XCJsdHJcIixtdWx0aXBsZTohMCxjaGVja2JveDohMSxjaGVja09uU2VsZWN0OiExLGF1dG9DaGVja0NoaWxkcmVuOiEwLGF1dG9EaXNhYmxlQ2hpbGRyZW46ITAsY2hlY2tEaXNhYmxlZENoaWxkcmVuOiEwLHBhcmVudFNlbGVjdDohMSxrZXlib2FyZE5hdmlnYXRpb246ITAsbm9kZUluZGVudDoyNCxtaW5GZXRjaERlbGF5OjAsZmV0Y2hEYXRhOm51bGwscHJvcGVydHlOYW1lczpudWxsLGRlbGV0aW9uOiExLGRuZDohMSxlZGl0aW5nOiExLG9uRmV0Y2hFcnJvcjpmdW5jdGlvbihlKXt0aHJvdyBlfX0sZmlsdGVyRGVmYXVsdHM9e2VtcHR5VGV4dDpcIk5vdGhpbmcgZm91bmQhXCIsbWF0Y2hlcjpmdW5jdGlvbihlLHQpe3ZhciBuPW5ldyBSZWdFeHAoZSxcImlcIikudGVzdCh0LnRleHQpO3JldHVybiEobiYmdC5wYXJlbnQmJm5ldyBSZWdFeHAoZSxcImlcIikudGVzdCh0LnBhcmVudC50ZXh0KSkmJm59LHBsYWluTGlzdDohMSxzaG93Q2hpbGRyZW46ITB9LFRyZWVSb290PXtyZW5kZXI6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ZS4kY3JlYXRlRWxlbWVudCxuPWUuX3NlbGYuX2N8fHQ7cmV0dXJuIG4oZS50YWcse3RhZzpcImNvbXBvbmVudFwiLGNsYXNzOnt0cmVlOiEwLFwidHJlZS1sb2FkaW5nXCI6dGhpcy5sb2FkaW5nLFwidHJlZS0tZHJhZ2dhYmxlXCI6ISF0aGlzLmRyYWdnYWJsZU5vZGV9LGF0dHJzOntyb2xlOlwidHJlZVwifX0sW2UuZmlsdGVyJiYwPT1lLm1hdGNoZXMubGVuZ3RoP1tuKFwiZGl2XCIse3N0YXRpY0NsYXNzOlwidHJlZS1maWx0ZXItZW1wdHlcIixkb21Qcm9wczp7aW5uZXJIVE1MOmUuX3MoZS5vcHRzLmZpbHRlci5lbXB0eVRleHQpfX0pXTpbbihcInVsXCIse3N0YXRpY0NsYXNzOlwidHJlZS1yb290XCIsb246e2RyYWdzdGFydDplLm9uRHJhZ1N0YXJ0fX0sW2Uub3B0cy5maWx0ZXIucGxhaW5MaXN0JiZlLm1hdGNoZXMubGVuZ3RoPjA/ZS5fbChlLm1hdGNoZXMsZnVuY3Rpb24odCl7cmV0dXJuIHQudmlzaWJsZSgpP24oXCJUcmVlTm9kZVwiLHtrZXk6dC5pZCxhdHRyczp7bm9kZTp0LG9wdGlvbnM6ZS5vcHRzfX0pOmUuX2UoKX0pOmUuX2woZS5tb2RlbCxmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC52aXNpYmxlKCk/bihcIlRyZWVOb2RlXCIse2tleTp0LmlkLGF0dHJzOntub2RlOnQsb3B0aW9uczplLm9wdHN9fSk6ZS5fZSgpfSldLDIpXSxlLl92KFwiIFwiKSxlLmRyYWdnYWJsZU5vZGU/bihcIkRyYWdnYWJsZU5vZGVcIix7YXR0cnM6e3RhcmdldDplLmRyYWdnYWJsZU5vZGV9fSk6ZS5fZSgpXSwyKX0sc3RhdGljUmVuZGVyRm5zOltdLG5hbWU6XCJUcmVlXCIsY29tcG9uZW50czp7VHJlZU5vZGU6VHJlZU5vZGUsRHJhZ2dhYmxlTm9kZTpEcmFnZ2FibGVOb2RlfSxtaXhpbnM6W1RyZWVNaXhpbixUcmVlRG5kXSxwcm92aWRlOmZ1bmN0aW9uKGUpe3JldHVybnt0cmVlOm51bGx9fSxwcm9wczp7ZGF0YTp7fSxvcHRpb25zOnt0eXBlOk9iamVjdCxkZWZhdWx0OmZ1bmN0aW9uKGUpe3JldHVybnt9fX0sZmlsdGVyOlN0cmluZyx0YWc6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6XCJkaXZcIn19LHdhdGNoOntmaWx0ZXI6ZnVuY3Rpb24oZSl7dGhpcy50cmVlLmZpbHRlcihlKX19LGRhdGE6ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3QuYXNzaWduKHt9LGRlZmF1bHRzLHRoaXMub3B0aW9ucyk7cmV0dXJuIGUuZmlsdGVyPU9iamVjdC5hc3NpZ24oe30sZmlsdGVyRGVmYXVsdHMsZS5maWx0ZXIpLHttb2RlbDpudWxsLHRyZWU6bnVsbCxsb2FkaW5nOiExLG9wdHM6ZSxtYXRjaGVzOltdLGRyYWdnYWJsZU5vZGU6bnVsbH19fSxpbnN0YWxsPWZ1bmN0aW9uKGUpe2UuY29tcG9uZW50KFRyZWVSb290Lm5hbWUsVHJlZVJvb3QpfTtUcmVlUm9vdC5pbnN0YWxsPWluc3RhbGwsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LlZ1ZSYmd2luZG93LlZ1ZS51c2UoVHJlZVJvb3QpO2V4cG9ydCBkZWZhdWx0IFRyZWVSb290O1xuIiwiaW1wb3J0IExpcXVvclRyZWUgZnJvbSAnbGlxdW9yLXRyZWUnXHJcbmltcG9ydCB7IG5vdGVKc01vZGVsIH0gZnJvbSBcIi4vbW9kZWwvbm90ZUpzTW9kZWxcIlxyXG5pbXBvcnQgeyBjb2RlTWlycm9yQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9jb2RlTWlycm9yQ29tcG9uZW50XCJcclxudmFyIGFwcCA9IG5ldyBWdWUoe1xyXG4gIGVsOiAnI2FwcExpc3QnLFxyXG4gIGNvbXBvbmVudHM6IHtcclxuICAgIExpcXVvclRyZWUsXHJcbiAgICBjb2RlTWlycm9yQ29tcG9uZW50XHJcbiAgfSxcclxuICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZWRpdE1vZGU6IGZhbHNlLFxyXG4gICAgICBjb21wb25lbnRLZXk6IDEsXHJcbiAgICAgIGJveG1vZGVsOiBbXSxcclxuICAgICAgLy8gdHJlZURhdGEwOiBmMCxcclxuICAgICAgdHJlZUZpbHRlcjA6ICcnLFxyXG4gICAgICB0cmVlT3B0aW9uczA6IHtcclxuICAgICAgICBmaWx0ZXI6IHtcclxuICAgICAgICAgIGVtcHR5VGV4dDogJydcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHRyZWVEYXRhOiB0aGlzLmdldERhdGEoKSxcclxuICAgICAgdHJlZU9wdGlvbnM6IHtcclxuICAgICAgfSxcclxuICAgICAgZGVsZXRlTW9kYWxOb3RlOiB7XHJcbiAgICAgICAgaWQ6IDAsXHJcbiAgICAgICAgaW5kZXg6IDAsXHJcbiAgICAgICAgdGV4dDogXCJcIlxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSxcclxuICBtb3VudGVkKCkge1xyXG4gICAgJChcIiNmaWx0ZXJcIikuZm9jdXMoKTtcclxuXHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcblxyXG4gICAgZmlsdGVyKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBnZXREYXRhKCkge1xyXG4gICAgICByZXR1cm4gZmV0Y2goXCIvR2V0Tm90ZVRyZWVcIilcclxuICAgICAgICAudGhlbihyID0+XHJcbiAgICAgICAgICByLmpzb24oKVxyXG4gICAgICAgIClcclxuICAgICAgICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZyhlKSlcclxuICAgIH0sXHJcbiAgICBnZXROb3RlKG1vZGVsKSB7XHJcbiAgICAgIG5vdGVKc01vZGVsLmdldE5vdGUobW9kZWwpLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEubW9kZWwpO1xyXG4gICAgICAgIHRoaXMuYm94bW9kZWwgPSBbXTtcclxuICAgICAgICB0aGlzLmVkaXRNb2RlID0gZmFsc2UsXHJcbiAgICAgICAgICB0aGlzLmJveG1vZGVsLnB1c2gocmVzcG9uc2UuZGF0YS5tb2RlbClcclxuICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAvLyBET00gaXMgbm93IHVwZGF0ZWRcclxuICAgICAgICAgIC8vIGB0aGlzYCBpcyBib3VuZCB0byB0aGUgY3VycmVudCBpbnN0YW5jZVxyXG4gICAgICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMTtcclxuXHJcbiAgICAgICAgfSlcclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBkZWxldGVOb3RlKGlkLCBpbmRleCkge1xyXG4gICAgICAvLyBpZiAoY29uZmlybShcIldhbm5hIERlbGV0ZT9cIikpIHtcclxuICAgICAgbm90ZUpzTW9kZWwuZGVsZXRlTm90ZShpZClcclxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICBkZWJ1Z2dlcjtcclxuICAgICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmJveG1vZGVsLCBpbmRleClcclxuICAgICAgICAgIHRoaXMudHJlZURhdGE9IFtdXHJcbiAgICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoJyNkZWxldGVNb2RhbCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgICAgIC8vVXBkYXRlIENvbXBvbmVudHMgYW5kIGV2ZXJ5VGhpbmdcclxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRLZXkgKz0gMTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIClcclxuICAgIH0sXHJcbiAgICB1cGRhdGVDb2RlTWlycm9yVGV4dChpdGVtKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGl0ZW0pXHJcbiAgICAgIHRoaXMuYm94bW9kZWxbMF0uY29kZVtpdGVtLmluZGV4XS5tYWluYm9keSA9IGl0ZW0udmFsdWVcclxuICAgIH0sXHJcbiAgICBzZWFyY2g6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgLy8gYWxlcnQoXCJzXCIpXHJcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMpXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlTm90ZSgpIHtcclxuICAgICAgdmFyIG1vZGVsID0gdGhpcy5ib3htb2RlbFswXTtcclxuICAgICAgbm90ZUpzTW9kZWwudXBkYXRlTm90ZShtb2RlbClcclxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICBkZWJ1Z2dlcjtcclxuICAgICAgICAgIHRoaXMuZWRpdE1vZGUgPSBmYWxzZVxyXG4gICAgICAgICAgYWxlcnQoXCJUaGUgcmVjb3JkZSB3YXMgdXBkYXRlZCBzdWNjZXNzZnVsbHkuXCIpXHJcbiAgICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50S2V5ICs9IDE7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgb3BlbkRlbGV0ZU1vZGFsKGlkLCBpbmRleCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhpZClcclxuICAgICAgdGhpcy5kZWxldGVNb2RhbE5vdGUuaWQgPSBpZDtcclxuICAgICAgdGhpcy5kZWxldGVNb2RhbE5vdGUuaW5kZXggPSBpbmRleDtcclxuICAgICAgLy8gaW5kZXhcclxuICAgICBcclxuXHJcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjZGVsZXRlTW9kYWwnKS5tb2RhbCgndG9nZ2xlJyk7XHJcbiAgICAgIH0pXHJcbiAgICB9LCAgICBcclxuICAgIGFkZE5vdGVDb2RlKCkge1xyXG4gICAgICB0aGlzLmJveG1vZGVsWzBdLmNvZGUucHVzaCh7XHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXHJcbiAgICAgICAgbWFpbmJvZHk6IFwiXCIsXHJcbiAgICAgICAgcG9yZ3JhbW1pbmdTdHlsZWxhbmd1Z2U6IFwiXCJcclxuICAgICAgfSlcclxuXHJcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudEtleSArPSAxO1xyXG4gICAgICB9KVxyXG4gICAgfSxcclxuICAgIGRlbGV0ZU5vZGVDb2RlKGluZGV4KSB7XHJcbiAgICAgIHRoaXMuYm94bW9kZWxbMF0uY29kZS5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cclxuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50S2V5ICs9IDE7XHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgZWRpdE1vZGUoKSB7XHJcbiAgICAgIGFsZXJ0KFwiZWRpdE1vZGVcIilcclxuICAgICAgaWYgKHRoaXMuZWRpdE1vZGUpXHJcbiAgICAgICAgdGhpcy5lZGl0TW9kZSA9IGZhbHNlO1xyXG4gICAgICBlbHNlXHJcbiAgICAgICAgdGhpcy5lZGl0TW9kZSA9IHRydWU7XHJcbiAgICB9LFxyXG4gICAgb25Ob2RlU2VsZWN0ZWQoaXRlbSkge1xyXG4gICAgICBpZiAoaXRlbS5jaGlsZHJlbi5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgIC8vIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy9Ob3RlP2lkPScraXRlbS5pZCsnJnRpdGxlPScraXRlbS50ZXh0LnJlcGxhY2UoLyAvZywnXycpKClcclxuICAgICAgICB0aGlzLmdldE5vdGUoaXRlbSlcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSlcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==