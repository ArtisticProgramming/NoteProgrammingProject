!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){"use strict";n.r(t),n.d(t,"noteJsModel",function(){return o});var o={test:{name:"mostafa"},getNotes:function(e){return axios.get("/GetNotes?page="+e.page+"&perPage="+e.perPage+e.title+e.bookMark+e.noteType+e.projectName+e.technology+e.specificSubject)},deleteNote:function(e){return axios.get("/DeleteNote?id="+e)},getNoteTree:function(){return axios.get("/GetNoteTree")},getNote:function(e){return axios.get("/GetNote?id="+e.id)},updateNote:function(e){return axios.post("/UpdateNote",{model:e})}}},function(e,t,n){"use strict";n.r(t),n.d(t,"codeMirrorComponent",function(){return o});const o=Vue.component("code-mirror",{template:"<textarea>{{body}}</textarea>",props:["body","lang","index"],methods:{methodThatForcesUpdate(){}},mounted:function(){var e=this,t=$(this.$el);CodeMirror.fromTextArea(t[0],{mode:this.lang,lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0}).on("change",t=>{e.$emit("input-text-area",{index:e.index,value:t.getValue()})})},beforeDestroy:function(){let e=0;for(e=0;e<$(".CodeMirror").length;e++){var t=$(".CodeMirror")[e];void 0!==t&&(t.CodeMirror.setOption("mode","text/x-csrc"),t.CodeMirror.getWrapperElement().parentNode.removeChild(t.CodeMirror.getWrapperElement()),t.CodeMirror=null)}},destroyed:function(){}})},function(e,t,n){"use strict";n.r(t),n.d(t,"select2",function(){return o});const o=Vue.component("select2",{props:["options","value","url","multi"],data:()=>({selectValue:"1234"}),template:"<input /> ",mounted:function(){var e=this;o=$(this.$el).select2({allowClear:!0,tags:"true"===e.multi?[]:void 0,maximumInputLength:30,maximumSelectionSize:1,initSelection:function(e,t){},ajax:{url:e.url,dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(console.log(),0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}}}).select2("val","true"===e.multi?[]:"").on("change",function(t){var n=$(this).select2("data");"true"===e.multi&&(n=$(this).select2("data")[0]),console.log("-----------------select 2 Data----------------------------"),console.log(n),null!=n?e.$emit("input-data",n):e.$emit("input-data",{text:"",id:""})})},watch:{value:function(e){console.log(e),""==e&&$(this.$el).select2("val","")},options:function(e){console.log(e)}},destroyed:function(){$(this.$el).off().select2("destroy")}})},function(e,t,n){"use strict";n.r(t),n.d(t,"utility",function(){return o});let o={getUrlParameter:function(e){var t,n,o=window.location.search.substring(1).split("&");for(n=0;n<o.length;n++)if((t=o[n].split("="))[0]===e)return void 0===t[1]||decodeURIComponent(t[1])}}},function(e,t,n){"use strict";n.r(t),n.d(t,"dropdowns",function(){return o});let o={enableNoteType:function(e){$("#nType").select2({initSelection:function(e,t){},ajax:{url:"/GetNoteTypes",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}}}).select2("val","").on("change",function(t){var n=$(this).select2("data");console.log(n),void 0!==n&&(e.nodeModel.noteType.text=n.text,e.nodeModel.noteType.id=n.id)})},enableProject:function(e){$("#project").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetProjectTypes",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){e.projectType="";var n=$(this).select2("data")[0];console.log(n),void 0!==n&&(e.nodeModel.projectType.text=n.text,e.nodeModel.projectType.id=n.id),console.log(e.projectType)})},enableGeneralSubject:function(e){$("#technology").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetTechnologies",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){var n=$(this).select2("data")[0];void 0!==n&&(e.nodeModel.technologyType.text=n.text,e.nodeModel.technologyType.id=n.id)})},enableSpecificSubject:function(e){$("#specificSubject").select2({tags:[],initSelection:function(e,t){},maximumInputLength:30,maximumSelectionSize:1,ajax:{url:"/GetSpecificSubject",dataType:"json",quietMillis:100,data:function(e,t){return{query:e}},results:function(e,t){return{results:e.model}}},createSearchChoice:function(e,t){if(0===$(t).filter(function(){return 0===this.text.localeCompare(e)}).length)return{id:"$*NewTag*$",text:e}},multiple:!0}).select2("val",[]).on("change",function(t){var n=$(this).select2("data")[0];void 0!==n&&(e.nodeModel.specificSubject.text=n.text,e.nodeModel.specificSubject.id=n.id)})}}},function(e,t,n){n(6),n(7),n(11),n(8),n(9),n(10),n(0),n(1),n(2),n(3),e.exports=n(4)},function(e,t,n){"use strict";n.r(t);n(0);var o=n(1),i=n(2);window.EnableAddNode=function(){var e=new Vue({el:"#anapp",data:{selectedProject:"",selectedSpecificSubject:"",selectedGeneralSubject:"",selectedNoteType:"",message:"Create a Note",nodeModel:{bookMark:!1,title:"",projectType:{},technologyType:{},specificSubject:{},noteType:{},model:[{mainbody:"",desc:"",lang:"htmlmixed"}]},componentKey:1},components:{codeMirrorComponent:o.codeMirrorComponent,select2:i.select2},updated:function(){},methods:{submit(){axios.post("/PostAddNote",{model:this.nodeModel}).then(e=>{this.nodeModel={bookMark:!1,title:"",projectType:{},technologyType:{},specificSubject:{},noteType:{},model:[{mainbody:"",desc:"",lang:"htmlmixed"}],componentKey:1},this.componentKey+=1,this.selectedProject="",this.selectedNoteType="",this.selectedSpecificSubject="",this.selectedGeneralSubject=""}).catch(e=>{alert(e)})},getNoteTypeSelectValue(e){this.nodeModel.noteType.text=e.text,this.nodeModel.noteType.id=e.id,this.selectedNoteType=e.text},getProjectSelectValue(t){e.nodeModel.projectType.text=t.text,e.nodeModel.projectType.id=t.id,this.selectedProject=t.text},getGeneralSubjectSelectValue(t){e.nodeModel.technologyType.text=t.text,e.nodeModel.technologyType.id=t.id,this.selectedGeneralSubject=t.text},getSpecificSubjectSelectValue(t){e.nodeModel.specificSubject.text=t.text,e.nodeModel.specificSubject.id=t.id,this.selectedSpecificSubject=t.text},updateType(e){},updateTechnology(e){},updateProjectType(e){console.log(e),this.nodeModel.projectType=e},updateCodeMirrorText(e){console.log(e),this.nodeModel.model[e.index].mainbody=e.value},add(){this.nodeModel.model.push({mainbody:"",desc:"",lang:""})}},beforeCreate(){console.log("Nothing gets called before me!")},created(){console.log("created ")},mounted(){}})}},function(e,t,n){"use strict";n.r(t);var o=n(0),i=n(1),r=n(3),s=(n(4),n(2));window.EnableVusJs=function(){console.log(o.noteJsModel.test.name);var e="inactive",t=1,n=new Vue({el:"#app",data:{noteType:{},message:"Hello Vue!",searchModel:{searchTextBox:"",bookMark:!1,noteType:"",projectName:"",technology:"",specificSubject:""},boxmodel:[],deleteModalNote:{id:0,index:0,text:""},componentKey:0},components:{codeMirrorComponent:i.codeMirrorComponent,select2:s.select2},updated:function(){},methods:{getNoteTypeSelectValue(e){this.searchModel.noteType=e.text,this.search()},getProjectSelectValue(e){this.searchModel.projectName=e.text,this.search()},getGeneralSubjectSelectValue(e){this.searchModel.technology=e.text,this.search()},getSpecificSubjectSelectValue(e){this.searchModel.specificSubject=e.text,this.search()},search:function(){t=1,this.loadNote(t,!0)},loadNote(t,n){console.log("LLLLLLLLLLLLLLLLOOODDD");var i={page:t,perPage:8,title:"",bookMark:"",noteType:"",projectName:"",technology:"",specificSubject:""};console.log(this.searchModel.searchTextBox),void 0!==this.searchModel.searchTextBox&&""!=this.searchModel.searchTextBox&&(i.title="&title="+this.searchModel.searchTextBox),void 0!==this.searchModel.bookMark&&0!=this.searchModel.bookMark&&(i.bookMark="&bookMark="+this.searchModel.bookMark),void 0!==this.searchModel.noteType&&0!=this.searchModel.noteType&&(i.noteType="&noteType="+this.searchModel.noteType),void 0!==this.searchModel.projectName&&0!=this.searchModel.projectName&&(i.projectName="&projectName="+this.searchModel.projectName),void 0!==this.searchModel.technology&&0!=this.searchModel.technology&&(i.technology="&technology="+this.searchModel.technology),void 0!==this.searchModel.specificSubject&&0!=this.searchModel.specificSubject&&(i.specificSubject="&specificSubject="+this.searchModel.specificSubject),o.noteJsModel.getNotes(i).then(t=>{n?(this.boxmodel=[],this.boxmodel=t.data.model):t.data.model.forEach(e=>{this.boxmodel.push(e)}),e="inactive",this.$nextTick(function(){this.componentKey+=1})})},OpenCloseNote(e){$("#oc-"+e),console.log($(this).parent().parent().children(".cardHeigth"));var t=$("#oc-"+e),n=$(t).parent().parent();return"100px"==$(t).css("height")?($(t).css("height","auto"),$(t).css("overflow-y","hidden"),$(n).removeClass("col-lg-6"),$(n).addClass("col-lg-12")):($(t).css("height","100px"),$(t).css("overflow-y","scroll"),$(n).removeClass("col-lg-12"),$(n).addClass("col-lg-6")),!1},openDeleteModal(e,t){console.log(e),this.deleteModalNote.id=e,this.deleteModalNote.index=t,this.$nextTick(function(){$("#deleteModal").modal("toggle")})},deleteNote(e,t){o.noteJsModel.deleteNote(e).then(e=>{this.$delete(this.boxmodel,t),this.$nextTick(function(){$("#deleteModal").modal("hide"),this.componentKey+=1})})}},created:function(){},mounted(){console.log("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$"),console.log("page=>"),console.log(r.utility.getUrlParameter("project")),this.loadNote(t)}});$(window).scroll(function(){$(window).scrollTop()+$(window).height()>$(document).height()-5&&"inactive"==e&&(e="active",setTimeout(function(){t+=1,n.loadNote(t)},500))}),$(document).ready(function(){$("#searchTxt").focus()}),$("body").on("click",".OpenCloseNote",function(){})}},function(e,t){!function(){window.noteUtilityJs=window.noteUtilityJs||{};var e=[];for(i=0;i<document.getElementsByClassName("mirrorCode").length;i++){var t=$($(".mirrorCode")[i]).attr("lang");console.log("lang = "+t);var n=CodeMirror.fromTextArea(document.getElementsByClassName("mirrorCode")[i],{mode:t,lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0});e.push(n)}$(document).ready(function(){$("#example thead tr").clone(!0).appendTo("#example thead"),$("#example thead tr:eq(1) th").each(function(t){var n=$(this).text();$(this).html('<input type="text" placeholder="Search '+n+'" />'),$("input",this).on("keyup change",function(){e.column(t).search()!==this.value&&e.column(t).search(this.value).draw()})});var e=$("#example").DataTable({orderCellsTop:!0,fixedHeader:!0})})}()},function(e,t){!function(e){"use strict";var t=1;function n(){e("body").toggleClass("sidebar-toggled"),e(".sidebar").toggleClass("toggled"),e(".sidebar").hasClass("toggled")&&e(".sidebar .collapse").collapse("hide")}e("body").on("click","#addprogrammingnotebody",function(){let n="code"+t;var o='<div class="form-group note-body">\n                          <textarea id="'+n+'" rows="8" name=\'code['+t+'][body]\' style="margin: 10px; "\n                          value="" class="code form-control"></textarea>\n                      </div',i='<div class="row">\n            <div class="form-group col-md-9"><input id="exampleInputEmail1" \n                type="text" aria-describedby="emailHelp"\n                    placeholder="Title" name="code['+t+'][desc]" class="form-control"></div>\n            <div box-id="'+n+'"  class="form-group col-md-3 selectlang">\n            <select class="form-control form-control" name="code['+t+'][codelang]">\n                    <option value="htmlmixed">Html</option>\n                    <option value="text/css"> CSS</option>\n                    <option value="text/javascript"> JavaScript</option>\n                    <option value="text/x-sql"> SQl</option>\n                    <option value="text/x-csharp"> C#</option>\n                    <option value="text/x-python"> Python</option>\n                    <option value="text/x-java"> Java</option>\n                    <option value="text/x-php"> PHP</option>\n                    <option value="text/x-c++src"> C++</option>\n                    <option value="text/x-csrc"> C</option>\n                    <option value="text/x-go"> Go</option>\n                    <option value="text/x-rsrc"> R</option>\n                    <option value="application/x-powershell"> PowerShell</option>\n                </select></div>\n            </div>';e(".note-body").last().after(i+o);CodeMirror.fromTextArea(document.getElementById(n),{lineNumbers:!0,styleActiveLine:!0,matchBrackets:!0,viewportMargin:1/0});t+=1}),e("body").on("change",".selectlang",function(){e(this).attr("box-id"),e(this).val()}),e("#searchBoxBtn").click(function(){var t=e("#searchBox").val();location.href="/Notes?title="+t}),n(),e("#sidebarToggle, #sidebarToggleTop").on("click",function(e){n()}),e(window).resize(function(){e(window).width()<768&&e(".sidebar .collapse").collapse("hide")}),e("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel",function(t){if(e(window).width()>768){var n=t.originalEvent,o=n.wheelDelta||-n.detail;this.scrollTop+=30*(o<0?1:-1),t.preventDefault()}}),e(document).on("scroll",function(){e(this).scrollTop()>100?e(".scroll-to-top").fadeIn():e(".scroll-to-top").fadeOut()}),e(document).on("click","a.scroll-to-top",function(t){var n=e(this);e("html, body").stop().animate({scrollTop:e(n.attr("href")).offset().top},1e3,"easeInOutExpo"),t.preventDefault()})}(jQuery)},function(e,t){},function(e,t,n){"use strict";n.r(t);!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=' .tree-node { white-space: nowrap; display: flex; flex-direction: column; position: relative; box-sizing: border-box; } .tree-content { display: flex; align-items: center; padding: 3px; cursor: pointer; width: 100%; box-sizing: border-box; } .tree-node:not(.selected) > .tree-content:hover { background: #f6f8fb; } .tree-node.selected > .tree-content { background-color: #e7eef7; } .tree-node.disabled > .tree-content:hover { background: inherit; } .tree-arrow { flex-shrink: 0; height: 30px; cursor: pointer; margin-left: 30px; width: 0; } .tree-arrow.has-child { margin-left: 0; width: 30px; position: relative; } .tree-arrow.has-child:after { border: 1.5px solid #494646; position: absolute; border-left: 0; border-top: 0; left: 9px; top: 50%; height: 9px; width: 9px; transform: rotate(-45deg) translateY(-50%) translateX(0); transition: transform .25s; transform-origin: center; } .tree-arrow.has-child.rtl:after { border: 1.5px solid #494646; position: absolute; border-right: 0; border-bottom: 0; right: 0px; top: 50%; height: 9px; width: 9px; transform: rotate(-45deg) translateY(-50%) translateX(0); transition: transform .25s; transform-origin: center; } .tree-arrow.expanded.has-child:after { transform: rotate(45deg) translateY(-50%) translateX(-5px); } .tree-checkbox { flex-shrink: 0; position: relative; width: 30px; height: 30px; box-sizing: border-box; border: 1px solid #dadada; border-radius: 2px; background: #fff; transition: border-color .25s, background-color .25s; } .tree-checkbox:after, .tree-arrow:after { position: absolute; display: block; content: ""; } .tree-checkbox.checked, .tree-checkbox.indeterminate { background-color: #3a99fc; border-color: #218eff; } .tree-checkbox.checked:after { box-sizing: content-box; border: 1.5px solid #fff; /* probably width would be rounded in most cases */ border-left: 0; border-top: 0; left: 9px; top: 3px; height: 15px; width: 8px; transform: rotate(45deg) scaleY(0); transition: transform .25s; transform-origin: center; } .tree-checkbox.checked:after { transform: rotate(45deg) scaleY(1); } .tree-checkbox.indeterminate:after { background-color: #fff; top: 50%; left: 20%; right: 20%; height: 2px; } .tree-anchor { flex-grow: 2; outline: none; display: flex; text-decoration: none; color: #343434; vertical-align: top; margin-left: 3px; line-height: 24px; padding: 3px 6px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .tree-node.selected > .tree-content > .tree-anchor { outline: none; } .tree-node.disabled > .tree-content > .tree-anchor { color: #989191; background: #fff; opacity: .6; cursor: default; outline: none; } .tree-input { display: block; width: 100%; height: 24px; line-height: 24px; outline: none; border: 1px solid #3498db; padding: 0 4px; } .l-fade-enter-active, .l-fade-leave-active { transition: opacity .3s, transform .3s; transform: translateX(0); } .l-fade-enter, .l-fade-leave-to { opacity: 0; transform: translateX(-2em); } .tree--small .tree-anchor { line-height: 19px; } .tree--small .tree-checkbox { width: 23px; height: 23px; } .tree--small .tree-arrow { height: 23px; } .tree--small .tree-checkbox.checked:after { left: 7px; top: 3px; height: 11px; width: 5px; } .tree-node.has-child.loading > .tree-content > .tree-arrow, .tree-node.has-child.loading > .tree-content > .tree-arrow:after { border-radius: 50%; width: 15px; height: 15px; border: 0; } .tree-node.has-child.loading > .tree-content > .tree-arrow { font-size: 3px; position: relative; border-top: 1.1em solid rgba(45,45,45, 0.2); border-right: 1.1em solid rgba(45,45,45, 0.2); border-bottom: 1.1em solid rgba(45,45,45, 0.2); border-left: 1.1em solid #2d2d2d; -webkit-transform: translateZ(0); -ms-transform: translateZ(0); transform: translateZ(0); left: 5px; -webkit-animation: loading 1.1s infinite linear; animation: loading 1.1s infinite linear; margin-right: 8px; } @-webkit-keyframes loading { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } @keyframes loading { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); } } ';t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();var o={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("li",{staticClass:"tree-node",class:e.nodeClass,attrs:{"data-id":e.node.id},on:{mousedown:function(t){return t.stopPropagation(),e.handleMouseDown(t)}}},[n("div",{staticClass:"tree-content",style:["ltr"==e.options.direction?{"padding-left":e.padding}:{"padding-right":e.padding}],on:{click:function(t){return t.stopPropagation(),e.select(t)}}},[n("i",{staticClass:"tree-arrow",class:[{expanded:e.node.states.expanded,"has-child":e.node.children.length||e.node.isBatch},e.options.direction],on:{click:function(t){return t.stopPropagation(),e.toggleExpand(t)}}}),e._v(" "),e.options.checkbox?n("i",{staticClass:"tree-checkbox",class:{checked:e.node.states.checked,indeterminate:e.node.states.indeterminate},on:{click:function(t){return t.stopPropagation(),e.check(t)}}}):e._e(),e._v(" "),n("span",{ref:"anchor",staticClass:"tree-anchor",attrs:{tabindex:"-1"},on:{focus:e.onNodeFocus,dblclick:function(t){e.tree.$emit("node:dblclick",e.node)}}},[n("node-content",{attrs:{node:e.node}})],1)]),e._v(" "),n("transition",{attrs:{name:"l-fade"}},[e.hasChildren()&&e.node.states.expanded?n("ul",{staticClass:"tree-children"},e._l(e.node.children,function(t){return t&&t.visible()?n("node",{key:t.id,attrs:{node:t,options:e.options}}):e._e()})):e._e()])],1)},staticRenderFns:[],name:"Node",inject:["tree"],props:["node","options"],components:{NodeContent:{name:"node-content",props:["node"],render:function(e){var t=this,n=this.node,o=this.node.tree.vm;if(n.isEditing){var i=n.text;return this.$nextTick(function(e){t.$refs.editCtrl.focus()}),e("input",{domProps:{value:n.text,type:"text"},class:"tree-input",on:{input:function(e){i=e.target.value},blur:function(){n.stopEditing(i)},keyup:function(e){13===e.keyCode&&n.stopEditing(i)},mouseup:function(e){e.stopPropagation()}},ref:"editCtrl"})}return o.$scopedSlots.default?o.$scopedSlots.default({node:this.node}):e("span",{domProps:{innerHTML:n.text}})}}},watch:{node:function(){this.node.vm=this}},data:function(){return this.node.vm=this,{loading:!1}},computed:{padding:function(){return this.node.depth*(this.options.paddingLeft?this.options.paddingLeft:this.options.nodeIndent)+"px"},nodeClass:function(){var e=this.node.states,t=this.hasChildren(),n={"has-child":t,expanded:t&&e.expanded,selected:e.selected,disabled:e.disabled,matched:e.matched,dragging:e.dragging,loading:this.loading,draggable:e.draggable};return this.options.checkbox&&(n.checked=e.checked,n.indeterminate=e.indeterminate),n}},methods:{onNodeFocus:function(){this.tree.activeElement=this.node},focus:function(){this.$refs.anchor.focus(),this.node.select()},check:function(){this.node.checked()?this.node.uncheck():this.node.check()},select:function(e){void 0===e&&(e=evnt);var t=e.ctrlKey,n=this.options,o=this.tree,i=this.node;if(o.$emit("node:clicked",i),!n.editing||!i.isEditing){if(n.editing&&i.editable())return this.startEditing();if(n.checkbox&&n.checkOnSelect)return!n.parentSelect&&this.hasChildren()?this.toggleExpand():this.check(t);!n.parentSelect&&this.hasChildren()&&this.toggleExpand(),n.multiple?i.selected()?t?i.unselect():1!=this.tree.selectedNodes.length&&(o.unselectAll(),i.select()):i.select(t):i.selected()&&t?i.unselect():i.select()}},toggleExpand:function(){this.hasChildren()&&this.node.toggleExpand()},hasChildren:function(){return this.node.hasChildren()},startEditing:function(){this.tree._editingNode&&this.tree._editingNode.stopEditing(),this.node.startEditing()},stopEditing:function(){this.node.stopEditing()},handleMouseDown:function(e){this.options.dnd&&this.tree.vm.startDragging(this.node,e)}}};!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=" .tree-dragnode { padding: 10px; border: 1px solid #e7eef7; position: fixed; border-radius: 8px; background: #fff; transform: translate(-50%, -110%); z-index: 10; } ";t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();function i(e,t){var n;return Array.isArray(e)?e.map(function(e){return i(e,t)}):(!1!==(n=t(e))&&e.children&&e.children.length&&(n=i(e.children,t)),n)}function r(e){return 0==!!document?e:(r.__element||(r.__element=document.createElement("div")),r.__element.innerHTML=e,r.__element.innerText)}function s(e){return function(t){return Object.keys(e).every(function(n){if("text"===n||"id"===n){var o=e[n],i=t[n];return i=r(i),function(e){return e instanceof RegExp}(o)?o.test(i):o===i}var s=e[n];return"state"===n&&(n="states"),Object.keys(s).every(function(e){return t[n][e]===s[e]})})}}function a(e,t,n){if(void 0===n&&(n=!0),!e||!e.length||!t)return null;if(n&&(e=function(e){var t=[];return e.forEach(function e(n){t.push(n),n.children&&n.children.forEach(e)}),t}(e)),"number"==typeof t)return e[t]||null;("string"==typeof t||t instanceof RegExp)&&(t={text:t}),"function"!=typeof t&&(t=s(t));var o=e.filter(t);return o.length?o:null}function d(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}function c(){return d()+d()+"-"+d()+"-"+d()+"-"+d()+"-"+d()+d()+d()}function l(e,t){for(var n=[],o=arguments.length-2;o-- >0;)n[o]=arguments[o+2];e.forEach(function(e){return e[t].apply(e,n)})}var h=function(e){function t(t,n){var o;void 0===n&&(n=[]),e.call(this),this.tree=t,(o=this).push.apply(o,n)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.remove=function(){return l(this,"remove"),this},t.prototype.expand=function(){return l(this,"expand"),this},t.prototype.collapse=function(){return l(this,"collapse"),this},t.prototype.select=function(e){return l(this,"select",e),this},t.prototype.unselect=function(){return l(this,"unselect"),this},t.prototype.check=function(){return this.tree.options.checkbox&&l(this,"check"),this},t.prototype.uncheck=function(){return this.tree.options.checkbox&&l(this,"uncheck"),this},t}(Array),p=function(e,t){if(!t)throw new Error("Node can not be empty");if(this.id=t.id||c(),this.states=t.state||{},this.showChildren=!0,this.children=t.children||[],this.parent=t.parent||null,this.isBatch=t.isBatch||!1,this.isEditing=!1,this.data=Object.assign({},t.data||{},{text:t.text}),!e)throw new Error("Node must has a Tree context!");this.tree=e},u={key:{configurable:!0},depth:{configurable:!0},text:{configurable:!0}};p.prototype.$emit=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.tree).$emit.apply(t,["node:"+e,this].concat(n))},p.prototype.getPath=function(){if(!this.parent)return[this];for(var e=[this],t=this;null!==(t=t.parent);)e.push(t);return e},u.key.get=function(){return this.id+this.text},u.depth.get=function(){var e=0,t=this.parent;if(!t||!1===this.showChildren)return e;do{e++}while(t=t.parent);return e},u.text.get=function(){return this.data.text},u.text.set=function(e){var t=this.text;t!==e&&(this.data.text=e,this.$emit("text:changed",e,t))},p.prototype.state=function(e,t){return void 0===t?this.states[e]:(this.states[e]=t,this)},p.prototype.recurseUp=function(e,t){if(void 0===t&&(t=this),t.parent)return!1!==e(t.parent)?this.recurseUp(e,t.parent):void 0},p.prototype.recurseDown=function(e,t){!0!==t&&e(this),this.hasChildren()&&i(this.children,e)},p.prototype.refreshIndeterminateState=function(){if(!this.tree.options.autoCheckChildren)return this;if(this.state("indeterminate",!1),this.hasChildren()){var e=this.children.length,t=0,n=0,o=0;this.children.forEach(function(e){e.checked()&&t++,e.disabled()&&o++,e.indeterminate()&&n++}),t>0&&t===e-o?this.checked()||(this.state("checked",!0),this.tree.check(this),this.$emit("checked")):(this.checked()&&(this.state("checked",!1),this.tree.uncheck(this),this.$emit("unchecked")),this.state("indeterminate",n>0||t>0&&t<e))}this.parent&&this.parent.refreshIndeterminateState()},p.prototype.indeterminate=function(){return this.state("indeterminate")},p.prototype.editable=function(){return!this.state("disabled")&&this.state("editable")},p.prototype.selectable=function(){return!this.state("disabled")&&this.state("selectable")},p.prototype.selected=function(){return this.state("selected")},p.prototype.select=function(e){return!this.selectable()||this.selected()?this:(this.tree.select(this,e),this.state("selected",!0),this.$emit("selected"),this)},p.prototype.unselect=function(){return this.selectable()&&this.selected()?(this.tree.unselect(this),this.state("selected",!1),this.$emit("unselected"),this):this},p.prototype.checked=function(){return this.state("checked")},p.prototype.check=function(){var e=this;if(this.checked()||this.disabled())return this;if(this.indeterminate())return this.uncheck();var t=this.tree.options.checkDisabledChildren;return this.tree.options.autoCheckChildren?(this.recurseDown(function(n){n.state("indeterminate",!1),n.disabled()&&!t||n.checked()||(e.tree.check(n),n.state("checked",!0),n.$emit("checked"))}),this.parent&&this.parent.refreshIndeterminateState()):(this.tree.check(this),this.state("checked",!0),this.$emit("checked")),this},p.prototype.uncheck=function(){var e=this;return!this.indeterminate()&&!this.checked()||this.disabled()?this:(this.tree.options.autoCheckChildren?(this.recurseDown(function(t){t.state("indeterminate",!1),t.checked()&&(e.tree.uncheck(t),t.state("checked",!1),t.$emit("unchecked"))}),this.parent&&this.parent.refreshIndeterminateState()):(this.tree.uncheck(this),this.state("checked",!1),this.$emit("unchecked")),this)},p.prototype.show=function(){return this.visible()?this:(this.state("visible",!0),this.$emit("shown"),this)},p.prototype.hide=function(){return this.hidden()?this:(this.state("visible",!1),this.$emit("hidden"),this)},p.prototype.visible=function(){return this.state("visible")},p.prototype.hidden=function(){return!this.state("visible")},p.prototype.enable=function(){return this.enabled()?this:(this.tree.options.autoDisableChildren?(this.state("disabled",!1),this.$emit("enabled")):this.recurseDown(function(e){e.disabled()&&(e.state("disabled",!1),e.$emit("enabled"))}),this)},p.prototype.enabled=function(){return!this.state("disabled")},p.prototype.disable=function(){return this.disabled()?this:(this.tree.options.autoDisableChildren?this.recurseDown(function(e){e.enabled()&&(e.state("disabled",!0),e.$emit("disabled"))}):(this.state("disabled",!0),this.$emit("disabled")),this)},p.prototype.disabled=function(){return this.state("disabled")},p.prototype.expandTop=function(e){var t=this;this.recurseUp(function(n){n.state("expanded",!0),!0!==e&&t.$emit("expanded",n)})},p.prototype.expand=function(){var e=this;return this.canExpand()?(this.isBatch?this.tree.loadChildren(this).then(function(t){e.state("expanded",!0),e.$emit("expanded")}):(this.state("expanded",!0),this.$emit("expanded")),this):this},p.prototype.canExpand=function(){return this.collapsed()&&this.hasChildren()&&(!this.tree.autoDisableChildren||this.disabled())},p.prototype.canCollapse=function(){return this.expanded()&&this.hasChildren()&&(!this.tree.autoDisableChildren||this.disabled())},p.prototype.expanded=function(){return this.state("expanded")},p.prototype.collapse=function(){return this.canCollapse()?(this.state("expanded",!1),this.$emit("collapsed"),this):this},p.prototype.collapsed=function(){return!this.state("expanded")},p.prototype.toggleExpand=function(){return this._toggleOpenedState()},p.prototype.toggleCollapse=function(){return this._toggleOpenedState()},p.prototype._toggleOpenedState=function(){return this.canCollapse()?this.collapse():this.canExpand()?this.expand():void 0},p.prototype.isDropable=function(){return this.enabled()&&this.state("dropable")},p.prototype.isDraggable=function(){return this.enabled()&&this.state("draggable")&&!this.isEditing},p.prototype.startDragging=function(){return!(!this.isDraggable()||this.state("dragging")||this.isRoot()&&1===this.tree.model.length||(this.tree.options.store&&(this.tree.__silence=!0),this.select(),this.state("dragging",!0),this.$emit("dragging:start"),this.tree.__silence=!1,0))},p.prototype.finishDragging=function(e,t){if(e.isDropable()||"drag-on"!==t){var n=this.tree,o=this.clone(),i=this.parent;o.id=this.id,n.__silence=!0,"drag-on"===t?n.append(e,o):"drag-below"===t?n.after(e,o):"drag-above"===t&&n.before(e,o),this.remove(),e.refreshIndeterminateState(),i&&i.refreshIndeterminateState(),n.__silence=!1,o.state("dragging",!1),this.state("dragging",!1),this.$emit("dragging:finish"),o.state("selected")&&(n.selectedNodes.remove(this),n.selectedNodes.add(o),n.vm.$set(this.state,"selected",!1),n.vm.$set(o.state,"selected",!0)),this.tree.options.store&&this.tree.vm.$emit("LIQUOR_NOISE")}},p.prototype.startEditing=function(){if(this.disabled())return!1;this.isEditing||(this.tree._editingNode=this,this.tree.activeElement=this,this.isEditing=!0,this.$emit("editing:start"))},p.prototype.stopEditing=function(e){if(this.isEditing){this.isEditing=!1,this.tree._editingNode=null,this.tree.activeElement=null;var t=this.text;e&&!1!==e&&this.text!==e&&(this.text=e),this.$emit("editing:stop",t)}},p.prototype.index=function(e){return this.tree.index(this,e)},p.prototype.first=function(){return this.hasChildren()?this.children[0]:null},p.prototype.last=function(){return this.hasChildren()?this.children[this.children.length-1]:null},p.prototype.next=function(){return this.tree.nextNode(this)},p.prototype.prev=function(){return this.tree.prevNode(this)},p.prototype.insertAt=function(e,t){var n=this;if(void 0===t&&(t=this.children.length),e)return e=this.tree.objectToNode(e),Array.isArray(e)?(e.reverse().map(function(e){return n.insertAt(e,t)}),new h(this.tree,[].concat(e))):(e.parent=this,this.children.splice(t,0,e),e.disabled()&&e.hasChildren()&&e.recurseDown(function(e){e.state("disabled",!0)}),this.isBatch||this.$emit("added",e),e)},p.prototype.addChild=function(e){return this.insertAt(e)},p.prototype.append=function(e){return this.addChild(e)},p.prototype.prepend=function(e){return this.insertAt(e,0)},p.prototype.before=function(e){return this.tree.before(this,e)},p.prototype.after=function(e){return this.tree.after(this,e)},p.prototype.empty=function(){for(var e;e=this.children.pop();)e.remove();return this},p.prototype.remove=function(){return this.tree.removeNode(this)},p.prototype.removeChild=function(e){var t=this.find(e);return t?this.tree.removeNode(t):null},p.prototype.find=function(e,t){return this.tree.isNode(e)?e:a(this.children,e,t)},p.prototype.focus=function(){this.vm&&this.vm.focus()},p.prototype.hasChildren=function(){return this.showChildren&&this.isBatch||this.children.length>0},p.prototype.isRoot=function(){return null===this.parent},p.prototype.clone=function(){return this.tree.objectToNode(this.toJSON())},p.prototype.toJSON=function(){var e=this;return{text:this.text,data:this.data,state:this.states,children:this.children.map(function(t){return e.tree.objectToNode(t).toJSON()})}},Object.defineProperties(p.prototype,u);var f={selected:!1,selectable:!0,checked:!1,expanded:!1,disabled:!1,visible:!0,indeterminate:!1,matched:!1,editable:!0,dragging:!1,draggable:!0,dropable:!0};function g(e){return void 0===e&&(e={}),Object.assign({},f,e)}function m(e,t){var n=null;if(t instanceof p)return t;if("string"==typeof t)n=new p(e,{text:t,state:g(),id:c()});else{if(Array.isArray(t))return t.map(function(t){return m(e,t)});(n=new p(e,t)).states=g(n.states),n.id||(n.id=c()),n.children.length&&(n.children=n.children.map(function(t){return(t=m(e,t)).parent=n,t}))}return n}var x=function(e){function t(){e.apply(this,arguments)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.empty=function(){return this.splice(0,this.length),this},t.prototype.has=function(e){return this.includes(e)},t.prototype.add=function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this).push.apply(e,t),this},t.prototype.remove=function(e){var t=this.indexOf(e);return-1===t?this:(this.splice(t,1),this)},t.prototype.removeAll=function(e){for(;this.includes(e);)this.remove(e);return this},t.prototype.top=function(){return this[this.length-1]},t}(Array),y={id:"id",text:"text",children:"children",state:"state",data:"data",isBatch:"isBatch"};var b=function(e,t,n){void 0===n&&(n={}),"string"==typeof e&&(e=JSON.parse(e)),Array.isArray(e)||(e=[e]);var o=Object.assign({},y,n);return e.map(function e(t){var n=function(e,t){return{id:e[t.id],text:e[t.text],children:e[t.children],state:e[t.state],data:e[t.data],isBatch:e[t.isBatch]}}(t,o);return n.children&&!Array.isArray(n.children)&&(n.children=[n.children]),n.children&&(n.children=n.children.map(e)),n}).map(function(e){return m(t,e)})};function v(e){return function(e){return new Promise(function(t,n){var o=new XMLHttpRequest;o.open("GET",e),o.setRequestHeader("Content-Type","application/json"),o.addEventListener("load",function(e){try{var i=JSON.parse(o.response);t(i)}catch(e){n(e)}}),o.send(null)})}(e)}function N(e,t){return e.text<t.text?-1:e.text>t.text?1:0}function k(e,t){return e.text<t.text?1:e.text>t.text?-1:0}function w(e,t){"string"==typeof t&&(t=function(e){switch(e.toLowerCase()){case"asc":return N;case"desc":return k}}(t)),Array.isArray(e)&&"function"==typeof t&&e.sort(t)}function T(e){return new Promise(function(t){setTimeout(t,e)})}var C=function(e){var t=this;this.vm=e,this.options=e.opts,this.activeElement=null;var n,o=this.options.fetchData;"string"==typeof o&&(this.options.fetchData=(n=function(e){return function(t){for(var n,o=/{([^}]+)}/,i=e;n=o.exec(i);)i=i.replace(n[0],t[n[1]]);return i}}(o),function(e){return v(n(e)).catch(t.options.onFetchError)}))};C.prototype.$on=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$on.apply(t,[e].concat(n))},C.prototype.$once=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$once.apply(t,[e].concat(n))},C.prototype.$off=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];(t=this.vm).$off.apply(t,[e].concat(n))},C.prototype.$emit=function(e){for(var t,n=[],o=arguments.length-1;o-- >0;)n[o]=arguments[o+1];this.__silence||((t=this.vm).$emit.apply(t,[e].concat(n)),this.options.store&&this.vm.$emit("LIQUOR_NOISE"))},C.prototype._sort=function(e,t,n){!1!==n&&this.recurseDown(e,function(e){e.hasChildren()&&w(e.children,t)}),w(e,t)},C.prototype.sortTree=function(e,t){this._sort(this.model,e,t)},C.prototype.sort=function(e,t,n){var o=this,i=this.find(e,!0);i&&t&&i.forEach(function(e){o._sort(e.children,t,n)})},C.prototype.clearFilter=function(){this.recurseDown(function(e){e.state("matched",!1),e.state("visible",!0),e.state("expanded",e.__expanded),e.__expanded=void 0,e.showChildren=!0}),this.vm.matches.length=0,this.vm.$emit("tree:filtered",[],"")},C.prototype.filter=function(e){if(!e)return this.clearFilter();var t=[],n=this.options.filter.matcher,o=this.options.filter,i=o.showChildren,r=o.plainList;return this.recurseDown(function(o){n(e,o)&&t.push(o),o.showChildren=!0,void 0===o.__expanded&&(o.__expanded=o.state("expanded")),o.state("visible",!1),o.state("matched",!1),o.state("expanded",!0)}),t.reverse().forEach(function(e){e.state("matched",!0),e.state("visible",!0),e.showChildren=!r,e.hasChildren()&&e.recurseDown(function(e){e.state("visible",!!i)},!0),e.recurseUp(function(e){e.state("visible",!0),e.state("expanded",!0)}),e.hasChildren()&&e.state("expanded",!1)}),this.vm.matches=t,this.vm.$emit("tree:filtered",t,e),t},C.prototype.selected=function(){return new(Function.prototype.bind.apply(h,[null].concat([this],this.selectedNodes)))},C.prototype.checked=function(){return this.options.checkbox?new(Function.prototype.bind.apply(h,[null].concat([this],this.checkedNodes))):null},C.prototype.loadChildren=function(e){var t=this;if(e){this.$emit("tree:data:fetch",e),this.options.minFetchDelay>0&&e.vm&&(e.vm.loading=!0);var n=this.fetch(e).then(function(n){e.append(n),e.isBatch=!1,t.options.autoCheckChildren&&(e.checked()&&e.recurseDown(function(e){e.state("checked",!0)}),e.refreshIndeterminateState()),t.$emit("tree:data:received",e)});return Promise.all([T(this.options.minFetchDelay),n]).then(function(t){return e.vm&&(e.vm.loading=!1),n})}},C.prototype.fetch=function(e,t){var n=this,o=this.options.fetchData(e);return o.then||(o=v(o).catch(this.options.onFetchError)),!1===t?o:o.then(function(e){return n.parse(e,n.options.modelParse)}).catch(this.options.onFetchError)},C.prototype.fetchInitData=function(){return this.fetch({id:"root",name:"root"},!1)},C.prototype.setModel=function(e){var t=this;if(this.model=this.parse(e,this.options.modelParse),this.vm.model=this.model,this.selectedNodes=new x,this.checkedNodes=new x,i(this.model,function(e){e.tree=t,e.selected()&&t.selectedNodes.add(e),e.checked()&&(t.checkedNodes.add(e),e.parent&&e.parent.refreshIndeterminateState()),t.options.autoDisableChildren&&e.disabled()&&e.recurseDown(function(e){e.state("disabled",!0)})}),!this.options.multiple&&this.selectedNodes.length){var n=this.selectedNodes.top();this.selectedNodes.forEach(function(e){n!==e&&e.state("selected",!1)}),this.selectedNodes.empty().add(n)}this.options.checkOnSelect&&this.options.checkbox&&this.unselectAll()},C.prototype.recurseDown=function(e,t){return!t&&e&&(t=e,e=this.model),i(e,t)},C.prototype.select=function(e,t){var n=this.getNode(e);return!!n&&(this.options.multiple&&t?this.selectedNodes.add(n):(this.unselectAll(),this.selectedNodes.empty().add(n)),!0)},C.prototype.selectAll=function(){var e=this;return!!this.options.multiple&&(this.selectedNodes.empty(),this.recurseDown(function(t){e.selectedNodes.add(t.select(!0))}),!0)},C.prototype.unselect=function(e){var t=this.getNode(e);return!!t&&(this.selectedNodes.remove(t),!0)},C.prototype.unselectAll=function(){for(var e;e=this.selectedNodes.pop();)e.unselect();return!0},C.prototype.check=function(e){this.checkedNodes.add(e)},C.prototype.uncheck=function(e){this.checkedNodes.remove(e)},C.prototype.checkAll=function(){this.recurseDown(function(e){0===e.depth&&(e.indeterminate()&&e.state("indeterminate",!1),e.check())})},C.prototype.uncheckAll=function(){for(var e;e=this.checkedNodes.pop();)e.uncheck();return!0},C.prototype.expand=function(e){return!e.expanded()&&(e.expand(),!0)},C.prototype.collapse=function(e){return!e.collapsed()&&(e.collapse(),!0)},C.prototype.toggleExpand=function(e){return!!e.hasChildren()&&(e.toggleExpand(),!0)},C.prototype.toggleCollapse=function(e){return!!e.hasChildren()&&(e.toggleCollapse(),!0)},C.prototype.expandAll=function(){this.recurseDown(function(e){e.hasChildren()&&e.collapsed()&&e.expand()})},C.prototype.collapseAll=function(){this.recurseDown(function(e){e.hasChildren()&&e.expanded()&&e.collapse()})},C.prototype.index=function(e,t){var n=e.parent,o=(n=n?n.children:this.model).indexOf(e);return t?{index:o,target:n,node:n[o]}:o},C.prototype.nextNode=function(e){var t=this.index(e,!0);return t.target[t.index+1]||null},C.prototype.nextVisibleNode=function(e){if(e.hasChildren()&&e.expanded())return e.first();var t=this.nextNode(e);return!t&&e.parent?e.parent.next():t},C.prototype.prevNode=function(e){var t=this.index(e,!0);return t.target[t.index-1]||null},C.prototype.prevVisibleNode=function(e){var t=this.prevNode(e);return t?t.hasChildren()&&t.expanded()?t.last():t:e.parent},C.prototype.addToModel=function(e,t){var n=this;return void 0===t&&(t=this.model.length),e=this.objectToNode(e),this.model.splice(t,0,e),this.recurseDown(e,function(e){e.tree=n}),this.$emit("node:added",e),e},C.prototype.append=function(e,t){var n=this.find(e);return!!n&&n.append(t)},C.prototype.prepend=function(e,t){var n=this.find(e);return!!n&&n.prepend(t)},C.prototype.before=function(e,t){e=this.find(e);var n=this.index(e,!0),o=this.objectToNode(t);return!!~n.index&&(n.target.splice(n.index,0,o),o.parent=e.parent,this.$emit("node:added",o),o)},C.prototype.after=function(e,t){e=this.find(e);var n=this.index(e,!0),o=this.objectToNode(t);return!!~n.index&&(n.target.splice(n.index+1,0,o),o.parent=e.parent,this.$emit("node:added",o),o)},C.prototype.addNode=function(e){var t=this.model.length;return e=m(e),this.model.splice(t,0,e),this.$emit("node:added",e),e},C.prototype.remove=function(e,t){return this.removeNode(this.find(e,t))},C.prototype.removeNode=function(e){if(e instanceof h)return e.remove();if(!e)return!1;if(e.parent){var t=e.parent.children;~t.indexOf(e)&&t.splice(t.indexOf(e),1)}else~this.model.indexOf(e)&&this.model.splice(this.model.indexOf(e),1);e.parent&&e.parent.indeterminate()&&!e.parent.hasChildren()&&e.parent.state("indeterminate",!1),null!==this.activeElement&&e.id===this.activeElement.id&&(this.activeElement=null),e.parent=null,this.$emit("node:removed",e),this.selectedNodes.remove(e),this.checkedNodes.remove(e);var n=this.vm.matches;return n&&n.length&&n.includes(e)&&n.splice(n.indexOf(e),1),e},C.prototype.isNode=function(e){return e instanceof p},C.prototype.find=function(e,t){if(this.isNode(e))return e;var n=a(this.model,e);return n&&n.length?new h(this,!0===t?n:[n[0]]):null},C.prototype.getNodeById=function(e){var t=null;return i(this.model,function(n){if(""+n.id===e)return t=n,!1}),t},C.prototype.getNode=function(e){return this.isNode(e)?e:null},C.prototype.objectToNode=function(e){return m(this,e)},C.prototype.parse=function(e,t){t||(t=this.options.propertyNames);try{return b(e,this,t)}catch(e){return console.error(e),[]}};var M={ARROW_LEFT:37,ARROW_TOP:38,ARROW_RIGHT:39,ARROW_BOTTOM:40,SPACE:32,DELETE:46,ENTER:13,ESC:27},S=[37,38,39,40,32];function D(e){e.vm.$el.addEventListener("keydown",function(t){var n=t.keyCode,o=e.activeElement;if(e.isNode(o))if(o.isEditing)switch(n){case M.ESC:return o.stopEditing(!1)}else switch(S.includes(n)&&(t.preventDefault(),t.stopPropagation()),n){case M.ARROW_LEFT:return function(e,t){if(t.expanded())t.collapse();else{var n=t.parent;n&&n.focus()}}(0,o);case M.ARROW_RIGHT:return function(e,t){if(t.collapsed())t.expand();else{var n=t.first();n&&n.focus()}}(0,o);case M.ARROW_TOP:return function e(t,n){var o=t.prevVisibleNode(n);if(o)return o.disabled()?e(t,o):void o.focus()}(e,o);case M.ARROW_BOTTOM:return function e(t,n){var o=t.nextVisibleNode(n);if(o)return o.disabled()?e(t,o):void o.focus()}(e,o);case M.SPACE:case M.ENTER:return function(e,t){e.options.checkbox&&(t.checked()?t.uncheck():t.check())}(e,o);case M.DELETE:return function(e,t){var n=e.options.deletion;n&&("function"==typeof n?!0===n(t)&&t.remove():!0===n&&t.remove())}(e,o)}},!0)}function E(e,t){if(!1===e)throw new Error(t)}var j={mounted:function(){var e,t=this,n=new C(this);this.tree=n,this._provided.tree=n,!this.data&&this.opts.fetchData?e=n.fetchInitData():this.data&&this.data.then?(e=this.data,this.loading=!0):e=Promise.resolve(this.data),e.then(function(e){e||(e=[]),t.opts.store?t.connectStore(t.opts.store):t.tree.setModel(e),t.loading&&(t.loading=!1),t.$emit("tree:mounted",t),function(e){var t=e.opts,n=t.multiple,o=t.checkbox,i=e.tree,r=function(t){var i=e.selected();o?e.$emit("input",{selected:n?i:i[0]||null,checked:e.checked()}):e.$emit("input",n?i:i[0]||null)};r(),i.$on("node:selected",r),i.$on("node:unselected",r),o&&(i.$on("node:checked",r),i.$on("node:unchecked",r)),i.$on("node:added",function(e,t){var n=t||e;o&&(n.state("checked")&&!i.checkedNodes.has(n)&&i.checkedNodes.add(n),n.refreshIndeterminateState()),n.state("selected")&&!i.selectedNodes.has(n)&&i.select(n),r()})}(t)}),!1!==this.opts.keyboardNavigation&&D(n)},methods:{connectStore:function(e){var t=this,n=e.store,o=e.mutations,i=e.getter,r=e.dispatcher;E("function"==typeof i,"`getter` must be a function"),E("function"==typeof r,"`dispatcher` must be a function"),void 0!==o&&E(Array.isArray(o),"`mutations` must be an array"),n.subscribe(function(e,n){o?o.includes(e.type)&&t.tree.setModel(i()):t.tree.setModel(i())}),this.tree.setModel(i()),this.$on("LIQUOR_NOISE",function(){t.$nextTick(function(e){r(t.toJSON())})})},recurseDown:function(e){this.tree.recurseDown(e)},selected:function(){return this.tree.selected()},checked:function(){return this.tree.checked()},append:function(e,t){return t?this.tree.append(e,t):this.tree.addToModel(e,this.tree.model.length)},prepend:function(e,t){return t?this.tree.prepend(e,t):this.tree.addToModel(e,0)},addChild:function(e,t){return this.append(e,t)},remove:function(e,t){return this.tree.remove(e,t)},before:function(e,t){return t?this.tree.before(e,t):this.prepend(e)},after:function(e,t){return t?this.tree.after(e,t):this.append(e)},find:function(e,t){return this.tree.find(e,t)},findAll:function(e){return this.tree.find(e,!0)},expandAll:function(){return this.tree.expandAll()},collapseAll:function(){return this.tree.collapseAll()},sortTree:function(e,t){return this.tree.sortTree(e,t)},sort:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];return(e=this.tree).sort.apply(e,t)},setModel:function(e){return this.tree.setModel(e)},getRootNode:function(){return 1===this.tree.model.length?this.tree.model[0]:this.tree.model},toJSON:function(){return JSON.parse(JSON.stringify(this.model))}}},_={ABOVE:"drag-above",BELOW:"drag-below",ON:"drag-on"};function O(e){return e.path?e.path:e.composedPath?e.composedPath():function(e){for(var t=e.target,n=[];t;){if(n.push(t),"HTML"===t.tagName)return n.push(document),n.push(window),n;t=t.parentElement}return n}(e)}function A(e){return function(e){for(var t,n=0,o=O(e);n<o.length;n++)if(t=o[n].className||"",/tree-node/.test(t))return o[n];return null}(e)||null}function L(e,t){if(e){var n=e.className;if(t)new RegExp(t).test(n)||(n+=" "+t);else{for(var o in _)n=n.replace(_[o],"");n.replace("dragging","")}e.className=n.replace(/\s+/g," ")}}function P(e,t,n){if(t&&t[n]&&"function"==typeof t[n])return!1!==t[n].apply(t,e)}var R={methods:{onDragStart:function(e){e.preventDefault()},startDragging:function(e,t){e.isDraggable()&&!1!==P([e],this.tree.options.dnd,"onDragStart")&&(this.$$startDragPosition=[t.clientX,t.clientY],this.$$possibleDragNode=e,this.initDragListeners())},initDragListeners:function(){var e,t=this,n=function(){window.removeEventListener("mouseup",o,!0),window.removeEventListener("mousemove",i,!0)},o=function(o){t.$$startDragPosition||o.stopPropagation(),t.draggableNode&&t.draggableNode.node.state("dragging",!1),t.$$dropDestination&&t.tree.isNode(t.$$dropDestination)&&t.$$dropDestination.vm&&(L(t.$$dropDestination.vm.$el,null),!1!==P([t.draggableNode.node,t.$$dropDestination,e],t.tree.options.dnd,"onDragFinish")&&(t.$$dropDestination.isDropable()||e!==_.ON)&&e&&t.draggableNode.node.finishDragging(t.$$dropDestination,e),t.$$dropDestination=null),t.$$possibleDragNode=null,t.$set(t,"draggableNode",null),n()},i=function(o){if(!t.$$startDragPosition||function(e,t){return Math.abs(e.clientX-t[0])>5||Math.abs(e.clientY-t[1])>5}(o,t.$$startDragPosition)){if(t.$$startDragPosition=null,t.$$possibleDragNode){if(!1===t.$$possibleDragNode.startDragging())return n(),void(t.$$possibleDragNode=null);t.$set(t,"draggableNode",{node:t.$$possibleDragNode,left:0,top:0}),t.$$possibleDragNode=null}t.draggableNode.left=o.clientX,t.draggableNode.top=o.clientY;var i=A(o);if(function(e){for(var t in _)for(var n=e.querySelectorAll("."+_[t]),o=0;o<n.length;o++)L(n[o])}(t.$el),i){var r=i.getAttribute("data-id");if(t.draggableNode.node.id===r)return;if(t.$$dropDestination&&t.$$dropDestination.id===r||(t.$$dropDestination=t.tree.getNodeById(r)),t.$$dropDestination&&t.draggableNode.node&&t.$$dropDestination.getPath().includes(t.draggableNode.node))return void(t.$$dropDestination=null);e=function(e,t){var n=t.getBoundingClientRect(),o=n.height/3,i=_.ON;return n.top+o>=e.clientY?i=_.ABOVE:n.top+2*o<=e.clientY&&(i=_.BELOW),i}(o,i);var s=P([t.draggableNode.node,t.$$dropDestination,e],t.tree.options.dnd,"onDragOn");t.$$dropDestination.isDropable()&&!1!==s||e!==_.ON||(e=null),L(i,e)}}};window.addEventListener("mouseup",o,!0),window.addEventListener("mousemove",i,!0)}}};!function(){if("undefined"!=typeof document){var e=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style"),n=" .tree { overflow: auto; } .tree-root, .tree-children { list-style: none; padding: 0; } .tree > .tree-root, .tree > .tree-filter-empty { padding: 3px; box-sizing: border-box; } .tree.tree--draggable .tree-node:not(.selected) > .tree-content:hover { background: transparent; } .drag-above, .drag-below, .drag-on { position: relative; z-index: 1; } .drag-on > .tree-content { background: #fafcff; outline: 1px solid #7baff2; } .drag-above > .tree-content::before, .drag-below > .tree-content::after { display: block; content: ''; position: absolute; height: 8px; left: 0; right: 0; z-index: 2; box-sizing: border-box; background-color: #3367d6; border: 3px solid #3367d6; background-clip: padding-box; border-bottom-color: transparent; border-top-color: transparent; border-radius: 0; } .drag-above > .tree-content::before { top: 0; transform: translateY(-50%); } .drag-below > .tree-content::after { bottom: 0; transform: translateY(50%); } ";t.type="text/css",t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),e.appendChild(t)}}();var B={direction:"ltr",multiple:!0,checkbox:!1,checkOnSelect:!1,autoCheckChildren:!0,autoDisableChildren:!0,checkDisabledChildren:!0,parentSelect:!1,keyboardNavigation:!0,nodeIndent:24,minFetchDelay:0,fetchData:null,propertyNames:null,deletion:!1,dnd:!1,editing:!1,onFetchError:function(e){throw e}},I={emptyText:"Nothing found!",matcher:function(e,t){var n=new RegExp(e,"i").test(t.text);return!(n&&t.parent&&new RegExp(e,"i").test(t.parent.text))&&n},plainList:!1,showChildren:!0},V={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(e.tag,{tag:"component",class:{tree:!0,"tree-loading":this.loading,"tree--draggable":!!this.draggableNode},attrs:{role:"tree"}},[e.filter&&0==e.matches.length?[n("div",{staticClass:"tree-filter-empty",domProps:{innerHTML:e._s(e.opts.filter.emptyText)}})]:[n("ul",{staticClass:"tree-root",on:{dragstart:e.onDragStart}},[e.opts.filter.plainList&&e.matches.length>0?e._l(e.matches,function(t){return t.visible()?n("TreeNode",{key:t.id,attrs:{node:t,options:e.opts}}):e._e()}):e._l(e.model,function(t){return t&&t.visible()?n("TreeNode",{key:t.id,attrs:{node:t,options:e.opts}}):e._e()})],2)],e._v(" "),e.draggableNode?n("DraggableNode",{attrs:{target:e.draggableNode}}):e._e()],2)},staticRenderFns:[],name:"Tree",components:{TreeNode:o,DraggableNode:{render:function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"tree-dragnode",style:this.style},[this._v(" "+this._s(this.target.node.text)+" ")])},staticRenderFns:[],name:"DragNode",props:["target"],computed:{style:function(){return void 0===this.target.top?"display: none":"top: "+this.target.top+"px; left: "+this.target.left+"px"}}}},mixins:[j,R],provide:function(e){return{tree:null}},props:{data:{},options:{type:Object,default:function(e){return{}}},filter:String,tag:{type:String,default:"div"}},watch:{filter:function(e){this.tree.filter(e)}},data:function(){var e=Object.assign({},B,this.options);return e.filter=Object.assign({},I,e.filter),{model:null,tree:null,loading:!1,opts:e,matches:[],draggableNode:null}}};V.install=function(e){e.component(V.name,V)},"undefined"!=typeof window&&window.Vue&&window.Vue.use(V);var F=V,J=n(0),G=n(1);new Vue({el:"#appList",components:{LiquorTree:F,codeMirrorComponent:G.codeMirrorComponent},data:function(){return{editMode:!1,componentKey:1,boxmodel:[],treeFilter0:"",treeOptions0:{filter:{emptyText:""}},treeData:this.getData(),treeOptions:{}}},mounted(){$("#filter").focus()},methods:{filter(){},getData:()=>fetch("/GetNoteTree").then(e=>e.json()).catch(e=>console.log(e)),getNote(e){J.noteJsModel.getNote(e).then(e=>{console.log(e.data.model),this.boxmodel=[],this.boxmodel.push(e.data.model),this.$nextTick(function(){this.componentKey+=1})})},updateCodeMirrorText(e){console.log(e),this.boxmodel[0].code[e.index].mainbody=e.value},search:function(){console.log(this.$refs)},updateNote(){var e=this.boxmodel[0];J.noteJsModel.updateNote(e).then(e=>{this.editMode=!1,alert("The recorde was updated successfully."),this.$nextTick(function(){this.componentKey+=1})})},editMode(){alert("editMode"),this.editMode?this.editMode=!1:this.editMode=!0},onNodeSelected(e){0==e.children.length&&this.getNote(e)}}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,